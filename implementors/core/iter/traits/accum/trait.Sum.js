(function() {var implementors = {};
implementors["bitvec"] = [{"text":"impl&lt;R&gt; Sum&lt;BitSel&lt;R&gt;&gt; for BitMask&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: BitRegister,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T:&nbsp;Integer + Clone&gt; Sum&lt;Ratio&lt;T&gt;&gt; for Ratio&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Integer + Clone&gt; Sum&lt;&amp;'a Ratio&lt;T&gt;&gt; for Ratio&lt;T&gt;","synthetic":false,"types":[]}];
implementors["uom"] = [{"text":"impl&lt;D:&nbsp;?Sized, U:&nbsp;?Sized, V&gt; Sum&lt;Quantity&lt;D, U, V&gt;&gt; for Quantity&lt;D, U, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Dimension,<br>&nbsp;&nbsp;&nbsp;&nbsp;D::Kind: Add,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Units&lt;V&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Num + Conversion&lt;V&gt; + Sum,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()