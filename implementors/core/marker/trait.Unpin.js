(function() {var implementors = {};
implementors["adler32"] = [{"text":"impl Unpin for RollingAdler32","synthetic":true,"types":[]}];
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; Unpin for AhoCorasick&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Unpin for FindIter&lt;'a, 'b, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Unpin for FindOverlappingIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, S&gt; Unpin for StreamFindIter&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AhoCorasickBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for MatchKind","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for MatchKind","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for Searcher","synthetic":true,"types":[]},{"text":"impl&lt;'s, 'h&gt; Unpin for FindIter&lt;'s, 'h&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Match","synthetic":true,"types":[]}];
implementors["ansi_term"] = [{"text":"impl Unpin for Prefix","synthetic":true,"types":[]},{"text":"impl Unpin for Infix","synthetic":true,"types":[]},{"text":"impl Unpin for Suffix","synthetic":true,"types":[]},{"text":"impl Unpin for Style","synthetic":true,"types":[]},{"text":"impl Unpin for Colour","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Unpin for ANSIGenericString&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Unpin for ANSIGenericStrings&lt;'a, S&gt;","synthetic":true,"types":[]}];
implementors["anyhow"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Chain&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; Unpin for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for CapacityError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; Unpin for Drain&lt;'a, A&gt;","synthetic":true,"types":[]}];
implementors["async_channel"] = [{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RecvError","synthetic":true,"types":[]},{"text":"impl Unpin for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Send&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Recv&lt;'a, T&gt;","synthetic":false,"types":[]}];
implementors["async_executor"] = [{"text":"impl&lt;'a&gt; Unpin for Executor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LocalExecutor&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["async_fs"] = [{"text":"impl Unpin for ReadDir","synthetic":true,"types":[]},{"text":"impl Unpin for DirEntry","synthetic":true,"types":[]},{"text":"impl Unpin for DirBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for File","synthetic":true,"types":[]},{"text":"impl Unpin for OpenOptions","synthetic":true,"types":[]}];
implementors["async_io"] = [{"text":"impl Unpin for Timer","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Async&lt;T&gt;","synthetic":false,"types":[]}];
implementors["async_lock"] = [{"text":"impl Unpin for Barrier","synthetic":true,"types":[]},{"text":"impl Unpin for BarrierWaitResult","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for MutexGuardArc&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for RwLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockUpgradableReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Semaphore","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SemaphoreGuard&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SemaphoreGuardArc","synthetic":true,"types":[]}];
implementors["async_net"] = [{"text":"impl Unpin for UnixListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for UnixStream","synthetic":true,"types":[]},{"text":"impl Unpin for UnixDatagram","synthetic":true,"types":[]},{"text":"impl Unpin for TcpListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TcpStream","synthetic":true,"types":[]},{"text":"impl Unpin for UdpSocket","synthetic":true,"types":[]}];
implementors["async_process"] = [{"text":"impl Unpin for Child","synthetic":true,"types":[]},{"text":"impl Unpin for ChildStdin","synthetic":true,"types":[]},{"text":"impl Unpin for ChildStdout","synthetic":true,"types":[]},{"text":"impl Unpin for ChildStderr","synthetic":true,"types":[]},{"text":"impl Unpin for Command","synthetic":true,"types":[]}];
implementors["async_task"] = [{"text":"impl Unpin for Runnable","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Task&lt;T&gt;","synthetic":false,"types":[]}];
implementors["atomic_waker"] = [{"text":"impl Unpin for AtomicWaker","synthetic":true,"types":[]}];
implementors["atty"] = [{"text":"impl Unpin for Stream","synthetic":true,"types":[]}];
implementors["base64"] = [{"text":"impl&lt;'a&gt; Unpin for Base64Display&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Unpin for DecoderReader&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Unpin for EncoderWriter&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DecodeError","synthetic":true,"types":[]},{"text":"impl Unpin for CharacterSet","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]}];
implementors["bitvec"] = [{"text":"impl&lt;'a, O, T&gt; Unpin for BitDomain&lt;'a, O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for BitDomainMut&lt;'a, O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Domain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for DomainMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for BitIdx&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for BitTail&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for BitPos&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for BitSel&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for BitMask&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Msb0","synthetic":true,"types":[]},{"text":"impl Unpin for Lsb0","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for Iter&lt;'a, O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for IterMut&lt;'a, O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as BitStore&gt;::Alias as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for Windows&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for Chunks&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for ChunksMut&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for ChunksExact&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for ChunksExactMut&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for RChunks&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for RChunksMut&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for RChunksExact&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for RChunksExactMut&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Unpin for Split&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Unpin for SplitMut&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Unpin for RSplit&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Unpin for RSplitMut&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Unpin for SplitN&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Unpin for SplitNMut&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Unpin for RSplitN&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Unpin for RSplitNMut&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for BitMut&lt;'a, O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;O, T&gt; Unpin for BitSlice&lt;O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;O, T&gt; Unpin for IntoIter&lt;O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for Drain&lt;'a, O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, I&gt; Unpin for Splice&lt;'a, O, T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;O, V&gt; Unpin for BitArray&lt;O, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: BitOrder,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: BitView + Sized,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;O, T&gt; Unpin for BitBox&lt;O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: BitOrder,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BitStore,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;O, T&gt; Unpin for BitVec&lt;O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: BitOrder,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BitStore,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["block_buffer"] = [{"text":"impl&lt;BlockSize&gt; Unpin for BlockBuffer&lt;BlockSize&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;BlockSize as ArrayLength&lt;u8&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["blocking"] = [{"text":"impl&lt;T&gt; Unpin for Unblock&lt;T&gt;","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl Unpin for BigEndian","synthetic":true,"types":[]},{"text":"impl Unpin for LittleEndian","synthetic":true,"types":[]}];
implementors["bytes"] = [{"text":"impl&lt;T, U&gt; Unpin for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Limit&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Reader&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Take&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UninitSlice","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Writer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Bytes","synthetic":true,"types":[]},{"text":"impl Unpin for BytesMut","synthetic":true,"types":[]}];
implementors["bzip2"] = [{"text":"impl Unpin for Compress","synthetic":true,"types":[]},{"text":"impl Unpin for Decompress","synthetic":true,"types":[]},{"text":"impl Unpin for Action","synthetic":true,"types":[]},{"text":"impl Unpin for Status","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for BzEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for BzDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for BzEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for BzDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for BzEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for BzDecoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Compression","synthetic":true,"types":[]}];
implementors["bzip2_sys"] = [{"text":"impl Unpin for bz_stream","synthetic":true,"types":[]}];
implementors["cache_padded"] = [{"text":"impl&lt;T&gt; Unpin for CachePadded&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["cesu8"] = [{"text":"impl Unpin for Cesu8DecodingError","synthetic":true,"types":[]}];
implementors["chrono"] = [{"text":"impl Unpin for FixedOffset","synthetic":true,"types":[]},{"text":"impl Unpin for Local","synthetic":true,"types":[]},{"text":"impl Unpin for Utc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for LocalResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for NaiveDate","synthetic":true,"types":[]},{"text":"impl Unpin for NaiveDateTime","synthetic":true,"types":[]},{"text":"impl Unpin for IsoWeek","synthetic":true,"types":[]},{"text":"impl Unpin for NaiveTime","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; Unpin for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SecondsFormat","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; Unpin for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Parsed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StrftimeItems&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Pad","synthetic":true,"types":[]},{"text":"impl Unpin for Numeric","synthetic":true,"types":[]},{"text":"impl Unpin for InternalNumeric","synthetic":true,"types":[]},{"text":"impl Unpin for Fixed","synthetic":true,"types":[]},{"text":"impl Unpin for InternalFixed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Item&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for DelayedFormat&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RoundingError","synthetic":true,"types":[]},{"text":"impl Unpin for Weekday","synthetic":true,"types":[]},{"text":"impl Unpin for ParseWeekdayError","synthetic":true,"types":[]},{"text":"impl Unpin for Month","synthetic":true,"types":[]},{"text":"impl Unpin for ParseMonthError","synthetic":true,"types":[]}];
implementors["clap"] = [{"text":"impl Unpin for AppSettings","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for App&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for Arg&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ArgMatches&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OsValues&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ArgGroup&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ArgSettings","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SubCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Shell","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["concurrent_queue"] = [{"text":"impl&lt;T&gt; Unpin for ConcurrentQueue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for PopError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PushError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["cpuid_bool"] = [{"text":"impl Unpin for LazyBool","synthetic":true,"types":[]}];
implementors["crc32fast"] = [{"text":"impl Unpin for Hasher","synthetic":true,"types":[]}];
implementors["crypto_mac"] = [{"text":"impl Unpin for MacError","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidKeyLength","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Unpin for Output&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;M as Mac&gt;::OutputSize as ArrayLength&lt;u8&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["digest"] = [{"text":"impl Unpin for InvalidOutputSize","synthetic":true,"types":[]}];
implementors["encoding_rs"] = [{"text":"impl Unpin for Latin1Bidi","synthetic":true,"types":[]},{"text":"impl Unpin for Encoding","synthetic":true,"types":[]},{"text":"impl Unpin for CoderResult","synthetic":true,"types":[]},{"text":"impl Unpin for DecoderResult","synthetic":true,"types":[]},{"text":"impl Unpin for Decoder","synthetic":true,"types":[]},{"text":"impl Unpin for EncoderResult","synthetic":true,"types":[]},{"text":"impl Unpin for Encoder","synthetic":true,"types":[]}];
implementors["env_logger"] = [{"text":"impl Unpin for Filter","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for Timestamp","synthetic":true,"types":[]},{"text":"impl Unpin for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for StyledValue&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Color","synthetic":true,"types":[]},{"text":"impl Unpin for Target","synthetic":true,"types":[]},{"text":"impl Unpin for WriteStyle","synthetic":true,"types":[]},{"text":"impl Unpin for TimestampPrecision","synthetic":true,"types":[]},{"text":"impl Unpin for Formatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Env&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Logger","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]}];
implementors["event_listener"] = [{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for EventListener","synthetic":true,"types":[]}];
implementors["fastrand"] = [{"text":"impl Unpin for Rng","synthetic":true,"types":[]}];
implementors["fd_lock"] = [{"text":"impl&lt;'fdlock, T&gt; Unpin for FdLockGuard&lt;'fdlock, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FdLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["filetime"] = [{"text":"impl Unpin for FileTime","synthetic":true,"types":[]}];
implementors["flate2"] = [{"text":"impl Unpin for Crc","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for CrcReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for CrcWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DeflateEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DeflateDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DeflateEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DeflateDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for DeflateEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for DeflateDecoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for GzEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for GzDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for MultiGzDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for GzEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for GzDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for MultiGzDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for GzEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for GzDecoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for GzHeader","synthetic":true,"types":[]},{"text":"impl Unpin for GzBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Compress","synthetic":true,"types":[]},{"text":"impl Unpin for Decompress","synthetic":true,"types":[]},{"text":"impl Unpin for FlushCompress","synthetic":true,"types":[]},{"text":"impl Unpin for FlushDecompress","synthetic":true,"types":[]},{"text":"impl Unpin for DecompressError","synthetic":true,"types":[]},{"text":"impl Unpin for CompressError","synthetic":true,"types":[]},{"text":"impl Unpin for Status","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ZlibEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ZlibDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ZlibEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ZlibDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for ZlibEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for ZlibDecoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Compression","synthetic":true,"types":[]}];
implementors["fnv"] = [{"text":"impl Unpin for FnvHasher","synthetic":true,"types":[]}];
implementors["form_urlencoded"] = [{"text":"impl&lt;'a&gt; Unpin for Parse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ParseIntoOwned&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ByteSerialize&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Serializer&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["fs_extra"] = [{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for CopyOptions","synthetic":true,"types":[]},{"text":"impl Unpin for TransitProcess","synthetic":true,"types":[]},{"text":"impl Unpin for CopyOptions","synthetic":true,"types":[]},{"text":"impl Unpin for DirOptions","synthetic":true,"types":[]},{"text":"impl Unpin for DirContent","synthetic":true,"types":[]},{"text":"impl Unpin for TransitProcess","synthetic":true,"types":[]},{"text":"impl Unpin for TransitState","synthetic":true,"types":[]},{"text":"impl Unpin for TransitProcessResult","synthetic":true,"types":[]},{"text":"impl Unpin for DirEntryAttr","synthetic":true,"types":[]},{"text":"impl Unpin for DirEntryValue","synthetic":true,"types":[]},{"text":"impl Unpin for LsResult","synthetic":true,"types":[]},{"text":"impl Unpin for TransitProcess","synthetic":true,"types":[]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Cancellation&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Canceled","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnboundedReceiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":false,"types":[]}];
implementors["futures_lite"] = [{"text":"impl Unpin for YieldNow","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for BlockOn&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for BlockOn&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Cursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Empty","synthetic":true,"types":[]},{"text":"impl Unpin for Repeat","synthetic":true,"types":[]},{"text":"impl Unpin for Sink","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WriteHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Pending&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, F&gt; Unpin for PollOnce&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, F&gt; Unpin for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Ready&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, F1, F2&gt; Unpin for Zip&lt;F1, F2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, F1, F2&gt;: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F1: Future,<br>&nbsp;&nbsp;&nbsp;&nbsp;F2: Future,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, F1, F2&gt; Unpin for TryZip&lt;F1, F2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, F1, F2&gt;: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F1: Future,<br>&nbsp;&nbsp;&nbsp;&nbsp;F2: Future,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, F1, F2&gt; Unpin for Or&lt;F1, F2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, F1, F2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, F1, F2&gt; Unpin for Race&lt;F1, F2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, F1, F2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, F&gt; Unpin for CatchUnwind&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Empty&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; Unpin for Iter&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, T&gt; Unpin for Once&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Pending&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; Unpin for PollFn&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Repeat&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; Unpin for RepeatWith&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, T, F, Fut&gt; Unpin for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T, F, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, T, F, Fut&gt; Unpin for TryUnfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T, F, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Unpin + ?Sized&gt; Unpin for NextFuture&lt;'_, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Unpin + ?Sized&gt; Unpin for TryNextFuture&lt;'_, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S:&nbsp;?Sized&gt; Unpin for CountFuture&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S, C&gt; Unpin for CollectFuture&lt;S, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S, C&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S, C&gt; Unpin for TryCollectFuture&lt;S, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S, C&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S, P, B&gt; Unpin for PartitionFuture&lt;S, P, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S, P, B&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S, F, T&gt; Unpin for FoldFuture&lt;S, F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S, F, T&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, S, F, B&gt; Unpin for TryFoldFuture&lt;'a, S, F, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S, St, F&gt; Unpin for Scan&lt;S, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S&gt; Unpin for Fuse&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S, F&gt; Unpin for Map&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S, U, F&gt; Unpin for FlatMap&lt;S, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S, U, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S:&nbsp;Stream&gt; Unpin for Flatten&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S, F, Fut&gt; Unpin for Then&lt;S, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S, F, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S, P&gt; Unpin for Filter&lt;S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S, P&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S1, S2&gt; Unpin for Or&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S1, S2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S1, S2&gt; Unpin for Race&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S1, S2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S, F&gt; Unpin for FilterMap&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S&gt; Unpin for Take&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S, P&gt; Unpin for TakeWhile&lt;S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S, P&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S&gt; Unpin for Skip&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S, P&gt; Unpin for SkipWhile&lt;S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S, P&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S&gt; Unpin for StepBy&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S, U&gt; Unpin for Chain&lt;S, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S, U&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S&gt; Unpin for Cloned&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S&gt; Unpin for Copied&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S&gt; Unpin for Cycle&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S&gt; Unpin for Enumerate&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S, F&gt; Unpin for Inspect&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Unpin + ?Sized&gt; Unpin for NthFuture&lt;'_, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S:&nbsp;Stream&gt; Unpin for LastFuture&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Unpin + ?Sized, P&gt; Unpin for FindFuture&lt;'_, S, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Unpin + ?Sized, F&gt; Unpin for FindMapFuture&lt;'_, S, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, S:&nbsp;Unpin + ?Sized, P&gt; Unpin for PositionFuture&lt;'a, S, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Unpin + ?Sized, P&gt; Unpin for AllFuture&lt;'_, S, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Unpin + ?Sized, P&gt; Unpin for AnyFuture&lt;'_, S, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S, F&gt; Unpin for ForEachFuture&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, S:&nbsp;Unpin + ?Sized, F&gt; Unpin for TryForEachFuture&lt;'a, S, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, A:&nbsp;Stream, B&gt; Unpin for Zip&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, A, B&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S, FromA, FromB&gt; Unpin for UnzipFuture&lt;S, FromA, FromB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S, FromA, FromB&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for AssertAsync&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, R&gt; Unpin for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, W&gt; Unpin for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, W&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Unpin for FillBuf&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Unpin + ?Sized&gt; Unpin for ReadUntilFuture&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Unpin + ?Sized&gt; Unpin for ReadLineFuture&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, R&gt; Unpin for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, R&gt; Unpin for Split&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Unpin + ?Sized&gt; Unpin for ReadFuture&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Unpin + ?Sized&gt; Unpin for ReadVectoredFuture&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Unpin + ?Sized&gt; Unpin for ReadToEndFuture&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Unpin + ?Sized&gt; Unpin for ReadToStringFuture&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Unpin + ?Sized&gt; Unpin for ReadExactFuture&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, R&gt; Unpin for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, R&gt; Unpin for Bytes&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, R1, R2&gt; Unpin for Chain&lt;R1, R2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R1, R2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Unpin + ?Sized&gt; Unpin for SeekFuture&lt;'_, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Unpin + ?Sized&gt; Unpin for WriteFuture&lt;'_, W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Unpin + ?Sized&gt; Unpin for WriteVectoredFuture&lt;'_, W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Unpin + ?Sized&gt; Unpin for WriteAllFuture&lt;'_, W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Unpin + ?Sized&gt; Unpin for FlushFuture&lt;'_, W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Unpin + ?Sized&gt; Unpin for CloseFuture&lt;'_, W&gt;","synthetic":false,"types":[]}];
implementors["futures_task"] = [{"text":"impl Unpin for SpawnError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for WakerRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for LocalFutureObj&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for FutureObj&lt;'_, T&gt;","synthetic":false,"types":[]}];
implementors["futures_timer"] = [{"text":"impl Unpin for Delay","synthetic":true,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;T&gt; Unpin for RemoteHandle&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Unpin for WeakShared&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for JoinAll&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for TryJoinAll&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AbortRegistration","synthetic":true,"types":[]},{"text":"impl Unpin for AbortHandle","synthetic":true,"types":[]},{"text":"impl Unpin for Aborted","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Unpin for StreamFuture&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Unpin for SelectNextSome&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, Item&gt; Unpin for ReuniteError&lt;T, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Unpin for IterPinMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Unpin for IterMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Unpin for IterPinRef&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Unpin for Iter&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Unpin for SelectAll&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Cursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Empty","synthetic":true,"types":[]},{"text":"impl Unpin for Repeat","synthetic":true,"types":[]},{"text":"impl Unpin for Sink","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WriteHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ReuniteError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Window&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for MutexLockFuture&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized, U:&nbsp;?Sized&gt; Unpin for MappedMutexGuard&lt;'a, T, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'__pin, Fut&gt; Unpin for Fuse&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, F&gt; Unpin for Flatten&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, F&gt;: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, F&gt; Unpin for FlattenStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, F&gt;: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut, F&gt; Unpin for Map&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, F&gt; Unpin for IntoStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut, T&gt; Unpin for MapInto&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut, T&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut1, Fut2, F&gt; Unpin for Then&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut1, Fut2, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut, F&gt; Unpin for Inspect&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut&gt; Unpin for NeverError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut&gt; Unpin for UnitError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut&gt; Unpin for CatchUnwind&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut:&nbsp;Future&gt; Unpin for Remote&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Fut:&nbsp;Future&gt; Unpin for Shared&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut&gt; Unpin for IntoFuture&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut1, Fut2&gt; Unpin for TryFlatten&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut1, Fut2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut&gt; Unpin for TryFlattenStream&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut&gt;: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: TryFuture,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut, Si&gt; Unpin for FlattenSink&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut, Si&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut1, Fut2, F&gt; Unpin for AndThen&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut1, Fut2, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut1, Fut2, F&gt; Unpin for OrElse&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut1, Fut2, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut, E&gt; Unpin for ErrInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut, E&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut, E&gt; Unpin for OkInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut, E&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut, F&gt; Unpin for InspectOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut, F&gt; Unpin for InspectErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut, F&gt; Unpin for MapOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut, F&gt; Unpin for MapErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut, F, G&gt; Unpin for MapOkOrElse&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut, F, G&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut, F&gt; Unpin for UnwrapOrElse&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; Unpin for Lazy&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Pending&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut:&nbsp;Future + Unpin&gt; Unpin for MaybeDone&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut:&nbsp;TryFuture + Unpin&gt; Unpin for TryMaybeDone&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, F&gt; Unpin for OptionFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; Unpin for PollFn&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Ready&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut1:&nbsp;Future, Fut2:&nbsp;Future&gt; Unpin for Join&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut1, Fut2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut1:&nbsp;Future, Fut2:&nbsp;Future, Fut3:&nbsp;Future&gt; Unpin for Join3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut1, Fut2, Fut3&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut1:&nbsp;Future, Fut2:&nbsp;Future, Fut3:&nbsp;Future, Fut4:&nbsp;Future&gt; Unpin for Join4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut1, Fut2, Fut3, Fut4&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut1:&nbsp;Future, Fut2:&nbsp;Future, Fut3:&nbsp;Future, Fut4:&nbsp;Future, Fut5:&nbsp;Future&gt; Unpin for Join5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut1, Fut2, Fut3, Fut4, Fut5&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Unpin, B:&nbsp;Unpin&gt; Unpin for Select&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut:&nbsp;Unpin&gt; Unpin for SelectAll&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut1:&nbsp;TryFuture, Fut2:&nbsp;TryFuture&gt; Unpin for TryJoin&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut1, Fut2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut1:&nbsp;TryFuture, Fut2:&nbsp;TryFuture, Fut3:&nbsp;TryFuture&gt; Unpin for TryJoin3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut1, Fut2, Fut3&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut1:&nbsp;TryFuture, Fut2:&nbsp;TryFuture, Fut3:&nbsp;TryFuture, Fut4:&nbsp;TryFuture&gt; Unpin for TryJoin4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut1, Fut2, Fut3, Fut4&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut1:&nbsp;TryFuture, Fut2:&nbsp;TryFuture, Fut3:&nbsp;TryFuture, Fut4:&nbsp;TryFuture, Fut5:&nbsp;TryFuture&gt; Unpin for TryJoin5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut1, Fut2, Fut3, Fut4, Fut5&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Unpin, B:&nbsp;Unpin&gt; Unpin for TrySelect&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut:&nbsp;Unpin&gt; Unpin for SelectOk&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut&gt; Unpin for Abortable&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St1, St2&gt; Unpin for Chain&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St1, St2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, C&gt; Unpin for Collect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, C&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, FromA, FromB&gt; Unpin for Unzip&lt;St, FromA, FromB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, FromA, FromB&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St:&nbsp;Stream&gt; Unpin for Concat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St&gt; Unpin for Cycle&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St&gt; Unpin for Enumerate&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, Fut, F&gt; Unpin for Filter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut, F&gt;: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, Fut, F&gt; Unpin for FilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St&gt; Unpin for Flatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, Fut, T, F&gt; Unpin for Fold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut, T, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, Si&gt; Unpin for Forward&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Si&gt;: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, Fut, F&gt; Unpin for ForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St&gt; Unpin for Fuse&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, F&gt; Unpin for Inspect&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, F&gt; Unpin for Map&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, U, F&gt; Unpin for FlatMap&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, U, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;?Sized + Unpin&gt; Unpin for Next&lt;'_, St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St:&nbsp;Stream&gt; Unpin for Peekable&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, 'a, St:&nbsp;Stream&gt; Unpin for Peek&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, 'a, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St&gt; Unpin for Skip&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, Fut, F&gt; Unpin for SkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut, F&gt;: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St&gt; Unpin for Take&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St:&nbsp;Stream, Fut, F&gt; Unpin for TakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St:&nbsp;Stream, Fut:&nbsp;Future&gt; Unpin for TakeUntil&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, Fut, F&gt; Unpin for Then&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St1:&nbsp;Stream, St2:&nbsp;Stream&gt; Unpin for Zip&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St1, St2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St:&nbsp;Stream&gt; Unpin for Chunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St:&nbsp;Stream&gt; Unpin for ReadyChunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St:&nbsp;Stream, S, Fut, F&gt; Unpin for Scan&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, S, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St&gt; Unpin for BufferUnordered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St&gt; Unpin for Buffered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;St::Item: Future,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, Fut, F&gt; Unpin for ForEachConcurrent&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; Unpin for SplitStream&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S, Item&gt; Unpin for SplitSink&lt;S, Item&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St&gt; Unpin for CatchUnwind&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, Fut, F&gt; Unpin for AndThen&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, E&gt; Unpin for ErrInto&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, E&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, F&gt; Unpin for InspectOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, F&gt; Unpin for InspectErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St&gt; Unpin for IntoStream&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, F&gt; Unpin for MapOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, F&gt; Unpin for MapErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, Fut, F&gt; Unpin for OrElse&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;?Sized + Unpin&gt; Unpin for TryNext&lt;'_, St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, Fut, F&gt; Unpin for TryForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, Fut, F&gt; Unpin for TryFilter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut, F&gt;: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, Fut, F&gt; Unpin for TryFilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St&gt; Unpin for TryFlatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, C&gt; Unpin for TryCollect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, C&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St:&nbsp;TryStream&gt; Unpin for TryConcat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, Fut, T, F&gt; Unpin for TryFold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut, T, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, T, F, Fut&gt; Unpin for TryUnfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T, F, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, Fut, F&gt; Unpin for TrySkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut, F&gt;: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, Fut, F&gt; Unpin for TryTakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut, F&gt;: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St&gt; Unpin for TryBufferUnordered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St&gt; Unpin for TryBuffered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St&gt;: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,<br>&nbsp;&nbsp;&nbsp;&nbsp;St::Ok: TryFuture,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St, Fut, F&gt; Unpin for TryForEachConcurrent&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St&gt; Unpin for IntoAsyncRead&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream&lt;Error = Error&gt; + Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St::Ok: AsRef&lt;[u8]&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; Unpin for Iter&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Repeat&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A, F:&nbsp;FnMut() -&gt; A&gt; Unpin for RepeatWith&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Empty&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Fut&gt; Unpin for Once&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Pending&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; Unpin for PollFn&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, St1, St2&gt; Unpin for Select&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, St1, St2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, T, F, Fut&gt; Unpin for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T, F, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Future&gt; Unpin for FuturesOrdered&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut&gt; Unpin for FuturesUnordered&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Si:&nbsp;Unpin + ?Sized, Item&gt; Unpin for Close&lt;'_, Si, Item&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Drain&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Si1, Si2&gt; Unpin for Fanout&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Si1, Si2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Si:&nbsp;Unpin + ?Sized, Item&gt; Unpin for Feed&lt;'_, Si, Item&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Si:&nbsp;Unpin + ?Sized, Item&gt; Unpin for Flush&lt;'_, Si, Item&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Si:&nbsp;Sink&lt;Item&gt;, Item, E&gt; Unpin for SinkErrInto&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Si, Item, E&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Si, F&gt; Unpin for SinkMapErr&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Si, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Si:&nbsp;Unpin + ?Sized, Item&gt; Unpin for Send&lt;'_, Si, Item&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Si:&nbsp;?Sized, St:&nbsp;?Sized&gt; Unpin for SendAll&lt;'_, Si, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream + Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, T, F, R&gt; Unpin for Unfold&lt;T, F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T, F, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Si, Item, U, Fut, F&gt; Unpin for With&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Si, Item, U, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Si, Item, U, St, F&gt; Unpin for WithFlatMap&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Si, Item, U, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, Si, Item&gt; Unpin for Buffer&lt;Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, Si, Item&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for AllowStdIo&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, R&gt; Unpin for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, W&gt; Unpin for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, W&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, T, U&gt; Unpin for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T, U&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;?Sized + Unpin&gt; Unpin for Close&lt;'_, W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, 'a, R, W:&nbsp;?Sized&gt; Unpin for Copy&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, 'a, R, W&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, 'a, R, W:&nbsp;?Sized&gt; Unpin for CopyBuf&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, 'a, R, W&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Unpin for FillBuf&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;?Sized + Unpin&gt; Unpin for Flush&lt;'_, W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, W, Item&gt; Unpin for IntoSink&lt;W, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, W, Item&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, R&gt; Unpin for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized + Unpin&gt; Unpin for Read&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized + Unpin&gt; Unpin for ReadVectored&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized + Unpin&gt; Unpin for ReadExact&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized + Unpin&gt; Unpin for ReadLine&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized + Unpin&gt; Unpin for ReadToEnd&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized + Unpin&gt; Unpin for ReadToString&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized + Unpin&gt; Unpin for ReadUntil&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;?Sized + Unpin&gt; Unpin for Seek&lt;'_, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, R&gt; Unpin for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;?Sized + Unpin&gt; Unpin for Write&lt;'_, W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;?Sized + Unpin&gt; Unpin for WriteVectored&lt;'_, W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;?Sized + Unpin&gt; Unpin for WriteAll&lt;'_, W&gt;","synthetic":false,"types":[]}];
implementors["generic_array"] = [{"text":"impl&lt;T, N&gt; Unpin for GenericArrayIter&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as ArrayLength&lt;T&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for GenericArray&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as ArrayLength&lt;T&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["glob"] = [{"text":"impl Unpin for Paths","synthetic":true,"types":[]},{"text":"impl Unpin for GlobError","synthetic":true,"types":[]},{"text":"impl Unpin for PatternError","synthetic":true,"types":[]},{"text":"impl Unpin for Pattern","synthetic":true,"types":[]},{"text":"impl Unpin for MatchOptions","synthetic":true,"types":[]}];
implementors["h2"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Reason","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for SendRequest&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for ReadySendRequest&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Unpin for Connection&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ResponseFuture","synthetic":true,"types":[]},{"text":"impl Unpin for PushedResponseFuture","synthetic":true,"types":[]},{"text":"impl Unpin for PushPromise","synthetic":true,"types":[]},{"text":"impl Unpin for PushPromises","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Unpin for Handshake&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Unpin for Connection&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for SendResponse&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for SendPushedResponse&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for SendStream&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for StreamId","synthetic":true,"types":[]},{"text":"impl Unpin for RecvStream","synthetic":true,"types":[]},{"text":"impl Unpin for FlowControl","synthetic":true,"types":[]},{"text":"impl Unpin for PingPong","synthetic":true,"types":[]},{"text":"impl Unpin for Ping","synthetic":true,"types":[]},{"text":"impl Unpin for Pong","synthetic":true,"types":[]}];
implementors["hashbrown"] = [{"text":"impl&lt;T&gt; Unpin for Bucket&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RawTable&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RawIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RawIntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for RawDrain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for RawIterHash&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultHashBuilder","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; Unpin for HashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Drain&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, F&gt; Unpin for DrainFilter&lt;'a, K, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for ValuesMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawEntryBuilderMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawOccupiedEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawVacantEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawEntryBuilder&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for Entry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for OccupiedEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for HashSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Unpin for Iter&lt;'a, K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for IntoIter&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Unpin for Drain&lt;'a, K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, F&gt; Unpin for DrainFilter&lt;'a, K, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Intersection&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Difference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for SymmetricDifference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Union&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TryReserveError","synthetic":true,"types":[]}];
implementors["heim_common"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["heim_disk"] = [{"text":"impl Unpin for Flags","synthetic":true,"types":[]},{"text":"impl Unpin for IoCounters","synthetic":true,"types":[]},{"text":"impl Unpin for FileSystem","synthetic":true,"types":[]},{"text":"impl Unpin for Partition","synthetic":true,"types":[]},{"text":"impl Unpin for Usage","synthetic":true,"types":[]}];
implementors["heim_runtime"] = [{"text":"impl Unpin for Interval","synthetic":true,"types":[]}];
implementors["hex"] = [{"text":"impl Unpin for FromHexError","synthetic":true,"types":[]}];
implementors["hmac"] = [{"text":"impl&lt;D&gt; Unpin for Hmac&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;D as BlockInput&gt;::BlockSize as ArrayLength&lt;u8&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["http"] = [{"text":"impl&lt;T&gt; Unpin for HeaderMap&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Keys&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Values&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for ValuesMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for GetAll&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Entry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for OccupiedEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for ValueIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for ValueIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for ValueDrain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for HeaderName","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidHeaderName","synthetic":true,"types":[]},{"text":"impl Unpin for HeaderValue","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidHeaderValue","synthetic":true,"types":[]},{"text":"impl Unpin for ToStrError","synthetic":true,"types":[]},{"text":"impl Unpin for Method","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidMethod","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Request&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Parts","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Response&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Parts","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for StatusCode","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidStatusCode","synthetic":true,"types":[]},{"text":"impl Unpin for Authority","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for PathAndQuery","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Port&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Scheme","synthetic":true,"types":[]},{"text":"impl Unpin for Uri","synthetic":true,"types":[]},{"text":"impl Unpin for Parts","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidUri","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidUriParts","synthetic":true,"types":[]},{"text":"impl Unpin for Version","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Extensions","synthetic":true,"types":[]}];
implementors["http_body"] = [{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for Data&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for Trailers&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SizeHint","synthetic":true,"types":[]}];
implementors["httparse"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidChunkSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Status&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; Unpin for Request&lt;'headers, 'buf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'buf: 'headers,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; Unpin for Response&lt;'headers, 'buf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'buf: 'headers,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Header&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["httpdate"] = [{"text":"impl Unpin for HttpDate","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["humantime"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for FormattedDuration","synthetic":true,"types":[]},{"text":"impl Unpin for Duration","synthetic":true,"types":[]},{"text":"impl Unpin for Timestamp","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Rfc3339Timestamp","synthetic":true,"types":[]}];
implementors["hyper"] = [{"text":"impl Unpin for Body","synthetic":true,"types":[]},{"text":"impl Unpin for Sender","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Upgraded","synthetic":true,"types":[]},{"text":"impl Unpin for OnUpgrade","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Parts&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Name","synthetic":true,"types":[]},{"text":"impl Unpin for GaiResolver","synthetic":true,"types":[]},{"text":"impl Unpin for GaiAddrs","synthetic":true,"types":[]},{"text":"impl Unpin for GaiFuture","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidNameError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for HttpConnector&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for HttpInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Connected","synthetic":true,"types":[]},{"text":"impl&lt;C, B&gt; Unpin for Client&lt;C, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ResponseFuture","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for SendRequest&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Unpin for Connection&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for ResponseFuture","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Parts&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C, B, T&gt; Unpin for Connect&lt;C, B, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["hyper_rustls"] = [{"text":"impl&lt;T&gt; Unpin for HttpsConnector&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for MaybeHttpsStream&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["idna"] = [{"text":"impl Unpin for Idna","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for Errors","synthetic":true,"types":[]}];
implementors["indexmap"] = [{"text":"impl&lt;'a, K, V&gt; Unpin for OccupiedEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Entry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for VacantEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; Unpin for IndexMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for ValuesMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Drain&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for IndexSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Difference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Intersection&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S1, S2&gt; Unpin for SymmetricDifference&lt;'a, T, S1, S2&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Union&lt;'a, T, S&gt;","synthetic":true,"types":[]}];
implementors["ipnet"] = [{"text":"impl Unpin for IpAddrRange","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv4AddrRange","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6AddrRange","synthetic":true,"types":[]},{"text":"impl Unpin for IpNet","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv4Net","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6Net","synthetic":true,"types":[]},{"text":"impl Unpin for PrefixLenError","synthetic":true,"types":[]},{"text":"impl Unpin for IpSubnets","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv4Subnets","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6Subnets","synthetic":true,"types":[]},{"text":"impl Unpin for AddrParseError","synthetic":true,"types":[]}];
implementors["isolang"] = [{"text":"impl Unpin for Language","synthetic":true,"types":[]}];
implementors["itoa"] = [{"text":"impl Unpin for Buffer","synthetic":true,"types":[]}];
implementors["j4rs"] = [{"text":"impl Unpin for Jvm","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for JvmBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for InvocationArg","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Null&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for InstanceReceiver","synthetic":true,"types":[]},{"text":"impl Unpin for Instance","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ClasspathEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for JavaOpt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for J4RsError","synthetic":true,"types":[]},{"text":"impl Unpin for LocalJarArtifact","synthetic":true,"types":[]},{"text":"impl Unpin for MavenArtifact","synthetic":true,"types":[]},{"text":"impl Unpin for MavenSettings","synthetic":true,"types":[]},{"text":"impl Unpin for MavenArtifactRepo","synthetic":true,"types":[]},{"text":"impl Unpin for FxController","synthetic":true,"types":[]},{"text":"impl Unpin for FxEventType","synthetic":true,"types":[]}];
implementors["java_locator"] = [{"text":"impl Unpin for JavaLocatorError","synthetic":true,"types":[]}];
implementors["jni_sys"] = [{"text":"impl Unpin for _jobject","synthetic":true,"types":[]},{"text":"impl Unpin for jvalue","synthetic":true,"types":[]},{"text":"impl Unpin for _jfieldID","synthetic":true,"types":[]},{"text":"impl Unpin for _jmethodID","synthetic":true,"types":[]},{"text":"impl Unpin for jobjectRefType","synthetic":true,"types":[]},{"text":"impl Unpin for JNINativeMethod","synthetic":true,"types":[]},{"text":"impl Unpin for JNINativeInterface_","synthetic":true,"types":[]},{"text":"impl Unpin for JNIEnv_","synthetic":true,"types":[]},{"text":"impl Unpin for JavaVMOption","synthetic":true,"types":[]},{"text":"impl Unpin for JavaVMInitArgs","synthetic":true,"types":[]},{"text":"impl Unpin for JavaVMAttachArgs","synthetic":true,"types":[]},{"text":"impl Unpin for JNIInvokeInterface_","synthetic":true,"types":[]}];
implementors["lexical_core"] = [{"text":"impl Unpin for ErrorCode","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl Unpin for statvfs","synthetic":true,"types":[]},{"text":"impl Unpin for max_align_t","synthetic":true,"types":[]},{"text":"impl Unpin for sigaction","synthetic":true,"types":[]},{"text":"impl Unpin for statfs","synthetic":true,"types":[]},{"text":"impl Unpin for flock","synthetic":true,"types":[]},{"text":"impl Unpin for flock64","synthetic":true,"types":[]},{"text":"impl Unpin for siginfo_t","synthetic":true,"types":[]},{"text":"impl Unpin for stack_t","synthetic":true,"types":[]},{"text":"impl Unpin for stat","synthetic":true,"types":[]},{"text":"impl Unpin for stat64","synthetic":true,"types":[]},{"text":"impl Unpin for statfs64","synthetic":true,"types":[]},{"text":"impl Unpin for statvfs64","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Unpin for user_regs_struct","synthetic":true,"types":[]},{"text":"impl Unpin for user","synthetic":true,"types":[]},{"text":"impl Unpin for mcontext_t","synthetic":true,"types":[]},{"text":"impl Unpin for ipc_perm","synthetic":true,"types":[]},{"text":"impl Unpin for shmid_ds","synthetic":true,"types":[]},{"text":"impl Unpin for termios2","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Unpin for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl Unpin for ucontext_t","synthetic":true,"types":[]},{"text":"impl Unpin for sigset_t","synthetic":true,"types":[]},{"text":"impl Unpin for sysinfo","synthetic":true,"types":[]},{"text":"impl Unpin for msqid_ds","synthetic":true,"types":[]},{"text":"impl Unpin for sem_t","synthetic":true,"types":[]},{"text":"impl Unpin for statx","synthetic":true,"types":[]},{"text":"impl Unpin for statx_timestamp","synthetic":true,"types":[]},{"text":"impl Unpin for aiocb","synthetic":true,"types":[]},{"text":"impl Unpin for __exit_status","synthetic":true,"types":[]},{"text":"impl Unpin for __timeval","synthetic":true,"types":[]},{"text":"impl Unpin for glob64_t","synthetic":true,"types":[]},{"text":"impl Unpin for msghdr","synthetic":true,"types":[]},{"text":"impl Unpin for cmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for termios","synthetic":true,"types":[]},{"text":"impl Unpin for mallinfo","synthetic":true,"types":[]},{"text":"impl Unpin for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Unpin for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Unpin for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Unpin for nlattr","synthetic":true,"types":[]},{"text":"impl Unpin for rtentry","synthetic":true,"types":[]},{"text":"impl Unpin for timex","synthetic":true,"types":[]},{"text":"impl Unpin for ntptimeval","synthetic":true,"types":[]},{"text":"impl Unpin for regex_t","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Unpin for utmpx","synthetic":true,"types":[]},{"text":"impl Unpin for fpos64_t","synthetic":true,"types":[]},{"text":"impl Unpin for rlimit64","synthetic":true,"types":[]},{"text":"impl Unpin for glob_t","synthetic":true,"types":[]},{"text":"impl Unpin for passwd","synthetic":true,"types":[]},{"text":"impl Unpin for spwd","synthetic":true,"types":[]},{"text":"impl Unpin for dqblk","synthetic":true,"types":[]},{"text":"impl Unpin for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Unpin for itimerspec","synthetic":true,"types":[]},{"text":"impl Unpin for fsid_t","synthetic":true,"types":[]},{"text":"impl Unpin for packet_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for cpu_set_t","synthetic":true,"types":[]},{"text":"impl Unpin for if_nameindex","synthetic":true,"types":[]},{"text":"impl Unpin for msginfo","synthetic":true,"types":[]},{"text":"impl Unpin for sembuf","synthetic":true,"types":[]},{"text":"impl Unpin for input_event","synthetic":true,"types":[]},{"text":"impl Unpin for input_id","synthetic":true,"types":[]},{"text":"impl Unpin for input_absinfo","synthetic":true,"types":[]},{"text":"impl Unpin for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Unpin for input_mask","synthetic":true,"types":[]},{"text":"impl Unpin for ff_replay","synthetic":true,"types":[]},{"text":"impl Unpin for ff_trigger","synthetic":true,"types":[]},{"text":"impl Unpin for ff_envelope","synthetic":true,"types":[]},{"text":"impl Unpin for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_effect","synthetic":true,"types":[]},{"text":"impl Unpin for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Unpin for ucred","synthetic":true,"types":[]},{"text":"impl Unpin for mntent","synthetic":true,"types":[]},{"text":"impl Unpin for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Unpin for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for arpd_request","synthetic":true,"types":[]},{"text":"impl Unpin for inotify_event","synthetic":true,"types":[]},{"text":"impl Unpin for fanotify_response","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Unpin for regmatch_t","synthetic":true,"types":[]},{"text":"impl Unpin for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Unpin for __c_anonymous_sockaddr_can_tp","synthetic":true,"types":[]},{"text":"impl Unpin for __c_anonymous_sockaddr_can_j1939","synthetic":true,"types":[]},{"text":"impl Unpin for can_filter","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Unpin for dirent","synthetic":true,"types":[]},{"text":"impl Unpin for dirent64","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Unpin for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Unpin for mq_attr","synthetic":true,"types":[]},{"text":"impl Unpin for __c_anonymous_sockaddr_can_can_addr","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_can","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Unpin for can_frame","synthetic":true,"types":[]},{"text":"impl Unpin for canfd_frame","synthetic":true,"types":[]},{"text":"impl Unpin for timezone","synthetic":true,"types":[]},{"text":"impl Unpin for in_addr","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl Unpin for addrinfo","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Unpin for fd_set","synthetic":true,"types":[]},{"text":"impl Unpin for tm","synthetic":true,"types":[]},{"text":"impl Unpin for sched_param","synthetic":true,"types":[]},{"text":"impl Unpin for Dl_info","synthetic":true,"types":[]},{"text":"impl Unpin for lconv","synthetic":true,"types":[]},{"text":"impl Unpin for in_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for ifaddrs","synthetic":true,"types":[]},{"text":"impl Unpin for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Unpin for arpreq","synthetic":true,"types":[]},{"text":"impl Unpin for arpreq_old","synthetic":true,"types":[]},{"text":"impl Unpin for arphdr","synthetic":true,"types":[]},{"text":"impl Unpin for mmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for epoll_event","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Unpin for utsname","synthetic":true,"types":[]},{"text":"impl Unpin for sigevent","synthetic":true,"types":[]},{"text":"impl Unpin for in6_addr","synthetic":true,"types":[]},{"text":"impl Unpin for DIR","synthetic":true,"types":[]},{"text":"impl Unpin for group","synthetic":true,"types":[]},{"text":"impl Unpin for utimbuf","synthetic":true,"types":[]},{"text":"impl Unpin for timeval","synthetic":true,"types":[]},{"text":"impl Unpin for timespec","synthetic":true,"types":[]},{"text":"impl Unpin for rlimit","synthetic":true,"types":[]},{"text":"impl Unpin for rusage","synthetic":true,"types":[]},{"text":"impl Unpin for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for hostent","synthetic":true,"types":[]},{"text":"impl Unpin for iovec","synthetic":true,"types":[]},{"text":"impl Unpin for pollfd","synthetic":true,"types":[]},{"text":"impl Unpin for winsize","synthetic":true,"types":[]},{"text":"impl Unpin for linger","synthetic":true,"types":[]},{"text":"impl Unpin for sigval","synthetic":true,"types":[]},{"text":"impl Unpin for itimerval","synthetic":true,"types":[]},{"text":"impl Unpin for tms","synthetic":true,"types":[]},{"text":"impl Unpin for servent","synthetic":true,"types":[]},{"text":"impl Unpin for protoent","synthetic":true,"types":[]},{"text":"impl Unpin for FILE","synthetic":true,"types":[]},{"text":"impl Unpin for fpos_t","synthetic":true,"types":[]}];
implementors["libloading"] = [{"text":"impl Unpin for Library","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Symbol&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Library","synthetic":true,"types":[]},{"text":"impl&lt;'lib, T&gt; Unpin for Symbol&lt;'lib, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["linked_hash_map"] = [{"text":"impl&lt;K, V, S&gt; Unpin for LinkedHashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for Entries&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for Entry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for OccupiedEntry&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["log"] = [{"text":"impl Unpin for Level","synthetic":true,"types":[]},{"text":"impl Unpin for LevelFilter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Unpin for ParseLevelError","synthetic":true,"types":[]}];
implementors["md5"] = [{"text":"impl Unpin for Digest","synthetic":true,"types":[]},{"text":"impl Unpin for Context","synthetic":true,"types":[]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Unpin for Memchr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Memchr2&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Memchr3&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["mime"] = [{"text":"impl Unpin for Mime","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FromStrError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Params&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["mime_guess"] = [{"text":"impl Unpin for MimeGuess","synthetic":true,"types":[]},{"text":"impl Unpin for Iter","synthetic":true,"types":[]},{"text":"impl Unpin for IterRaw","synthetic":true,"types":[]}];
implementors["miniz_oxide"] = [{"text":"impl Unpin for CompressionStrategy","synthetic":true,"types":[]},{"text":"impl Unpin for TDEFLFlush","synthetic":true,"types":[]},{"text":"impl Unpin for TDEFLStatus","synthetic":true,"types":[]},{"text":"impl Unpin for CompressorOxide","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CallbackFunc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CompressionLevel","synthetic":true,"types":[]},{"text":"impl Unpin for DecompressorOxide","synthetic":true,"types":[]},{"text":"impl Unpin for InflateState","synthetic":true,"types":[]},{"text":"impl Unpin for TINFLStatus","synthetic":true,"types":[]},{"text":"impl Unpin for MZFlush","synthetic":true,"types":[]},{"text":"impl Unpin for MZStatus","synthetic":true,"types":[]},{"text":"impl Unpin for MZError","synthetic":true,"types":[]},{"text":"impl Unpin for DataFormat","synthetic":true,"types":[]},{"text":"impl Unpin for StreamResult","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl Unpin for Interest","synthetic":true,"types":[]},{"text":"impl Unpin for Poll","synthetic":true,"types":[]},{"text":"impl Unpin for Registry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SourceFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SocketAddr","synthetic":true,"types":[]},{"text":"impl Unpin for Sender","synthetic":true,"types":[]},{"text":"impl Unpin for Receiver","synthetic":true,"types":[]},{"text":"impl Unpin for Token","synthetic":true,"types":[]},{"text":"impl Unpin for Waker","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for Events","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TcpListener","synthetic":true,"types":[]},{"text":"impl Unpin for TcpSocket","synthetic":true,"types":[]},{"text":"impl Unpin for TcpKeepalive","synthetic":true,"types":[]},{"text":"impl Unpin for TcpStream","synthetic":true,"types":[]},{"text":"impl Unpin for UdpSocket","synthetic":true,"types":[]},{"text":"impl Unpin for UnixDatagram","synthetic":true,"types":[]},{"text":"impl Unpin for UnixListener","synthetic":true,"types":[]},{"text":"impl Unpin for UnixStream","synthetic":true,"types":[]}];
implementors["nix"] = [{"text":"impl Unpin for Dir","synthetic":true,"types":[]},{"text":"impl&lt;'d&gt; Unpin for Iter&lt;'d&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Entry","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Errno","synthetic":true,"types":[]},{"text":"impl Unpin for PosixFadviseAdvice","synthetic":true,"types":[]},{"text":"impl Unpin for AtFlags","synthetic":true,"types":[]},{"text":"impl Unpin for OFlag","synthetic":true,"types":[]},{"text":"impl Unpin for SealFlag","synthetic":true,"types":[]},{"text":"impl Unpin for FdFlag","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FcntlArg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FlockArg","synthetic":true,"types":[]},{"text":"impl Unpin for SpliceFFlags","synthetic":true,"types":[]},{"text":"impl Unpin for FallocateFlags","synthetic":true,"types":[]},{"text":"impl Unpin for InterfaceAddress","synthetic":true,"types":[]},{"text":"impl Unpin for InterfaceAddressIterator","synthetic":true,"types":[]},{"text":"impl Unpin for ModuleInitFlags","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteModuleFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MsFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MntFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MQ_OFlag","synthetic":true,"types":[]},{"text":"impl Unpin for FdFlag","synthetic":true,"types":[]},{"text":"impl Unpin for MqAttr","synthetic":true,"types":[]},{"text":"impl Unpin for InterfaceFlags","synthetic":true,"types":[]},{"text":"impl Unpin for PollFd","synthetic":true,"types":[]},{"text":"impl Unpin for PollFlags","synthetic":true,"types":[]},{"text":"impl Unpin for OpenptyResult","synthetic":true,"types":[]},{"text":"impl Unpin for ForkptyResult","synthetic":true,"types":[]},{"text":"impl Unpin for PtyMaster","synthetic":true,"types":[]},{"text":"impl Unpin for CloneFlags","synthetic":true,"types":[]},{"text":"impl Unpin for CpuSet","synthetic":true,"types":[]},{"text":"impl Unpin for AioFsyncMode","synthetic":true,"types":[]},{"text":"impl Unpin for LioOpcode","synthetic":true,"types":[]},{"text":"impl Unpin for LioMode","synthetic":true,"types":[]},{"text":"impl Unpin for AioCancelStat","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Buffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for AioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for EpollFlags","synthetic":true,"types":[]},{"text":"impl Unpin for EpollOp","synthetic":true,"types":[]},{"text":"impl Unpin for EpollCreateFlags","synthetic":true,"types":[]},{"text":"impl Unpin for EpollEvent","synthetic":true,"types":[]},{"text":"impl Unpin for EfdFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MemFdCreateFlag","synthetic":true,"types":[]},{"text":"impl Unpin for ProtFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MapFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MmapAdvise","synthetic":true,"types":[]},{"text":"impl Unpin for MsFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MlockAllFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for QuotaType","synthetic":true,"types":[]},{"text":"impl Unpin for QuotaFmt","synthetic":true,"types":[]},{"text":"impl Unpin for QuotaValidFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Dqblk","synthetic":true,"types":[]},{"text":"impl Unpin for RebootMode","synthetic":true,"types":[]},{"text":"impl Unpin for FdSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Fds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SigEvent","synthetic":true,"types":[]},{"text":"impl Unpin for Signal","synthetic":true,"types":[]},{"text":"impl Unpin for SignalIterator","synthetic":true,"types":[]},{"text":"impl Unpin for SaFlags","synthetic":true,"types":[]},{"text":"impl Unpin for SigmaskHow","synthetic":true,"types":[]},{"text":"impl Unpin for SigSet","synthetic":true,"types":[]},{"text":"impl Unpin for SigHandler","synthetic":true,"types":[]},{"text":"impl Unpin for SigAction","synthetic":true,"types":[]},{"text":"impl Unpin for SigevNotify","synthetic":true,"types":[]},{"text":"impl Unpin for SfdFlags","synthetic":true,"types":[]},{"text":"impl Unpin for SignalFd","synthetic":true,"types":[]},{"text":"impl Unpin for NetlinkAddr","synthetic":true,"types":[]},{"text":"impl Unpin for AlgAddr","synthetic":true,"types":[]},{"text":"impl Unpin for LinkAddr","synthetic":true,"types":[]},{"text":"impl Unpin for VsockAddr","synthetic":true,"types":[]},{"text":"impl Unpin for AddressFamily","synthetic":true,"types":[]},{"text":"impl Unpin for InetAddr","synthetic":true,"types":[]},{"text":"impl Unpin for IpAddr","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv4Addr","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6Addr","synthetic":true,"types":[]},{"text":"impl Unpin for UnixAddr","synthetic":true,"types":[]},{"text":"impl Unpin for SockAddr","synthetic":true,"types":[]},{"text":"impl Unpin for ReuseAddr","synthetic":true,"types":[]},{"text":"impl Unpin for ReusePort","synthetic":true,"types":[]},{"text":"impl Unpin for TcpNoDelay","synthetic":true,"types":[]},{"text":"impl Unpin for Linger","synthetic":true,"types":[]},{"text":"impl Unpin for IpAddMembership","synthetic":true,"types":[]},{"text":"impl Unpin for IpDropMembership","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6AddMembership","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6DropMembership","synthetic":true,"types":[]},{"text":"impl Unpin for IpMulticastTtl","synthetic":true,"types":[]},{"text":"impl Unpin for IpMulticastLoop","synthetic":true,"types":[]},{"text":"impl Unpin for ReceiveTimeout","synthetic":true,"types":[]},{"text":"impl Unpin for SendTimeout","synthetic":true,"types":[]},{"text":"impl Unpin for Broadcast","synthetic":true,"types":[]},{"text":"impl Unpin for OobInline","synthetic":true,"types":[]},{"text":"impl Unpin for SocketError","synthetic":true,"types":[]},{"text":"impl Unpin for KeepAlive","synthetic":true,"types":[]},{"text":"impl Unpin for PeerCredentials","synthetic":true,"types":[]},{"text":"impl Unpin for TcpKeepIdle","synthetic":true,"types":[]},{"text":"impl Unpin for TcpKeepCount","synthetic":true,"types":[]},{"text":"impl Unpin for TcpKeepInterval","synthetic":true,"types":[]},{"text":"impl Unpin for RcvBuf","synthetic":true,"types":[]},{"text":"impl Unpin for SndBuf","synthetic":true,"types":[]},{"text":"impl Unpin for RcvBufForce","synthetic":true,"types":[]},{"text":"impl Unpin for SndBufForce","synthetic":true,"types":[]},{"text":"impl Unpin for SockType","synthetic":true,"types":[]},{"text":"impl Unpin for AcceptConn","synthetic":true,"types":[]},{"text":"impl Unpin for BindToDevice","synthetic":true,"types":[]},{"text":"impl Unpin for OriginalDst","synthetic":true,"types":[]},{"text":"impl Unpin for ReceiveTimestamp","synthetic":true,"types":[]},{"text":"impl Unpin for IpTransparent","synthetic":true,"types":[]},{"text":"impl Unpin for Mark","synthetic":true,"types":[]},{"text":"impl Unpin for PassCred","synthetic":true,"types":[]},{"text":"impl Unpin for TcpCongestion","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv4PacketInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6RecvPacketInfo","synthetic":true,"types":[]},{"text":"impl Unpin for UdpGsoSegment","synthetic":true,"types":[]},{"text":"impl Unpin for UdpGroSegment","synthetic":true,"types":[]},{"text":"impl Unpin for AlgSetAeadAuthSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AlgSetKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SockType","synthetic":true,"types":[]},{"text":"impl Unpin for SockProtocol","synthetic":true,"types":[]},{"text":"impl Unpin for SockFlag","synthetic":true,"types":[]},{"text":"impl Unpin for MsgFlags","synthetic":true,"types":[]},{"text":"impl Unpin for UnixCredentials","synthetic":true,"types":[]},{"text":"impl Unpin for IpMembershipRequest","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6MembershipRequest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RecvMsg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CmsgIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ControlMessageOwned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ControlMessage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, C&gt; Unpin for SendMmsgData&lt;'a, I, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Unpin for RecvMmsgData&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SockLevel","synthetic":true,"types":[]},{"text":"impl Unpin for Shutdown","synthetic":true,"types":[]},{"text":"impl Unpin for SFlag","synthetic":true,"types":[]},{"text":"impl Unpin for Mode","synthetic":true,"types":[]},{"text":"impl Unpin for FchmodatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for UtimensatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Statfs","synthetic":true,"types":[]},{"text":"impl Unpin for FsType","synthetic":true,"types":[]},{"text":"impl Unpin for FsFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Statvfs","synthetic":true,"types":[]},{"text":"impl Unpin for SysInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Termios","synthetic":true,"types":[]},{"text":"impl Unpin for BaudRate","synthetic":true,"types":[]},{"text":"impl Unpin for SetArg","synthetic":true,"types":[]},{"text":"impl Unpin for FlushArg","synthetic":true,"types":[]},{"text":"impl Unpin for FlowArg","synthetic":true,"types":[]},{"text":"impl Unpin for SpecialCharacterIndices","synthetic":true,"types":[]},{"text":"impl Unpin for InputFlags","synthetic":true,"types":[]},{"text":"impl Unpin for OutputFlags","synthetic":true,"types":[]},{"text":"impl Unpin for ControlFlags","synthetic":true,"types":[]},{"text":"impl Unpin for LocalFlags","synthetic":true,"types":[]},{"text":"impl Unpin for TimeSpec","synthetic":true,"types":[]},{"text":"impl Unpin for TimeVal","synthetic":true,"types":[]},{"text":"impl Unpin for RemoteIoVec","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IoVec&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UtsName","synthetic":true,"types":[]},{"text":"impl Unpin for WaitPidFlag","synthetic":true,"types":[]},{"text":"impl Unpin for WaitStatus","synthetic":true,"types":[]},{"text":"impl Unpin for AddWatchFlags","synthetic":true,"types":[]},{"text":"impl Unpin for InitFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Inotify","synthetic":true,"types":[]},{"text":"impl Unpin for WatchDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for InotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for TimerFd","synthetic":true,"types":[]},{"text":"impl Unpin for ClockId","synthetic":true,"types":[]},{"text":"impl Unpin for TimerFlags","synthetic":true,"types":[]},{"text":"impl Unpin for TimerSetTimeFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Expiration","synthetic":true,"types":[]},{"text":"impl Unpin for ClockId","synthetic":true,"types":[]},{"text":"impl Unpin for UContext","synthetic":true,"types":[]},{"text":"impl Unpin for Uid","synthetic":true,"types":[]},{"text":"impl Unpin for Gid","synthetic":true,"types":[]},{"text":"impl Unpin for Pid","synthetic":true,"types":[]},{"text":"impl Unpin for ForkResult","synthetic":true,"types":[]},{"text":"impl Unpin for FchownatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Whence","synthetic":true,"types":[]},{"text":"impl Unpin for LinkatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for UnlinkatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for PathconfVar","synthetic":true,"types":[]},{"text":"impl Unpin for SysconfVar","synthetic":true,"types":[]},{"text":"impl Unpin for AccessFlags","synthetic":true,"types":[]},{"text":"impl Unpin for User","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Unpin for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T&gt; Unpin for Ratio&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ParseRatioError","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Unpin for FloatErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for ParseFloatError","synthetic":true,"types":[]}];
implementors["oauth2"] = [{"text":"impl Unpin for BasicTokenType","synthetic":true,"types":[]},{"text":"impl Unpin for BasicErrorResponseType","synthetic":true,"types":[]},{"text":"impl Unpin for EmptyExtraDeviceAuthorizationFields","synthetic":true,"types":[]},{"text":"impl&lt;EF&gt; Unpin for DeviceAuthorizationResponse&lt;EF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EF: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceCodeErrorResponseType","synthetic":true,"types":[]},{"text":"impl Unpin for StandardRevocableToken","synthetic":true,"types":[]},{"text":"impl Unpin for RevocationErrorResponseType","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Error&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ClientId","synthetic":true,"types":[]},{"text":"impl Unpin for AuthUrl","synthetic":true,"types":[]},{"text":"impl Unpin for TokenUrl","synthetic":true,"types":[]},{"text":"impl Unpin for RedirectUrl","synthetic":true,"types":[]},{"text":"impl Unpin for IntrospectionUrl","synthetic":true,"types":[]},{"text":"impl Unpin for RevocationUrl","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceAuthorizationUrl","synthetic":true,"types":[]},{"text":"impl Unpin for EndUserVerificationUrl","synthetic":true,"types":[]},{"text":"impl Unpin for ResponseType","synthetic":true,"types":[]},{"text":"impl Unpin for ResourceOwnerUsername","synthetic":true,"types":[]},{"text":"impl Unpin for Scope","synthetic":true,"types":[]},{"text":"impl Unpin for PkceCodeChallengeMethod","synthetic":true,"types":[]},{"text":"impl Unpin for PkceCodeVerifier","synthetic":true,"types":[]},{"text":"impl Unpin for PkceCodeChallenge","synthetic":true,"types":[]},{"text":"impl Unpin for ClientSecret","synthetic":true,"types":[]},{"text":"impl Unpin for CsrfToken","synthetic":true,"types":[]},{"text":"impl Unpin for AuthorizationCode","synthetic":true,"types":[]},{"text":"impl Unpin for RefreshToken","synthetic":true,"types":[]},{"text":"impl Unpin for AccessToken","synthetic":true,"types":[]},{"text":"impl Unpin for ResourceOwnerPassword","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceCode","synthetic":true,"types":[]},{"text":"impl Unpin for UserCode","synthetic":true,"types":[]},{"text":"impl Unpin for ConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for AuthType","synthetic":true,"types":[]},{"text":"impl&lt;TE, TR, TT, TIR, RT, TRE&gt; Unpin for Client&lt;TE, TR, TT, TIR, RT, TRE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RT: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TE: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TIR: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TR: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TRE: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TT: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for AuthorizationRequest&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for HttpRequest","synthetic":true,"types":[]},{"text":"impl Unpin for HttpResponse","synthetic":true,"types":[]},{"text":"impl&lt;'a, TE, TR, TT&gt; Unpin for CodeTokenRequest&lt;'a, TE, TR, TT&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TE: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TR: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TT: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TE, TR, TT&gt; Unpin for RefreshTokenRequest&lt;'a, TE, TR, TT&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TE: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TR: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TT: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TE, TR, TT&gt; Unpin for PasswordTokenRequest&lt;'a, TE, TR, TT&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TE: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TR: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TT: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TE, TR, TT&gt; Unpin for ClientCredentialsTokenRequest&lt;'a, TE, TR, TT&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TE: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TR: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TT: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TE, TIR, TT&gt; Unpin for IntrospectionRequest&lt;'a, TE, TIR, TT&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TE: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TIR: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TT: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, RT, TE&gt; Unpin for RevocationRequest&lt;'a, RT, TE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RT: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TE: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TE&gt; Unpin for DeviceAuthorizationRequest&lt;'a, TE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TE: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, TR, TT, EF&gt; Unpin for DeviceAccessTokenRequest&lt;'a, 'b, TR, TT, EF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EF: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TR: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TT: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for EmptyExtraTokenFields","synthetic":true,"types":[]},{"text":"impl&lt;EF, TT&gt; Unpin for StandardTokenResponse&lt;EF, TT&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EF: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TT: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;EF, TT&gt; Unpin for StandardTokenIntrospectionResponse&lt;EF, TT&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EF: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TT: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for StandardErrorResponse&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;RE, T&gt; Unpin for RequestTokenError&lt;RE, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RE: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; Unpin for OnceCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; Unpin for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for OnceCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; Unpin for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["parking"] = [{"text":"impl Unpin for Parker","synthetic":true,"types":[]},{"text":"impl Unpin for Unparker","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl Unpin for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["phf"] = [{"text":"impl&lt;K, V&gt; Unpin for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Entries&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Set&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for OrderedMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Entries&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for OrderedSet&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["polling"] = [{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for Poller","synthetic":true,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Unpin for YesS3","synthetic":true,"types":[]},{"text":"impl Unpin for NoS3","synthetic":true,"types":[]},{"text":"impl Unpin for YesS4","synthetic":true,"types":[]},{"text":"impl Unpin for NoS4","synthetic":true,"types":[]},{"text":"impl Unpin for YesA1","synthetic":true,"types":[]},{"text":"impl Unpin for NoA1","synthetic":true,"types":[]},{"text":"impl Unpin for YesA2","synthetic":true,"types":[]},{"text":"impl Unpin for NoA2","synthetic":true,"types":[]},{"text":"impl Unpin for YesNI","synthetic":true,"types":[]},{"text":"impl Unpin for NoNI","synthetic":true,"types":[]},{"text":"impl&lt;S3, S4, NI&gt; Unpin for SseMachine&lt;S3, S4, NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S3: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S4: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Unpin for Avx2Machine&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for vec128_storage","synthetic":true,"types":[]},{"text":"impl Unpin for vec256_storage","synthetic":true,"types":[]},{"text":"impl Unpin for vec512_storage","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]},{"text":"impl Unpin for TokenStream","synthetic":true,"types":[]},{"text":"impl Unpin for LexError","synthetic":true,"types":[]},{"text":"impl Unpin for Span","synthetic":true,"types":[]},{"text":"impl Unpin for TokenTree","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for Delimiter","synthetic":true,"types":[]},{"text":"impl Unpin for Punct","synthetic":true,"types":[]},{"text":"impl Unpin for Spacing","synthetic":true,"types":[]},{"text":"impl Unpin for Ident","synthetic":true,"types":[]},{"text":"impl Unpin for Literal","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl Unpin for Bernoulli","synthetic":true,"types":[]},{"text":"impl Unpin for BernoulliError","synthetic":true,"types":[]},{"text":"impl Unpin for Binomial","synthetic":true,"types":[]},{"text":"impl Unpin for Cauchy","synthetic":true,"types":[]},{"text":"impl Unpin for Dirichlet","synthetic":true,"types":[]},{"text":"impl Unpin for Exp1","synthetic":true,"types":[]},{"text":"impl Unpin for Exp","synthetic":true,"types":[]},{"text":"impl Unpin for Gamma","synthetic":true,"types":[]},{"text":"impl Unpin for ChiSquared","synthetic":true,"types":[]},{"text":"impl Unpin for FisherF","synthetic":true,"types":[]},{"text":"impl Unpin for StudentT","synthetic":true,"types":[]},{"text":"impl Unpin for Beta","synthetic":true,"types":[]},{"text":"impl Unpin for StandardNormal","synthetic":true,"types":[]},{"text":"impl Unpin for Normal","synthetic":true,"types":[]},{"text":"impl Unpin for LogNormal","synthetic":true,"types":[]},{"text":"impl Unpin for Pareto","synthetic":true,"types":[]},{"text":"impl Unpin for Poisson","synthetic":true,"types":[]},{"text":"impl Unpin for Triangular","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Unpin for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Unpin for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Unpin for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UniformDuration","synthetic":true,"types":[]},{"text":"impl Unpin for UnitCircle","synthetic":true,"types":[]},{"text":"impl Unpin for UnitSphereSurface","synthetic":true,"types":[]},{"text":"impl Unpin for Weibull","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as SampleUniform&gt;::Sampler: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Unpin for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for WeightedError","synthetic":true,"types":[]},{"text":"impl Unpin for OpenClosed01","synthetic":true,"types":[]},{"text":"impl Unpin for Open01","synthetic":true,"types":[]},{"text":"impl Unpin for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; Unpin for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Standard","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; Unpin for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for EntropyRng","synthetic":true,"types":[]},{"text":"impl Unpin for StepRng","synthetic":true,"types":[]},{"text":"impl Unpin for StdRng","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadRng","synthetic":true,"types":[]},{"text":"impl Unpin for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IndexVecIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; Unpin for SliceChooseIter&lt;'a, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl Unpin for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Unpin for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Unpin for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for OsRng","synthetic":true,"types":[]}];
implementors["regex"] = [{"text":"impl Unpin for RegexBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Unpin for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; Unpin for SubCaptureMatches&lt;'c, 't&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'t: 'c,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Unpin for ReplacerRef&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for NoExpand&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RegexSet","synthetic":true,"types":[]},{"text":"impl Unpin for SetMatches","synthetic":true,"types":[]},{"text":"impl Unpin for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for RegexBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for RegexSet","synthetic":true,"types":[]},{"text":"impl Unpin for SetMatches","synthetic":true,"types":[]},{"text":"impl Unpin for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Unpin for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; Unpin for SubCaptureMatches&lt;'c, 't&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'t: 'c,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Unpin for ReplacerRef&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for NoExpand&lt;'t&gt;","synthetic":true,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Unpin for ParserBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Parser","synthetic":true,"types":[]},{"text":"impl Unpin for Printer","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for Span","synthetic":true,"types":[]},{"text":"impl Unpin for Position","synthetic":true,"types":[]},{"text":"impl Unpin for WithComments","synthetic":true,"types":[]},{"text":"impl Unpin for Comment","synthetic":true,"types":[]},{"text":"impl Unpin for Ast","synthetic":true,"types":[]},{"text":"impl Unpin for Alternation","synthetic":true,"types":[]},{"text":"impl Unpin for Concat","synthetic":true,"types":[]},{"text":"impl Unpin for Literal","synthetic":true,"types":[]},{"text":"impl Unpin for LiteralKind","synthetic":true,"types":[]},{"text":"impl Unpin for SpecialLiteralKind","synthetic":true,"types":[]},{"text":"impl Unpin for HexLiteralKind","synthetic":true,"types":[]},{"text":"impl Unpin for Class","synthetic":true,"types":[]},{"text":"impl Unpin for ClassPerl","synthetic":true,"types":[]},{"text":"impl Unpin for ClassPerlKind","synthetic":true,"types":[]},{"text":"impl Unpin for ClassAscii","synthetic":true,"types":[]},{"text":"impl Unpin for ClassAsciiKind","synthetic":true,"types":[]},{"text":"impl Unpin for ClassUnicode","synthetic":true,"types":[]},{"text":"impl Unpin for ClassUnicodeKind","synthetic":true,"types":[]},{"text":"impl Unpin for ClassUnicodeOpKind","synthetic":true,"types":[]},{"text":"impl Unpin for ClassBracketed","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSet","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSetItem","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSetRange","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSetUnion","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSetBinaryOp","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSetBinaryOpKind","synthetic":true,"types":[]},{"text":"impl Unpin for Assertion","synthetic":true,"types":[]},{"text":"impl Unpin for AssertionKind","synthetic":true,"types":[]},{"text":"impl Unpin for Repetition","synthetic":true,"types":[]},{"text":"impl Unpin for RepetitionOp","synthetic":true,"types":[]},{"text":"impl Unpin for RepetitionKind","synthetic":true,"types":[]},{"text":"impl Unpin for RepetitionRange","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for GroupKind","synthetic":true,"types":[]},{"text":"impl Unpin for CaptureName","synthetic":true,"types":[]},{"text":"impl Unpin for SetFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Flags","synthetic":true,"types":[]},{"text":"impl Unpin for FlagsItem","synthetic":true,"types":[]},{"text":"impl Unpin for FlagsItemKind","synthetic":true,"types":[]},{"text":"impl Unpin for Flag","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Literals","synthetic":true,"types":[]},{"text":"impl Unpin for Literal","synthetic":true,"types":[]},{"text":"impl Unpin for Printer","synthetic":true,"types":[]},{"text":"impl Unpin for TranslatorBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Translator","synthetic":true,"types":[]},{"text":"impl Unpin for CaseFoldError","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for Hir","synthetic":true,"types":[]},{"text":"impl Unpin for HirKind","synthetic":true,"types":[]},{"text":"impl Unpin for Literal","synthetic":true,"types":[]},{"text":"impl Unpin for Class","synthetic":true,"types":[]},{"text":"impl Unpin for ClassUnicode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ClassUnicodeIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ClassUnicodeRange","synthetic":true,"types":[]},{"text":"impl Unpin for ClassBytes","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ClassBytesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ClassBytesRange","synthetic":true,"types":[]},{"text":"impl Unpin for Anchor","synthetic":true,"types":[]},{"text":"impl Unpin for WordBoundary","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for GroupKind","synthetic":true,"types":[]},{"text":"impl Unpin for Repetition","synthetic":true,"types":[]},{"text":"impl Unpin for RepetitionKind","synthetic":true,"types":[]},{"text":"impl Unpin for RepetitionRange","synthetic":true,"types":[]},{"text":"impl Unpin for ParserBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Parser","synthetic":true,"types":[]},{"text":"impl Unpin for UnicodeWordError","synthetic":true,"types":[]},{"text":"impl Unpin for Utf8Sequence","synthetic":true,"types":[]},{"text":"impl Unpin for Utf8Range","synthetic":true,"types":[]},{"text":"impl Unpin for Utf8Sequences","synthetic":true,"types":[]}];
implementors["reqwest"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Form","synthetic":true,"types":[]},{"text":"impl Unpin for Part","synthetic":true,"types":[]},{"text":"impl Unpin for Body","synthetic":true,"types":[]},{"text":"impl Unpin for Client","synthetic":true,"types":[]},{"text":"impl Unpin for ClientBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for RequestBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Response","synthetic":true,"types":[]},{"text":"impl Unpin for Body","synthetic":true,"types":[]},{"text":"impl Unpin for Client","synthetic":true,"types":[]},{"text":"impl Unpin for ClientBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Form","synthetic":true,"types":[]},{"text":"impl Unpin for Part","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for RequestBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Response","synthetic":true,"types":[]},{"text":"impl Unpin for Proxy","synthetic":true,"types":[]},{"text":"impl Unpin for Policy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Attempt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Action","synthetic":true,"types":[]},{"text":"impl Unpin for Certificate","synthetic":true,"types":[]},{"text":"impl Unpin for Identity","synthetic":true,"types":[]}];
implementors["ring"] = [{"text":"impl Unpin for TestCase","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for File&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SealingKey","synthetic":true,"types":[]},{"text":"impl Unpin for OpeningKey","synthetic":true,"types":[]},{"text":"impl Unpin for Nonce","synthetic":true,"types":[]},{"text":"impl Unpin for HeaderProtectionKey","synthetic":true,"types":[]},{"text":"impl Unpin for Algorithm","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for OpeningKey&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for SealingKey&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for Aad&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UnboundKey","synthetic":true,"types":[]},{"text":"impl Unpin for LessSafeKey","synthetic":true,"types":[]},{"text":"impl Unpin for Algorithm","synthetic":true,"types":[]},{"text":"impl Unpin for Tag","synthetic":true,"types":[]},{"text":"impl Unpin for Algorithm","synthetic":true,"types":[]},{"text":"impl Unpin for EphemeralPrivateKey","synthetic":true,"types":[]},{"text":"impl Unpin for PublicKey","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for UnparsedPublicKey&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Positive&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Context","synthetic":true,"types":[]},{"text":"impl Unpin for Digest","synthetic":true,"types":[]},{"text":"impl Unpin for Algorithm","synthetic":true,"types":[]},{"text":"impl Unpin for Ed25519KeyPair","synthetic":true,"types":[]},{"text":"impl Unpin for EdDSAParameters","synthetic":true,"types":[]},{"text":"impl Unpin for EcdsaSigningAlgorithm","synthetic":true,"types":[]},{"text":"impl Unpin for EcdsaKeyPair","synthetic":true,"types":[]},{"text":"impl Unpin for EcdsaVerificationAlgorithm","synthetic":true,"types":[]},{"text":"impl Unpin for Unspecified","synthetic":true,"types":[]},{"text":"impl Unpin for KeyRejected","synthetic":true,"types":[]},{"text":"impl Unpin for Algorithm","synthetic":true,"types":[]},{"text":"impl Unpin for Salt","synthetic":true,"types":[]},{"text":"impl Unpin for Prk","synthetic":true,"types":[]},{"text":"impl&lt;'a, L&gt; Unpin for Okm&lt;'a, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Algorithm","synthetic":true,"types":[]},{"text":"impl Unpin for Tag","synthetic":true,"types":[]},{"text":"impl Unpin for Key","synthetic":true,"types":[]},{"text":"impl Unpin for Context","synthetic":true,"types":[]},{"text":"impl Unpin for Algorithm","synthetic":true,"types":[]},{"text":"impl Unpin for Document","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Random&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SystemRandom","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for RsaPublicKeyComponents&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RsaKeyPair","synthetic":true,"types":[]},{"text":"impl Unpin for RsaSubjectPublicKey","synthetic":true,"types":[]},{"text":"impl Unpin for RsaParameters","synthetic":true,"types":[]},{"text":"impl Unpin for Signature","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for UnparsedPublicKey&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rustc_hash"] = [{"text":"impl Unpin for FxHasher","synthetic":true,"types":[]}];
implementors["rustls"] = [{"text":"impl Unpin for AlertMessagePayload","synthetic":true,"types":[]},{"text":"impl Unpin for Payload","synthetic":true,"types":[]},{"text":"impl Unpin for PayloadU24","synthetic":true,"types":[]},{"text":"impl Unpin for PayloadU16","synthetic":true,"types":[]},{"text":"impl Unpin for PayloadU8","synthetic":true,"types":[]},{"text":"impl Unpin for ChangeCipherSpecPayload","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for u24","synthetic":true,"types":[]},{"text":"impl Unpin for MessageDeframer","synthetic":true,"types":[]},{"text":"impl Unpin for ProtocolVersion","synthetic":true,"types":[]},{"text":"impl Unpin for HashAlgorithm","synthetic":true,"types":[]},{"text":"impl Unpin for SignatureAlgorithm","synthetic":true,"types":[]},{"text":"impl Unpin for ClientCertificateType","synthetic":true,"types":[]},{"text":"impl Unpin for Compression","synthetic":true,"types":[]},{"text":"impl Unpin for ContentType","synthetic":true,"types":[]},{"text":"impl Unpin for HandshakeType","synthetic":true,"types":[]},{"text":"impl Unpin for AlertLevel","synthetic":true,"types":[]},{"text":"impl Unpin for AlertDescription","synthetic":true,"types":[]},{"text":"impl Unpin for HeartbeatMessageType","synthetic":true,"types":[]},{"text":"impl Unpin for ExtensionType","synthetic":true,"types":[]},{"text":"impl Unpin for ServerNameType","synthetic":true,"types":[]},{"text":"impl Unpin for NamedCurve","synthetic":true,"types":[]},{"text":"impl Unpin for NamedGroup","synthetic":true,"types":[]},{"text":"impl Unpin for CipherSuite","synthetic":true,"types":[]},{"text":"impl Unpin for ECPointFormat","synthetic":true,"types":[]},{"text":"impl Unpin for HeartbeatMode","synthetic":true,"types":[]},{"text":"impl Unpin for ECCurveType","synthetic":true,"types":[]},{"text":"impl Unpin for SignatureScheme","synthetic":true,"types":[]},{"text":"impl Unpin for PSKKeyExchangeMode","synthetic":true,"types":[]},{"text":"impl Unpin for KeyUpdateRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CertificateStatusType","synthetic":true,"types":[]},{"text":"impl Unpin for MessageFragmenter","synthetic":true,"types":[]},{"text":"impl Unpin for Random","synthetic":true,"types":[]},{"text":"impl Unpin for SessionID","synthetic":true,"types":[]},{"text":"impl Unpin for UnknownExtension","synthetic":true,"types":[]},{"text":"impl Unpin for ServerNamePayload","synthetic":true,"types":[]},{"text":"impl Unpin for ServerName","synthetic":true,"types":[]},{"text":"impl Unpin for KeyShareEntry","synthetic":true,"types":[]},{"text":"impl Unpin for PresharedKeyIdentity","synthetic":true,"types":[]},{"text":"impl Unpin for PresharedKeyOffer","synthetic":true,"types":[]},{"text":"impl Unpin for OCSPCertificateStatusRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CertificateStatusRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ClientExtension","synthetic":true,"types":[]},{"text":"impl Unpin for ServerExtension","synthetic":true,"types":[]},{"text":"impl Unpin for ClientHelloPayload","synthetic":true,"types":[]},{"text":"impl Unpin for HelloRetryExtension","synthetic":true,"types":[]},{"text":"impl Unpin for HelloRetryRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ServerHelloPayload","synthetic":true,"types":[]},{"text":"impl Unpin for CertificateExtension","synthetic":true,"types":[]},{"text":"impl Unpin for CertificateEntry","synthetic":true,"types":[]},{"text":"impl Unpin for CertificatePayloadTLS13","synthetic":true,"types":[]},{"text":"impl Unpin for KeyExchangeAlgorithm","synthetic":true,"types":[]},{"text":"impl Unpin for ECParameters","synthetic":true,"types":[]},{"text":"impl Unpin for DigitallySignedStruct","synthetic":true,"types":[]},{"text":"impl Unpin for ClientECDHParams","synthetic":true,"types":[]},{"text":"impl Unpin for ServerECDHParams","synthetic":true,"types":[]},{"text":"impl Unpin for ECDHEServerKeyExchange","synthetic":true,"types":[]},{"text":"impl Unpin for ServerKeyExchangePayload","synthetic":true,"types":[]},{"text":"impl Unpin for CertificateRequestPayload","synthetic":true,"types":[]},{"text":"impl Unpin for CertReqExtension","synthetic":true,"types":[]},{"text":"impl Unpin for CertificateRequestPayloadTLS13","synthetic":true,"types":[]},{"text":"impl Unpin for NewSessionTicketPayload","synthetic":true,"types":[]},{"text":"impl Unpin for NewSessionTicketExtension","synthetic":true,"types":[]},{"text":"impl Unpin for NewSessionTicketPayloadTLS13","synthetic":true,"types":[]},{"text":"impl Unpin for CertificateStatus","synthetic":true,"types":[]},{"text":"impl Unpin for HandshakePayload","synthetic":true,"types":[]},{"text":"impl Unpin for HandshakeMessagePayload","synthetic":true,"types":[]},{"text":"impl Unpin for HandshakeJoiner","synthetic":true,"types":[]},{"text":"impl Unpin for MessagePayload","synthetic":true,"types":[]},{"text":"impl Unpin for Message","synthetic":true,"types":[]},{"text":"impl Unpin for MessageError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BorrowMessage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ClientSessionKey","synthetic":true,"types":[]},{"text":"impl Unpin for ClientSessionValue","synthetic":true,"types":[]},{"text":"impl Unpin for ServerSessionValue","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedTrustAnchor","synthetic":true,"types":[]},{"text":"impl Unpin for RootCertStore","synthetic":true,"types":[]},{"text":"impl Unpin for TLSError","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T:&nbsp;?Sized&gt; Unpin for Stream&lt;'a, S, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; Unpin for StreamOwned&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for HandshakeSignatureValid","synthetic":true,"types":[]},{"text":"impl Unpin for ServerCertVerified","synthetic":true,"types":[]},{"text":"impl Unpin for ClientCertVerified","synthetic":true,"types":[]},{"text":"impl Unpin for WebPKIVerifier","synthetic":true,"types":[]},{"text":"impl Unpin for AllowAnyAuthenticatedClient","synthetic":true,"types":[]},{"text":"impl Unpin for AllowAnyAnonymousOrAuthenticatedClient","synthetic":true,"types":[]},{"text":"impl Unpin for NoClientAuth","synthetic":true,"types":[]},{"text":"impl Unpin for NoClientSessionStorage","synthetic":true,"types":[]},{"text":"impl Unpin for ClientSessionMemoryCache","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DangerousClientConfig&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ClientConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for WriteEarlyData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ClientSession","synthetic":true,"types":[]},{"text":"impl Unpin for PrivateKey","synthetic":true,"types":[]},{"text":"impl Unpin for Certificate","synthetic":true,"types":[]},{"text":"impl Unpin for NoKeyLog","synthetic":true,"types":[]},{"text":"impl Unpin for KeyLogFile","synthetic":true,"types":[]},{"text":"impl Unpin for NoServerSessionStorage","synthetic":true,"types":[]},{"text":"impl Unpin for ServerSessionMemoryCache","synthetic":true,"types":[]},{"text":"impl Unpin for ResolvesServerCertUsingSNI","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ClientHello&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ServerConfig","synthetic":true,"types":[]},{"text":"impl Unpin for ServerSession","synthetic":true,"types":[]},{"text":"impl Unpin for BulkAlgorithm","synthetic":true,"types":[]},{"text":"impl Unpin for SupportedCipherSuite","synthetic":true,"types":[]},{"text":"impl Unpin for Ticketer","synthetic":true,"types":[]},{"text":"impl Unpin for CertifiedKey","synthetic":true,"types":[]},{"text":"impl Unpin for RSASigningKey","synthetic":true,"types":[]}];
implementors["ryu"] = [{"text":"impl Unpin for Buffer","synthetic":true,"types":[]}];
implementors["same_file"] = [{"text":"impl Unpin for Handle","synthetic":true,"types":[]}];
implementors["schemars"] = [{"text":"impl Unpin for SchemaSettings","synthetic":true,"types":[]},{"text":"impl Unpin for SchemaGenerator","synthetic":true,"types":[]},{"text":"impl Unpin for Schema","synthetic":true,"types":[]},{"text":"impl Unpin for RootSchema","synthetic":true,"types":[]},{"text":"impl Unpin for SchemaObject","synthetic":true,"types":[]},{"text":"impl Unpin for Metadata","synthetic":true,"types":[]},{"text":"impl Unpin for SubschemaValidation","synthetic":true,"types":[]},{"text":"impl Unpin for NumberValidation","synthetic":true,"types":[]},{"text":"impl Unpin for StringValidation","synthetic":true,"types":[]},{"text":"impl Unpin for ArrayValidation","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectValidation","synthetic":true,"types":[]},{"text":"impl Unpin for InstanceType","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SingleOrVec&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ReplaceBoolSchemas","synthetic":true,"types":[]},{"text":"impl Unpin for RemoveRefSiblings","synthetic":true,"types":[]},{"text":"impl Unpin for SetSingleExample","synthetic":true,"types":[]}];
implementors["sct"] = [{"text":"impl&lt;'a&gt; Unpin for Log&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Unpin for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for BytesDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Unpin for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Unpin for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; Unpin for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; Unpin for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_derive_internals"] = [{"text":"impl&lt;'a&gt; Unpin for Container&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Data&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Variant&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Field&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Style","synthetic":true,"types":[]},{"text":"impl Unpin for Name","synthetic":true,"types":[]},{"text":"impl Unpin for RenameAllRules","synthetic":true,"types":[]},{"text":"impl Unpin for Container","synthetic":true,"types":[]},{"text":"impl Unpin for TagType","synthetic":true,"types":[]},{"text":"impl Unpin for Identifier","synthetic":true,"types":[]},{"text":"impl Unpin for Variant","synthetic":true,"types":[]},{"text":"impl Unpin for Field","synthetic":true,"types":[]},{"text":"impl Unpin for Default","synthetic":true,"types":[]},{"text":"impl Unpin for Ctxt","synthetic":true,"types":[]},{"text":"impl Unpin for RenameRule","synthetic":true,"types":[]},{"text":"impl Unpin for Derive","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;'a&gt; Unpin for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; Unpin for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Category","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for Map&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; Unpin for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CharEscape","synthetic":true,"types":[]},{"text":"impl Unpin for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Serializer","synthetic":true,"types":[]},{"text":"impl Unpin for Number","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]}];
implementors["serde_urlencoded"] = [{"text":"impl&lt;'de&gt; Unpin for Deserializer&lt;'de&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Unpin for Serializer&lt;'input, 'output, Target&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'input: 'output,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Unpin for SeqSerializer&lt;'input, 'output, Target&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'input: 'output,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Unpin for TupleSerializer&lt;'input, 'output, Target&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'input: 'output,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; Unpin for TupleStructSerializer&lt;'input, 'output, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'input: 'output,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; Unpin for TupleVariantSerializer&lt;'input, 'output, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'input: 'output,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Unpin for MapSerializer&lt;'input, 'output, Target&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'input: 'output,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Unpin for StructSerializer&lt;'input, 'output, Target&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'input: 'output,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; Unpin for StructVariantSerializer&lt;'input, 'output, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'input: 'output,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_xml_rs"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for Serializer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_yaml"] = [{"text":"impl&lt;'a&gt; Unpin for Deserializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Location","synthetic":true,"types":[]},{"text":"impl Unpin for Mapping","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]},{"text":"impl Unpin for Number","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for Serializer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]}];
implementors["sha2"] = [{"text":"impl Unpin for Sha256","synthetic":true,"types":[]},{"text":"impl Unpin for Sha224","synthetic":true,"types":[]},{"text":"impl Unpin for Sha512","synthetic":true,"types":[]},{"text":"impl Unpin for Sha384","synthetic":true,"types":[]},{"text":"impl Unpin for Sha512Trunc256","synthetic":true,"types":[]},{"text":"impl Unpin for Sha512Trunc224","synthetic":true,"types":[]}];
implementors["shellwords"] = [{"text":"impl Unpin for MismatchedQuotes","synthetic":true,"types":[]}];
implementors["signal_hook"] = [{"text":"impl Unpin for Handle","synthetic":true,"types":[]},{"text":"impl&lt;R, E&gt; Unpin for SignalDelivery&lt;R, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Pending&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;O&gt; Unpin for PollResult&lt;O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;SD, E&gt; Unpin for SignalIterator&lt;SD, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SD: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for WithRawSiginfo","synthetic":true,"types":[]},{"text":"impl Unpin for SignalOnly","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for SignalsInfo&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for Forever&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Channel&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["signal_hook_registry"] = [{"text":"impl Unpin for SigId","synthetic":true,"types":[]}];
implementors["siphasher"] = [{"text":"impl Unpin for SipHasher13","synthetic":true,"types":[]},{"text":"impl Unpin for SipHasher24","synthetic":true,"types":[]},{"text":"impl Unpin for SipHasher","synthetic":true,"types":[]},{"text":"impl Unpin for Hash128","synthetic":true,"types":[]},{"text":"impl Unpin for SipHasher13","synthetic":true,"types":[]},{"text":"impl Unpin for SipHasher24","synthetic":true,"types":[]},{"text":"impl Unpin for SipHasher","synthetic":true,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Unpin for Slab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Drain&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["socket2"] = [{"text":"impl Unpin for SockAddr","synthetic":true,"types":[]},{"text":"impl Unpin for Socket","synthetic":true,"types":[]},{"text":"impl Unpin for Domain","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Protocol","synthetic":true,"types":[]}];
implementors["spin"] = [{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for RwLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockUpgradeableGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Once&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["strsim"] = [{"text":"impl Unpin for StrSimError","synthetic":true,"types":[]}];
implementors["subprocess"] = [{"text":"impl Unpin for Exec","synthetic":true,"types":[]},{"text":"impl Unpin for CaptureData","synthetic":true,"types":[]},{"text":"impl Unpin for NullFile","synthetic":true,"types":[]},{"text":"impl Unpin for Pipeline","synthetic":true,"types":[]},{"text":"impl Unpin for Communicator","synthetic":true,"types":[]},{"text":"impl Unpin for CommunicateError","synthetic":true,"types":[]},{"text":"impl Unpin for Popen","synthetic":true,"types":[]},{"text":"impl Unpin for PopenConfig","synthetic":true,"types":[]},{"text":"impl Unpin for Redirection","synthetic":true,"types":[]},{"text":"impl Unpin for PopenError","synthetic":true,"types":[]},{"text":"impl Unpin for ExitStatus","synthetic":true,"types":[]}];
implementors["subtle"] = [{"text":"impl Unpin for Choice","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for CtOption&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl Unpin for Underscore","synthetic":true,"types":[]},{"text":"impl Unpin for Abstract","synthetic":true,"types":[]},{"text":"impl Unpin for As","synthetic":true,"types":[]},{"text":"impl Unpin for Async","synthetic":true,"types":[]},{"text":"impl Unpin for Auto","synthetic":true,"types":[]},{"text":"impl Unpin for Await","synthetic":true,"types":[]},{"text":"impl Unpin for Become","synthetic":true,"types":[]},{"text":"impl Unpin for Box","synthetic":true,"types":[]},{"text":"impl Unpin for Break","synthetic":true,"types":[]},{"text":"impl Unpin for Const","synthetic":true,"types":[]},{"text":"impl Unpin for Continue","synthetic":true,"types":[]},{"text":"impl Unpin for Crate","synthetic":true,"types":[]},{"text":"impl Unpin for Default","synthetic":true,"types":[]},{"text":"impl Unpin for Do","synthetic":true,"types":[]},{"text":"impl Unpin for Dyn","synthetic":true,"types":[]},{"text":"impl Unpin for Else","synthetic":true,"types":[]},{"text":"impl Unpin for Enum","synthetic":true,"types":[]},{"text":"impl Unpin for Extern","synthetic":true,"types":[]},{"text":"impl Unpin for Final","synthetic":true,"types":[]},{"text":"impl Unpin for Fn","synthetic":true,"types":[]},{"text":"impl Unpin for For","synthetic":true,"types":[]},{"text":"impl Unpin for If","synthetic":true,"types":[]},{"text":"impl Unpin for Impl","synthetic":true,"types":[]},{"text":"impl Unpin for In","synthetic":true,"types":[]},{"text":"impl Unpin for Let","synthetic":true,"types":[]},{"text":"impl Unpin for Loop","synthetic":true,"types":[]},{"text":"impl Unpin for Macro","synthetic":true,"types":[]},{"text":"impl Unpin for Match","synthetic":true,"types":[]},{"text":"impl Unpin for Mod","synthetic":true,"types":[]},{"text":"impl Unpin for Move","synthetic":true,"types":[]},{"text":"impl Unpin for Mut","synthetic":true,"types":[]},{"text":"impl Unpin for Override","synthetic":true,"types":[]},{"text":"impl Unpin for Priv","synthetic":true,"types":[]},{"text":"impl Unpin for Pub","synthetic":true,"types":[]},{"text":"impl Unpin for Ref","synthetic":true,"types":[]},{"text":"impl Unpin for Return","synthetic":true,"types":[]},{"text":"impl Unpin for SelfType","synthetic":true,"types":[]},{"text":"impl Unpin for SelfValue","synthetic":true,"types":[]},{"text":"impl Unpin for Static","synthetic":true,"types":[]},{"text":"impl Unpin for Struct","synthetic":true,"types":[]},{"text":"impl Unpin for Super","synthetic":true,"types":[]},{"text":"impl Unpin for Trait","synthetic":true,"types":[]},{"text":"impl Unpin for Try","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Typeof","synthetic":true,"types":[]},{"text":"impl Unpin for Union","synthetic":true,"types":[]},{"text":"impl Unpin for Unsafe","synthetic":true,"types":[]},{"text":"impl Unpin for Unsized","synthetic":true,"types":[]},{"text":"impl Unpin for Use","synthetic":true,"types":[]},{"text":"impl Unpin for Virtual","synthetic":true,"types":[]},{"text":"impl Unpin for Where","synthetic":true,"types":[]},{"text":"impl Unpin for While","synthetic":true,"types":[]},{"text":"impl Unpin for Yield","synthetic":true,"types":[]},{"text":"impl Unpin for Add","synthetic":true,"types":[]},{"text":"impl Unpin for AddEq","synthetic":true,"types":[]},{"text":"impl Unpin for And","synthetic":true,"types":[]},{"text":"impl Unpin for AndAnd","synthetic":true,"types":[]},{"text":"impl Unpin for AndEq","synthetic":true,"types":[]},{"text":"impl Unpin for At","synthetic":true,"types":[]},{"text":"impl Unpin for Bang","synthetic":true,"types":[]},{"text":"impl Unpin for Caret","synthetic":true,"types":[]},{"text":"impl Unpin for CaretEq","synthetic":true,"types":[]},{"text":"impl Unpin for Colon","synthetic":true,"types":[]},{"text":"impl Unpin for Colon2","synthetic":true,"types":[]},{"text":"impl Unpin for Comma","synthetic":true,"types":[]},{"text":"impl Unpin for Div","synthetic":true,"types":[]},{"text":"impl Unpin for DivEq","synthetic":true,"types":[]},{"text":"impl Unpin for Dollar","synthetic":true,"types":[]},{"text":"impl Unpin for Dot","synthetic":true,"types":[]},{"text":"impl Unpin for Dot2","synthetic":true,"types":[]},{"text":"impl Unpin for Dot3","synthetic":true,"types":[]},{"text":"impl Unpin for DotDotEq","synthetic":true,"types":[]},{"text":"impl Unpin for Eq","synthetic":true,"types":[]},{"text":"impl Unpin for EqEq","synthetic":true,"types":[]},{"text":"impl Unpin for Ge","synthetic":true,"types":[]},{"text":"impl Unpin for Gt","synthetic":true,"types":[]},{"text":"impl Unpin for Le","synthetic":true,"types":[]},{"text":"impl Unpin for Lt","synthetic":true,"types":[]},{"text":"impl Unpin for MulEq","synthetic":true,"types":[]},{"text":"impl Unpin for Ne","synthetic":true,"types":[]},{"text":"impl Unpin for Or","synthetic":true,"types":[]},{"text":"impl Unpin for OrEq","synthetic":true,"types":[]},{"text":"impl Unpin for OrOr","synthetic":true,"types":[]},{"text":"impl Unpin for Pound","synthetic":true,"types":[]},{"text":"impl Unpin for Question","synthetic":true,"types":[]},{"text":"impl Unpin for RArrow","synthetic":true,"types":[]},{"text":"impl Unpin for LArrow","synthetic":true,"types":[]},{"text":"impl Unpin for Rem","synthetic":true,"types":[]},{"text":"impl Unpin for RemEq","synthetic":true,"types":[]},{"text":"impl Unpin for FatArrow","synthetic":true,"types":[]},{"text":"impl Unpin for Semi","synthetic":true,"types":[]},{"text":"impl Unpin for Shl","synthetic":true,"types":[]},{"text":"impl Unpin for ShlEq","synthetic":true,"types":[]},{"text":"impl Unpin for Shr","synthetic":true,"types":[]},{"text":"impl Unpin for ShrEq","synthetic":true,"types":[]},{"text":"impl Unpin for Star","synthetic":true,"types":[]},{"text":"impl Unpin for Sub","synthetic":true,"types":[]},{"text":"impl Unpin for SubEq","synthetic":true,"types":[]},{"text":"impl Unpin for Tilde","synthetic":true,"types":[]},{"text":"impl Unpin for Brace","synthetic":true,"types":[]},{"text":"impl Unpin for Bracket","synthetic":true,"types":[]},{"text":"impl Unpin for Paren","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for Attribute","synthetic":true,"types":[]},{"text":"impl Unpin for AttrStyle","synthetic":true,"types":[]},{"text":"impl Unpin for Meta","synthetic":true,"types":[]},{"text":"impl Unpin for MetaList","synthetic":true,"types":[]},{"text":"impl Unpin for MetaNameValue","synthetic":true,"types":[]},{"text":"impl Unpin for NestedMeta","synthetic":true,"types":[]},{"text":"impl Unpin for Variant","synthetic":true,"types":[]},{"text":"impl Unpin for Fields","synthetic":true,"types":[]},{"text":"impl Unpin for FieldsNamed","synthetic":true,"types":[]},{"text":"impl Unpin for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl Unpin for Field","synthetic":true,"types":[]},{"text":"impl Unpin for Visibility","synthetic":true,"types":[]},{"text":"impl Unpin for VisPublic","synthetic":true,"types":[]},{"text":"impl Unpin for VisCrate","synthetic":true,"types":[]},{"text":"impl Unpin for VisRestricted","synthetic":true,"types":[]},{"text":"impl Unpin for Expr","synthetic":true,"types":[]},{"text":"impl Unpin for ExprArray","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAssign","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAsync","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAwait","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBinary","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBlock","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBox","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBreak","synthetic":true,"types":[]},{"text":"impl Unpin for ExprCall","synthetic":true,"types":[]},{"text":"impl Unpin for ExprCast","synthetic":true,"types":[]},{"text":"impl Unpin for ExprClosure","synthetic":true,"types":[]},{"text":"impl Unpin for ExprContinue","synthetic":true,"types":[]},{"text":"impl Unpin for ExprField","synthetic":true,"types":[]},{"text":"impl Unpin for ExprForLoop","synthetic":true,"types":[]},{"text":"impl Unpin for ExprGroup","synthetic":true,"types":[]},{"text":"impl Unpin for ExprIf","synthetic":true,"types":[]},{"text":"impl Unpin for ExprIndex","synthetic":true,"types":[]},{"text":"impl Unpin for ExprLet","synthetic":true,"types":[]},{"text":"impl Unpin for ExprLit","synthetic":true,"types":[]},{"text":"impl Unpin for ExprLoop","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMacro","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMatch","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl Unpin for ExprParen","synthetic":true,"types":[]},{"text":"impl Unpin for ExprPath","synthetic":true,"types":[]},{"text":"impl Unpin for ExprRange","synthetic":true,"types":[]},{"text":"impl Unpin for ExprReference","synthetic":true,"types":[]},{"text":"impl Unpin for ExprRepeat","synthetic":true,"types":[]},{"text":"impl Unpin for ExprReturn","synthetic":true,"types":[]},{"text":"impl Unpin for ExprStruct","synthetic":true,"types":[]},{"text":"impl Unpin for ExprTry","synthetic":true,"types":[]},{"text":"impl Unpin for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl Unpin for ExprTuple","synthetic":true,"types":[]},{"text":"impl Unpin for ExprType","synthetic":true,"types":[]},{"text":"impl Unpin for ExprUnary","synthetic":true,"types":[]},{"text":"impl Unpin for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl Unpin for ExprWhile","synthetic":true,"types":[]},{"text":"impl Unpin for ExprYield","synthetic":true,"types":[]},{"text":"impl Unpin for Member","synthetic":true,"types":[]},{"text":"impl Unpin for Index","synthetic":true,"types":[]},{"text":"impl Unpin for MethodTurbofish","synthetic":true,"types":[]},{"text":"impl Unpin for GenericMethodArgument","synthetic":true,"types":[]},{"text":"impl Unpin for FieldValue","synthetic":true,"types":[]},{"text":"impl Unpin for Label","synthetic":true,"types":[]},{"text":"impl Unpin for Arm","synthetic":true,"types":[]},{"text":"impl Unpin for RangeLimits","synthetic":true,"types":[]},{"text":"impl Unpin for Generics","synthetic":true,"types":[]},{"text":"impl Unpin for GenericParam","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParam","synthetic":true,"types":[]},{"text":"impl Unpin for LifetimeDef","synthetic":true,"types":[]},{"text":"impl Unpin for ConstParam","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParamBound","synthetic":true,"types":[]},{"text":"impl Unpin for TraitBound","synthetic":true,"types":[]},{"text":"impl Unpin for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl Unpin for WhereClause","synthetic":true,"types":[]},{"text":"impl Unpin for WherePredicate","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateType","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateEq","synthetic":true,"types":[]},{"text":"impl Unpin for Item","synthetic":true,"types":[]},{"text":"impl Unpin for ItemConst","synthetic":true,"types":[]},{"text":"impl Unpin for ItemEnum","synthetic":true,"types":[]},{"text":"impl Unpin for ItemExternCrate","synthetic":true,"types":[]},{"text":"impl Unpin for ItemFn","synthetic":true,"types":[]},{"text":"impl Unpin for ItemForeignMod","synthetic":true,"types":[]},{"text":"impl Unpin for ItemImpl","synthetic":true,"types":[]},{"text":"impl Unpin for ItemMacro","synthetic":true,"types":[]},{"text":"impl Unpin for ItemMacro2","synthetic":true,"types":[]},{"text":"impl Unpin for ItemMod","synthetic":true,"types":[]},{"text":"impl Unpin for ItemStatic","synthetic":true,"types":[]},{"text":"impl Unpin for ItemStruct","synthetic":true,"types":[]},{"text":"impl Unpin for ItemTrait","synthetic":true,"types":[]},{"text":"impl Unpin for ItemTraitAlias","synthetic":true,"types":[]},{"text":"impl Unpin for ItemType","synthetic":true,"types":[]},{"text":"impl Unpin for ItemUnion","synthetic":true,"types":[]},{"text":"impl Unpin for ItemUse","synthetic":true,"types":[]},{"text":"impl Unpin for UseTree","synthetic":true,"types":[]},{"text":"impl Unpin for UsePath","synthetic":true,"types":[]},{"text":"impl Unpin for UseName","synthetic":true,"types":[]},{"text":"impl Unpin for UseRename","synthetic":true,"types":[]},{"text":"impl Unpin for UseGlob","synthetic":true,"types":[]},{"text":"impl Unpin for UseGroup","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItem","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItemFn","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItemStatic","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItemType","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItemMacro","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItem","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItemConst","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItemMethod","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItemType","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItemMacro","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItem","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemConst","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemMethod","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemType","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemMacro","synthetic":true,"types":[]},{"text":"impl Unpin for Signature","synthetic":true,"types":[]},{"text":"impl Unpin for FnArg","synthetic":true,"types":[]},{"text":"impl Unpin for Receiver","synthetic":true,"types":[]},{"text":"impl Unpin for File","synthetic":true,"types":[]},{"text":"impl Unpin for Lifetime","synthetic":true,"types":[]},{"text":"impl Unpin for Lit","synthetic":true,"types":[]},{"text":"impl Unpin for LitStr","synthetic":true,"types":[]},{"text":"impl Unpin for LitByteStr","synthetic":true,"types":[]},{"text":"impl Unpin for LitByte","synthetic":true,"types":[]},{"text":"impl Unpin for LitChar","synthetic":true,"types":[]},{"text":"impl Unpin for LitInt","synthetic":true,"types":[]},{"text":"impl Unpin for LitFloat","synthetic":true,"types":[]},{"text":"impl Unpin for LitBool","synthetic":true,"types":[]},{"text":"impl Unpin for StrStyle","synthetic":true,"types":[]},{"text":"impl Unpin for Macro","synthetic":true,"types":[]},{"text":"impl Unpin for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl Unpin for DeriveInput","synthetic":true,"types":[]},{"text":"impl Unpin for Data","synthetic":true,"types":[]},{"text":"impl Unpin for DataStruct","synthetic":true,"types":[]},{"text":"impl Unpin for DataEnum","synthetic":true,"types":[]},{"text":"impl Unpin for DataUnion","synthetic":true,"types":[]},{"text":"impl Unpin for BinOp","synthetic":true,"types":[]},{"text":"impl Unpin for UnOp","synthetic":true,"types":[]},{"text":"impl Unpin for Block","synthetic":true,"types":[]},{"text":"impl Unpin for Stmt","synthetic":true,"types":[]},{"text":"impl Unpin for Local","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for TypeArray","synthetic":true,"types":[]},{"text":"impl Unpin for TypeBareFn","synthetic":true,"types":[]},{"text":"impl Unpin for TypeGroup","synthetic":true,"types":[]},{"text":"impl Unpin for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl Unpin for TypeInfer","synthetic":true,"types":[]},{"text":"impl Unpin for TypeMacro","synthetic":true,"types":[]},{"text":"impl Unpin for TypeNever","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParen","synthetic":true,"types":[]},{"text":"impl Unpin for TypePath","synthetic":true,"types":[]},{"text":"impl Unpin for TypePtr","synthetic":true,"types":[]},{"text":"impl Unpin for TypeReference","synthetic":true,"types":[]},{"text":"impl Unpin for TypeSlice","synthetic":true,"types":[]},{"text":"impl Unpin for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl Unpin for TypeTuple","synthetic":true,"types":[]},{"text":"impl Unpin for Abi","synthetic":true,"types":[]},{"text":"impl Unpin for BareFnArg","synthetic":true,"types":[]},{"text":"impl Unpin for Variadic","synthetic":true,"types":[]},{"text":"impl Unpin for ReturnType","synthetic":true,"types":[]},{"text":"impl Unpin for Pat","synthetic":true,"types":[]},{"text":"impl Unpin for PatBox","synthetic":true,"types":[]},{"text":"impl Unpin for PatIdent","synthetic":true,"types":[]},{"text":"impl Unpin for PatLit","synthetic":true,"types":[]},{"text":"impl Unpin for PatMacro","synthetic":true,"types":[]},{"text":"impl Unpin for PatOr","synthetic":true,"types":[]},{"text":"impl Unpin for PatPath","synthetic":true,"types":[]},{"text":"impl Unpin for PatRange","synthetic":true,"types":[]},{"text":"impl Unpin for PatReference","synthetic":true,"types":[]},{"text":"impl Unpin for PatRest","synthetic":true,"types":[]},{"text":"impl Unpin for PatSlice","synthetic":true,"types":[]},{"text":"impl Unpin for PatStruct","synthetic":true,"types":[]},{"text":"impl Unpin for PatTuple","synthetic":true,"types":[]},{"text":"impl Unpin for PatTupleStruct","synthetic":true,"types":[]},{"text":"impl Unpin for PatType","synthetic":true,"types":[]},{"text":"impl Unpin for PatWild","synthetic":true,"types":[]},{"text":"impl Unpin for FieldPat","synthetic":true,"types":[]},{"text":"impl Unpin for Path","synthetic":true,"types":[]},{"text":"impl Unpin for PathSegment","synthetic":true,"types":[]},{"text":"impl Unpin for PathArguments","synthetic":true,"types":[]},{"text":"impl Unpin for GenericArgument","synthetic":true,"types":[]},{"text":"impl Unpin for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl Unpin for Binding","synthetic":true,"types":[]},{"text":"impl Unpin for Constraint","synthetic":true,"types":[]},{"text":"impl Unpin for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl Unpin for QSelf","synthetic":true,"types":[]},{"text":"impl Unpin for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Unpin for Pairs&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Unpin for PairsMut&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; Unpin for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Nothing","synthetic":true,"types":[]}];
implementors["tar"] = [{"text":"impl&lt;R:&nbsp;?Sized&gt; Unpin for Archive&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Unpin for Entries&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for Builder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Unpin for Entry&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Unpacked","synthetic":true,"types":[]},{"text":"impl Unpin for EntryType","synthetic":true,"types":[]},{"text":"impl Unpin for Header","synthetic":true,"types":[]},{"text":"impl Unpin for HeaderMode","synthetic":true,"types":[]},{"text":"impl Unpin for OldHeader","synthetic":true,"types":[]},{"text":"impl Unpin for UstarHeader","synthetic":true,"types":[]},{"text":"impl Unpin for GnuHeader","synthetic":true,"types":[]},{"text":"impl Unpin for GnuSparseHeader","synthetic":true,"types":[]},{"text":"impl Unpin for GnuExtSparseHeader","synthetic":true,"types":[]},{"text":"impl&lt;'entry&gt; Unpin for PaxExtensions&lt;'entry&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'entry&gt; Unpin for PaxExtension&lt;'entry&gt;","synthetic":true,"types":[]}];
implementors["tempfile"] = [{"text":"impl Unpin for TempDir","synthetic":true,"types":[]},{"text":"impl Unpin for PathPersistError","synthetic":true,"types":[]},{"text":"impl Unpin for TempPath","synthetic":true,"types":[]},{"text":"impl Unpin for NamedTempFile","synthetic":true,"types":[]},{"text":"impl Unpin for PersistError","synthetic":true,"types":[]},{"text":"impl Unpin for SpooledTempFile","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for Builder&lt;'a, 'b&gt;","synthetic":true,"types":[]}];
implementors["termcolor"] = [{"text":"impl Unpin for ColorChoice","synthetic":true,"types":[]},{"text":"impl Unpin for StandardStream","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StandardStreamLock&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for BufferedStandardStream","synthetic":true,"types":[]},{"text":"impl Unpin for BufferWriter","synthetic":true,"types":[]},{"text":"impl Unpin for Buffer","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for NoColor&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for Ansi&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ColorSpec","synthetic":true,"types":[]},{"text":"impl Unpin for Color","synthetic":true,"types":[]},{"text":"impl Unpin for ParseColorError","synthetic":true,"types":[]}];
implementors["textwrap"] = [{"text":"impl Unpin for NoHyphenation","synthetic":true,"types":[]},{"text":"impl Unpin for HyphenSplitter","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Unpin for Wrapper&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Unpin for IntoWrapIter&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'w, 'a, S&gt; Unpin for WrapIter&lt;'w, 'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'w,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["thread_local"] = [{"text":"impl&lt;T&gt; Unpin for CachedThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for CachedIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for CachedIntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt;","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl Unpin for Duration","synthetic":true,"types":[]},{"text":"impl Unpin for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl Unpin for Timespec","synthetic":true,"types":[]},{"text":"impl Unpin for PreciseTime","synthetic":true,"types":[]},{"text":"impl Unpin for SteadyTime","synthetic":true,"types":[]},{"text":"impl Unpin for Tm","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TmFmt&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A&gt; Unpin for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A, I&gt; Unpin for ArrayVecSplice&lt;'p, A, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for ArrayVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for ArrayVecDrain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'s, T&gt; Unpin for SliceVec&lt;'s, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'p, 's, T&gt; Unpin for SliceVecDrain&lt;'p, 's, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'s: 'p,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A&gt; Unpin for TinyVecDrain&lt;'p, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'p, A, I&gt; Unpin for TinyVecSplice&lt;'p, A, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for TinyVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tmc_client"] = [{"text":"impl Unpin for ClientError","synthetic":true,"types":[]},{"text":"impl Unpin for FeedbackAnswer","synthetic":true,"types":[]},{"text":"impl Unpin for User","synthetic":true,"types":[]},{"text":"impl Unpin for Organization","synthetic":true,"types":[]},{"text":"impl Unpin for Course","synthetic":true,"types":[]},{"text":"impl Unpin for CourseData","synthetic":true,"types":[]},{"text":"impl Unpin for CourseDetails","synthetic":true,"types":[]},{"text":"impl Unpin for Exercise","synthetic":true,"types":[]},{"text":"impl Unpin for CourseExercise","synthetic":true,"types":[]},{"text":"impl Unpin for CourseDataExercise","synthetic":true,"types":[]},{"text":"impl Unpin for CourseDataExercisePoint","synthetic":true,"types":[]},{"text":"impl Unpin for ExerciseDetails","synthetic":true,"types":[]},{"text":"impl Unpin for ExercisesDetails","synthetic":true,"types":[]},{"text":"impl Unpin for Submission","synthetic":true,"types":[]},{"text":"impl Unpin for NewSubmission","synthetic":true,"types":[]},{"text":"impl Unpin for SubmissionProcessingStatus","synthetic":true,"types":[]},{"text":"impl Unpin for SubmissionFinished","synthetic":true,"types":[]},{"text":"impl Unpin for SubmissionStatus","synthetic":true,"types":[]},{"text":"impl Unpin for SubmissionFeedbackResponse","synthetic":true,"types":[]},{"text":"impl Unpin for Review","synthetic":true,"types":[]},{"text":"impl Unpin for UpdateResult","synthetic":true,"types":[]},{"text":"impl Unpin for ClientUpdateData","synthetic":true,"types":[]},{"text":"impl Unpin for TmcClient","synthetic":true,"types":[]}];
implementors["tmc_langs_csharp"] = [{"text":"impl Unpin for CSharpError","synthetic":true,"types":[]},{"text":"impl Unpin for CSharpPlugin","synthetic":true,"types":[]},{"text":"impl Unpin for CSharpStudentFilePolicy","synthetic":true,"types":[]}];
implementors["tmc_langs_framework"] = [{"text":"impl Unpin for TmcCommand","synthetic":true,"types":[]},{"text":"impl Unpin for Output","synthetic":true,"types":[]},{"text":"impl Unpin for TestDesc","synthetic":true,"types":[]},{"text":"impl Unpin for TestResult","synthetic":true,"types":[]},{"text":"impl Unpin for ExerciseDesc","synthetic":true,"types":[]},{"text":"impl Unpin for RunResult","synthetic":true,"types":[]},{"text":"impl Unpin for RunStatus","synthetic":true,"types":[]},{"text":"impl Unpin for ExercisePackagingConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for StyleValidationStrategy","synthetic":true,"types":[]},{"text":"impl Unpin for StyleValidationError","synthetic":true,"types":[]},{"text":"impl Unpin for StyleValidationResult","synthetic":true,"types":[]},{"text":"impl Unpin for TmcError","synthetic":true,"types":[]},{"text":"impl Unpin for CommandError","synthetic":true,"types":[]},{"text":"impl Unpin for FileIo","synthetic":true,"types":[]},{"text":"impl Unpin for FileLock","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FileLockGuard&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for MetaString","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for MetaSyntaxParser&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for NothingIsStudentFilePolicy","synthetic":true,"types":[]},{"text":"impl Unpin for EverythingIsStudentFilePolicy","synthetic":true,"types":[]},{"text":"impl Unpin for TmcProjectYml","synthetic":true,"types":[]},{"text":"impl Unpin for PythonVer","synthetic":true,"types":[]},{"text":"impl Unpin for NoTests","synthetic":true,"types":[]},{"text":"impl Unpin for NoTestsWrapper","synthetic":true,"types":[]},{"text":"impl Unpin for NoTestsPoints","synthetic":true,"types":[]},{"text":"impl Unpin for IntOrString","synthetic":true,"types":[]},{"text":"impl Unpin for Warning","synthetic":true,"types":[]}];
implementors["tmc_langs_java"] = [{"text":"impl Unpin for AntPlugin","synthetic":true,"types":[]},{"text":"impl Unpin for AntStudentFilePolicy","synthetic":true,"types":[]},{"text":"impl Unpin for JavaError","synthetic":true,"types":[]},{"text":"impl Unpin for MavenPlugin","synthetic":true,"types":[]},{"text":"impl Unpin for MavenStudentFilePolicy","synthetic":true,"types":[]}];
implementors["tmc_langs_make"] = [{"text":"impl Unpin for MakeError","synthetic":true,"types":[]},{"text":"impl Unpin for MakePlugin","synthetic":true,"types":[]},{"text":"impl Unpin for MakeStudentFilePolicy","synthetic":true,"types":[]}];
implementors["tmc_langs_notests"] = [{"text":"impl Unpin for NoTestsPlugin","synthetic":true,"types":[]},{"text":"impl Unpin for NoTestsStudentFilePolicy","synthetic":true,"types":[]}];
implementors["tmc_langs_python3"] = [{"text":"impl Unpin for PythonError","synthetic":true,"types":[]},{"text":"impl Unpin for Python3Plugin","synthetic":true,"types":[]},{"text":"impl Unpin for Python3StudentFilePolicy","synthetic":true,"types":[]}];
implementors["tmc_langs_r"] = [{"text":"impl Unpin for RPlugin","synthetic":true,"types":[]},{"text":"impl Unpin for RStudentFilePolicy","synthetic":true,"types":[]}];
implementors["tmc_langs_util"] = [{"text":"impl Unpin for UtilError","synthetic":true,"types":[]},{"text":"impl Unpin for ParamError","synthetic":true,"types":[]},{"text":"impl Unpin for ProgressReporter2","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for StatusUpdate&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RefreshData","synthetic":true,"types":[]},{"text":"impl Unpin for RefreshExercise","synthetic":true,"types":[]},{"text":"impl Unpin for TmcParams","synthetic":true,"types":[]},{"text":"impl Unpin for OutputFormat","synthetic":true,"types":[]}];
implementors["tokio"] = [{"text":"impl&lt;'a&gt; Unpin for ReadBuf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Interest","synthetic":true,"types":[]},{"text":"impl Unpin for Ready","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AsyncFd&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for AsyncFdReadyGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for AsyncFdReadyMutGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TryIoError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WriteHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Empty","synthetic":true,"types":[]},{"text":"impl Unpin for DuplexStream","synthetic":true,"types":[]},{"text":"impl Unpin for Repeat","synthetic":true,"types":[]},{"text":"impl Unpin for Sink","synthetic":true,"types":[]},{"text":"impl Unpin for TcpListener","synthetic":true,"types":[]},{"text":"impl Unpin for TcpSocket","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ReadHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for WriteHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedReadHalf","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedWriteHalf","synthetic":true,"types":[]},{"text":"impl Unpin for ReuniteError","synthetic":true,"types":[]},{"text":"impl Unpin for TcpStream","synthetic":true,"types":[]},{"text":"impl Unpin for UdpSocket","synthetic":true,"types":[]},{"text":"impl Unpin for UnixDatagram","synthetic":true,"types":[]},{"text":"impl Unpin for UnixListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ReadHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for WriteHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedReadHalf","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedWriteHalf","synthetic":true,"types":[]},{"text":"impl Unpin for ReuniteError","synthetic":true,"types":[]},{"text":"impl Unpin for SocketAddr","synthetic":true,"types":[]},{"text":"impl Unpin for UnixStream","synthetic":true,"types":[]},{"text":"impl Unpin for UCred","synthetic":true,"types":[]},{"text":"impl Unpin for JoinError","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for Handle","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for EnterGuard&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Runtime","synthetic":true,"types":[]},{"text":"impl Unpin for Barrier","synthetic":true,"types":[]},{"text":"impl Unpin for BarrierWaitResult","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RecvError","synthetic":true,"types":[]},{"text":"impl Unpin for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Permit&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnboundedReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for OwnedMutexGuard&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TryLockError","synthetic":true,"types":[]},{"text":"impl Unpin for Notify","synthetic":true,"types":[]},{"text":"impl Unpin for RecvError","synthetic":true,"types":[]},{"text":"impl Unpin for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TryAcquireError","synthetic":true,"types":[]},{"text":"impl Unpin for AcquireError","synthetic":true,"types":[]},{"text":"impl Unpin for Semaphore","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SemaphorePermit&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedSemaphorePermit","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for RwLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Ref&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for LocalSet","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for LocalKey&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Elapsed","synthetic":true,"types":[]},{"text":"impl Unpin for Instant","synthetic":true,"types":[]},{"text":"impl Unpin for Interval","synthetic":true,"types":[]},{"text":"impl&lt;'__pin, R&gt; Unpin for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, RW&gt; Unpin for BufStream&lt;RW&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, RW&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, W&gt; Unpin for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, W&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, R&gt; Unpin for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, R&gt; Unpin for Split&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, R&gt; Unpin for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for JoinHandle&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin&gt; Unpin for Sleep <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, T&gt; Unpin for Timeout&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["tokio_rustls"] = [{"text":"impl&lt;IO&gt; Unpin for TlsStream&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;IO&gt; Unpin for TlsStream&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TlsConnector","synthetic":true,"types":[]},{"text":"impl Unpin for TlsAcceptor","synthetic":true,"types":[]},{"text":"impl&lt;IO&gt; Unpin for Connect&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;IO&gt; Unpin for Accept&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;IO&gt; Unpin for FailableConnect&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;IO&gt; Unpin for FailableAccept&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TlsStream&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tokio_util"] = [{"text":"impl Unpin for BytesCodec","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for FramedParts&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for LengthDelimitedCodecError","synthetic":true,"types":[]},{"text":"impl Unpin for LengthDelimitedCodec","synthetic":true,"types":[]},{"text":"impl Unpin for LinesCodec","synthetic":true,"types":[]},{"text":"impl Unpin for LinesCodecError","synthetic":true,"types":[]},{"text":"impl Unpin for CancellationToken","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Unpin for WaitForCancellationFuture&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PollSemaphore","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; Unpin for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'__pin, T, U&gt; Unpin for Framed&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T, U&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, T, D&gt; Unpin for FramedRead&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T, D&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, T, E&gt; Unpin for FramedWrite&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T, E&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for ReusableBoxFuture&lt;T&gt;","synthetic":false,"types":[]}];
implementors["toml"] = [{"text":"impl&lt;K, V&gt; Unpin for Map&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Datetime","synthetic":true,"types":[]},{"text":"impl Unpin for DatetimeParseError","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Serializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Deserializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Spanned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tracing"] = [{"text":"impl Unpin for Span","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Entered&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for EnteredSpan","synthetic":true,"types":[]},{"text":"impl&lt;'__pin, T&gt; Unpin for WithDispatch&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, T&gt; Unpin for Instrumented&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["tracing_core"] = [{"text":"impl Unpin for Identifier","synthetic":true,"types":[]},{"text":"impl Unpin for Dispatch","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultGuard","synthetic":true,"types":[]},{"text":"impl Unpin for SetGlobalDefaultError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Field","synthetic":true,"types":[]},{"text":"impl Unpin for Empty","synthetic":true,"types":[]},{"text":"impl Unpin for FieldSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ValueSet&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Iter","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DisplayValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Kind","synthetic":true,"types":[]},{"text":"impl Unpin for Level","synthetic":true,"types":[]},{"text":"impl Unpin for LevelFilter","synthetic":true,"types":[]},{"text":"impl Unpin for ParseLevelFilterError","synthetic":true,"types":[]},{"text":"impl Unpin for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Unpin for Id","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Current","synthetic":true,"types":[]},{"text":"impl Unpin for Interest","synthetic":true,"types":[]}];
implementors["try_lock"] = [{"text":"impl&lt;T&gt; Unpin for TryLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Locked&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["type_map"] = [{"text":"impl&lt;'a, T&gt; Unpin for OccupiedEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Entry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TypeMap","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for OccupiedEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Entry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TypeMap","synthetic":true,"types":[]}];
implementors["typenum"] = [{"text":"impl Unpin for B0","synthetic":true,"types":[]},{"text":"impl Unpin for B1","synthetic":true,"types":[]},{"text":"impl&lt;U&gt; Unpin for PInt&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;U&gt; Unpin for NInt&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Z0","synthetic":true,"types":[]},{"text":"impl Unpin for UTerm","synthetic":true,"types":[]},{"text":"impl&lt;U, B&gt; Unpin for UInt&lt;U, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ATerm","synthetic":true,"types":[]},{"text":"impl&lt;V, A&gt; Unpin for TArr&lt;V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Greater","synthetic":true,"types":[]},{"text":"impl Unpin for Less","synthetic":true,"types":[]},{"text":"impl Unpin for Equal","synthetic":true,"types":[]}];
implementors["unicase"] = [{"text":"impl&lt;S&gt; Unpin for UniCase&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Ascii&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Unpin for Level","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for BidiClass","synthetic":true,"types":[]},{"text":"impl Unpin for ParagraphInfo","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Unpin for InitialInfo&lt;'text&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Unpin for BidiInfo&lt;'text&gt;","synthetic":true,"types":[]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; Unpin for Decompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for IsNormalized","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Recompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Replacements&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for StreamSafe&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["untrusted"] = [{"text":"impl&lt;'a&gt; Unpin for Input&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Mark","synthetic":true,"types":[]},{"text":"impl Unpin for EndOfInput","synthetic":true,"types":[]}];
implementors["uom"] = [{"text":"impl Unpin for yottameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for zettameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for exameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for petameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for terameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for gigameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for megameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for kilometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for hectometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for decameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for meter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for decimeter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for centimeter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for millimeter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for micrometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for nanometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for picometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for femtometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for attometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for zeptometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for yoctometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for foot_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for galileo","synthetic":true,"types":[]},{"text":"impl Unpin for inch_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for millimeter_per_minute_squared","synthetic":true,"types":[]},{"text":"impl Unpin for yottamole","synthetic":true,"types":[]},{"text":"impl Unpin for zettamole","synthetic":true,"types":[]},{"text":"impl Unpin for examole","synthetic":true,"types":[]},{"text":"impl Unpin for petamole","synthetic":true,"types":[]},{"text":"impl Unpin for teramole","synthetic":true,"types":[]},{"text":"impl Unpin for gigamole","synthetic":true,"types":[]},{"text":"impl Unpin for megamole","synthetic":true,"types":[]},{"text":"impl Unpin for kilomole","synthetic":true,"types":[]},{"text":"impl Unpin for hectomole","synthetic":true,"types":[]},{"text":"impl Unpin for decamole","synthetic":true,"types":[]},{"text":"impl Unpin for mole","synthetic":true,"types":[]},{"text":"impl Unpin for decimole","synthetic":true,"types":[]},{"text":"impl Unpin for centimole","synthetic":true,"types":[]},{"text":"impl Unpin for millimole","synthetic":true,"types":[]},{"text":"impl Unpin for micromole","synthetic":true,"types":[]},{"text":"impl Unpin for nanomole","synthetic":true,"types":[]},{"text":"impl Unpin for picomole","synthetic":true,"types":[]},{"text":"impl Unpin for femtomole","synthetic":true,"types":[]},{"text":"impl Unpin for attomole","synthetic":true,"types":[]},{"text":"impl Unpin for zeptomole","synthetic":true,"types":[]},{"text":"impl Unpin for yoctomole","synthetic":true,"types":[]},{"text":"impl Unpin for radian","synthetic":true,"types":[]},{"text":"impl Unpin for revolution","synthetic":true,"types":[]},{"text":"impl Unpin for degree","synthetic":true,"types":[]},{"text":"impl Unpin for gon","synthetic":true,"types":[]},{"text":"impl Unpin for mil","synthetic":true,"types":[]},{"text":"impl Unpin for minute","synthetic":true,"types":[]},{"text":"impl Unpin for second","synthetic":true,"types":[]},{"text":"impl Unpin for radian_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for degree_per_second_squared","synthetic":true,"types":[]},{"text":"impl Unpin for radian_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for degree_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for radian_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for degree_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for revolution_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for revolution_per_minute","synthetic":true,"types":[]},{"text":"impl Unpin for revolution_per_hour","synthetic":true,"types":[]},{"text":"impl Unpin for square_yottameter","synthetic":true,"types":[]},{"text":"impl Unpin for square_zettameter","synthetic":true,"types":[]},{"text":"impl Unpin for square_exameter","synthetic":true,"types":[]},{"text":"impl Unpin for square_petameter","synthetic":true,"types":[]},{"text":"impl Unpin for square_terameter","synthetic":true,"types":[]},{"text":"impl Unpin for square_gigameter","synthetic":true,"types":[]},{"text":"impl Unpin for square_megameter","synthetic":true,"types":[]},{"text":"impl Unpin for square_kilometer","synthetic":true,"types":[]},{"text":"impl Unpin for square_hectometer","synthetic":true,"types":[]},{"text":"impl Unpin for square_decameter","synthetic":true,"types":[]},{"text":"impl Unpin for square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for square_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for square_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for square_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for square_micrometer","synthetic":true,"types":[]},{"text":"impl Unpin for square_nanometer","synthetic":true,"types":[]},{"text":"impl Unpin for square_picometer","synthetic":true,"types":[]},{"text":"impl Unpin for square_femtometer","synthetic":true,"types":[]},{"text":"impl Unpin for square_attometer","synthetic":true,"types":[]},{"text":"impl Unpin for square_zeptometer","synthetic":true,"types":[]},{"text":"impl Unpin for square_yoctometer","synthetic":true,"types":[]},{"text":"impl Unpin for acre","synthetic":true,"types":[]},{"text":"impl Unpin for are","synthetic":true,"types":[]},{"text":"impl Unpin for barn","synthetic":true,"types":[]},{"text":"impl Unpin for circular_mil","synthetic":true,"types":[]},{"text":"impl Unpin for hectare","synthetic":true,"types":[]},{"text":"impl Unpin for square_foot","synthetic":true,"types":[]},{"text":"impl Unpin for square_inch","synthetic":true,"types":[]},{"text":"impl Unpin for square_mile","synthetic":true,"types":[]},{"text":"impl Unpin for square_yard","synthetic":true,"types":[]},{"text":"impl Unpin for yottajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for zettajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for exajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for petajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for terajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for gigajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for megajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for kilojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for hectojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for decajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for decijoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for centijoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for millijoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for microjoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for nanojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for picojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for femtojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for attojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for zeptojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for yoctojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_zeptogram","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_attogram","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_femtogram","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_picogram","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_nanogram","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_microgram","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_milligram","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_gram","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_megagram","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_gigagram","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_teragram","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_petagram","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_exagram","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_zettagram","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_yottagram","synthetic":true,"types":[]},{"text":"impl Unpin for btu_it_per_pound","synthetic":true,"types":[]},{"text":"impl Unpin for btu_per_pound","synthetic":true,"types":[]},{"text":"impl Unpin for calorie_it_per_gram","synthetic":true,"types":[]},{"text":"impl Unpin for calorie_per_gram","synthetic":true,"types":[]},{"text":"impl Unpin for yottafarad","synthetic":true,"types":[]},{"text":"impl Unpin for zettafarad","synthetic":true,"types":[]},{"text":"impl Unpin for exafarad","synthetic":true,"types":[]},{"text":"impl Unpin for petafarad","synthetic":true,"types":[]},{"text":"impl Unpin for terafarad","synthetic":true,"types":[]},{"text":"impl Unpin for gigafarad","synthetic":true,"types":[]},{"text":"impl Unpin for megafarad","synthetic":true,"types":[]},{"text":"impl Unpin for kilofarad","synthetic":true,"types":[]},{"text":"impl Unpin for hectofarad","synthetic":true,"types":[]},{"text":"impl Unpin for decafarad","synthetic":true,"types":[]},{"text":"impl Unpin for farad","synthetic":true,"types":[]},{"text":"impl Unpin for decifarad","synthetic":true,"types":[]},{"text":"impl Unpin for centifarad","synthetic":true,"types":[]},{"text":"impl Unpin for millifarad","synthetic":true,"types":[]},{"text":"impl Unpin for microfarad","synthetic":true,"types":[]},{"text":"impl Unpin for nanofarad","synthetic":true,"types":[]},{"text":"impl Unpin for picofarad","synthetic":true,"types":[]},{"text":"impl Unpin for femtofarad","synthetic":true,"types":[]},{"text":"impl Unpin for attofarad","synthetic":true,"types":[]},{"text":"impl Unpin for zeptofarad","synthetic":true,"types":[]},{"text":"impl Unpin for yoctofarad","synthetic":true,"types":[]},{"text":"impl Unpin for abfarad","synthetic":true,"types":[]},{"text":"impl Unpin for statfarad","synthetic":true,"types":[]},{"text":"impl Unpin for yottakatal","synthetic":true,"types":[]},{"text":"impl Unpin for zettakatal","synthetic":true,"types":[]},{"text":"impl Unpin for exakatal","synthetic":true,"types":[]},{"text":"impl Unpin for petakatal","synthetic":true,"types":[]},{"text":"impl Unpin for terakatal","synthetic":true,"types":[]},{"text":"impl Unpin for gigakatal","synthetic":true,"types":[]},{"text":"impl Unpin for megakatal","synthetic":true,"types":[]},{"text":"impl Unpin for kilokatal","synthetic":true,"types":[]},{"text":"impl Unpin for hectokatal","synthetic":true,"types":[]},{"text":"impl Unpin for decakatal","synthetic":true,"types":[]},{"text":"impl Unpin for katal","synthetic":true,"types":[]},{"text":"impl Unpin for decikatal","synthetic":true,"types":[]},{"text":"impl Unpin for centikatal","synthetic":true,"types":[]},{"text":"impl Unpin for millikatal","synthetic":true,"types":[]},{"text":"impl Unpin for microkatal","synthetic":true,"types":[]},{"text":"impl Unpin for nanokatal","synthetic":true,"types":[]},{"text":"impl Unpin for picokatal","synthetic":true,"types":[]},{"text":"impl Unpin for femtokatal","synthetic":true,"types":[]},{"text":"impl Unpin for attokatal","synthetic":true,"types":[]},{"text":"impl Unpin for zeptokatal","synthetic":true,"types":[]},{"text":"impl Unpin for yoctokatal","synthetic":true,"types":[]},{"text":"impl Unpin for yotta_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for zetta_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for exa_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for peta_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for tera_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for giga_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for mega_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for kilo_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for hecto_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for deca_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for deci_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for centi_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for milli_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for micro_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for nano_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for pico_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for femto_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for atto_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for zepto_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for yocto_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Unpin for yottakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zettakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for exakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for petakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for terakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for gigakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for megakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for kilokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for hectokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for decakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for katal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for decikatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for centikatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for millikatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for microkatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for nanokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for picokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for femtokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for attokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zeptokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for yoctokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for kilokatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for kilokatal_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for katal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for katal_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for millikatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for millikatal_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for microkatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for microkatal_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for nanokatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for nanokatal_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for picokatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for picokatal_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for femtokatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for femtokatal_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for kilokatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for katal_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for millikatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for microkatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for nanokatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for picokatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for femtokatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for kilokatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for katal_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for millikatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for microkatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for nanokatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for picokatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for femtokatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for yotta_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zetta_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for exa_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for peta_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for tera_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for giga_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for mega_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for kilo_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for hecto_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for deca_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for deci_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for centi_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for milli_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for micro_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for nano_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for pico_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for femto_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for atto_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zepto_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for yocto_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for kilo_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for kilo_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for milli_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for milli_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for micro_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for micro_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for nano_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for nano_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for pico_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for pico_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for femto_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for femto_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for kilo_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for milli_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for micro_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for nano_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for pico_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for femto_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for kilo_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for milli_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for micro_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for nano_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for pico_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for femto_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for radian_per_meter","synthetic":true,"types":[]},{"text":"impl Unpin for degree_per_meter","synthetic":true,"types":[]},{"text":"impl Unpin for radian_per_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for degree_per_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for yottacoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for zettacoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for exacoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for petacoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for teracoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for gigacoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for megacoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for kilocoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for hectocoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for decacoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for coulomb","synthetic":true,"types":[]},{"text":"impl Unpin for decicoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for centicoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for millicoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for microcoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for nanocoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for picocoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for femtocoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for attocoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for zeptocoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for yoctocoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for petaampere_hour","synthetic":true,"types":[]},{"text":"impl Unpin for teraampere_hour","synthetic":true,"types":[]},{"text":"impl Unpin for gigaampere_hour","synthetic":true,"types":[]},{"text":"impl Unpin for megaampere_hour","synthetic":true,"types":[]},{"text":"impl Unpin for kiloampere_hour","synthetic":true,"types":[]},{"text":"impl Unpin for hectoampere_hour","synthetic":true,"types":[]},{"text":"impl Unpin for decaampere_hour","synthetic":true,"types":[]},{"text":"impl Unpin for ampere_hour","synthetic":true,"types":[]},{"text":"impl Unpin for milliampere_hour","synthetic":true,"types":[]},{"text":"impl Unpin for microampere_hour","synthetic":true,"types":[]},{"text":"impl Unpin for abcoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for faraday","synthetic":true,"types":[]},{"text":"impl Unpin for franklin","synthetic":true,"types":[]},{"text":"impl Unpin for statcoulomb","synthetic":true,"types":[]},{"text":"impl Unpin for yottaampere","synthetic":true,"types":[]},{"text":"impl Unpin for zettaampere","synthetic":true,"types":[]},{"text":"impl Unpin for exaampere","synthetic":true,"types":[]},{"text":"impl Unpin for petaampere","synthetic":true,"types":[]},{"text":"impl Unpin for teraampere","synthetic":true,"types":[]},{"text":"impl Unpin for gigaampere","synthetic":true,"types":[]},{"text":"impl Unpin for megaampere","synthetic":true,"types":[]},{"text":"impl Unpin for kiloampere","synthetic":true,"types":[]},{"text":"impl Unpin for hectoampere","synthetic":true,"types":[]},{"text":"impl Unpin for decaampere","synthetic":true,"types":[]},{"text":"impl Unpin for ampere","synthetic":true,"types":[]},{"text":"impl Unpin for deciampere","synthetic":true,"types":[]},{"text":"impl Unpin for centiampere","synthetic":true,"types":[]},{"text":"impl Unpin for milliampere","synthetic":true,"types":[]},{"text":"impl Unpin for microampere","synthetic":true,"types":[]},{"text":"impl Unpin for nanoampere","synthetic":true,"types":[]},{"text":"impl Unpin for picoampere","synthetic":true,"types":[]},{"text":"impl Unpin for femtoampere","synthetic":true,"types":[]},{"text":"impl Unpin for attoampere","synthetic":true,"types":[]},{"text":"impl Unpin for zeptoampere","synthetic":true,"types":[]},{"text":"impl Unpin for yoctoampere","synthetic":true,"types":[]},{"text":"impl Unpin for abampere","synthetic":true,"types":[]},{"text":"impl Unpin for gilbert","synthetic":true,"types":[]},{"text":"impl Unpin for statampere","synthetic":true,"types":[]},{"text":"impl Unpin for yottavolt","synthetic":true,"types":[]},{"text":"impl Unpin for zettavolt","synthetic":true,"types":[]},{"text":"impl Unpin for exavolt","synthetic":true,"types":[]},{"text":"impl Unpin for petavolt","synthetic":true,"types":[]},{"text":"impl Unpin for teravolt","synthetic":true,"types":[]},{"text":"impl Unpin for gigavolt","synthetic":true,"types":[]},{"text":"impl Unpin for megavolt","synthetic":true,"types":[]},{"text":"impl Unpin for kilovolt","synthetic":true,"types":[]},{"text":"impl Unpin for hectovolt","synthetic":true,"types":[]},{"text":"impl Unpin for decavolt","synthetic":true,"types":[]},{"text":"impl Unpin for volt","synthetic":true,"types":[]},{"text":"impl Unpin for decivolt","synthetic":true,"types":[]},{"text":"impl Unpin for centivolt","synthetic":true,"types":[]},{"text":"impl Unpin for millivolt","synthetic":true,"types":[]},{"text":"impl Unpin for microvolt","synthetic":true,"types":[]},{"text":"impl Unpin for nanovolt","synthetic":true,"types":[]},{"text":"impl Unpin for picovolt","synthetic":true,"types":[]},{"text":"impl Unpin for femtovolt","synthetic":true,"types":[]},{"text":"impl Unpin for attovolt","synthetic":true,"types":[]},{"text":"impl Unpin for zeptovolt","synthetic":true,"types":[]},{"text":"impl Unpin for yoctovolt","synthetic":true,"types":[]},{"text":"impl Unpin for abvolt","synthetic":true,"types":[]},{"text":"impl Unpin for statvolt","synthetic":true,"types":[]},{"text":"impl Unpin for yottasiemens","synthetic":true,"types":[]},{"text":"impl Unpin for zettasiemens","synthetic":true,"types":[]},{"text":"impl Unpin for exasiemens","synthetic":true,"types":[]},{"text":"impl Unpin for petasiemens","synthetic":true,"types":[]},{"text":"impl Unpin for terasiemens","synthetic":true,"types":[]},{"text":"impl Unpin for gigasiemens","synthetic":true,"types":[]},{"text":"impl Unpin for megasiemens","synthetic":true,"types":[]},{"text":"impl Unpin for kilosiemens","synthetic":true,"types":[]},{"text":"impl Unpin for hectosiemens","synthetic":true,"types":[]},{"text":"impl Unpin for decasiemens","synthetic":true,"types":[]},{"text":"impl Unpin for siemens","synthetic":true,"types":[]},{"text":"impl Unpin for mho","synthetic":true,"types":[]},{"text":"impl Unpin for decisiemens","synthetic":true,"types":[]},{"text":"impl Unpin for centisiemens","synthetic":true,"types":[]},{"text":"impl Unpin for millisiemens","synthetic":true,"types":[]},{"text":"impl Unpin for microsiemens","synthetic":true,"types":[]},{"text":"impl Unpin for nanosiemens","synthetic":true,"types":[]},{"text":"impl Unpin for picosiemens","synthetic":true,"types":[]},{"text":"impl Unpin for femtosiemens","synthetic":true,"types":[]},{"text":"impl Unpin for attosiemens","synthetic":true,"types":[]},{"text":"impl Unpin for zeptosiemens","synthetic":true,"types":[]},{"text":"impl Unpin for yoctosiemens","synthetic":true,"types":[]},{"text":"impl Unpin for abmho","synthetic":true,"types":[]},{"text":"impl Unpin for absiemens","synthetic":true,"types":[]},{"text":"impl Unpin for statsiemens","synthetic":true,"types":[]},{"text":"impl Unpin for statmho","synthetic":true,"types":[]},{"text":"impl Unpin for yottaohm","synthetic":true,"types":[]},{"text":"impl Unpin for zettaohm","synthetic":true,"types":[]},{"text":"impl Unpin for exaohm","synthetic":true,"types":[]},{"text":"impl Unpin for petaohm","synthetic":true,"types":[]},{"text":"impl Unpin for teraohm","synthetic":true,"types":[]},{"text":"impl Unpin for gigaohm","synthetic":true,"types":[]},{"text":"impl Unpin for megaohm","synthetic":true,"types":[]},{"text":"impl Unpin for kiloohm","synthetic":true,"types":[]},{"text":"impl Unpin for hectoohm","synthetic":true,"types":[]},{"text":"impl Unpin for decaohm","synthetic":true,"types":[]},{"text":"impl Unpin for ohm","synthetic":true,"types":[]},{"text":"impl Unpin for deciohm","synthetic":true,"types":[]},{"text":"impl Unpin for centiohm","synthetic":true,"types":[]},{"text":"impl Unpin for milliohm","synthetic":true,"types":[]},{"text":"impl Unpin for microohm","synthetic":true,"types":[]},{"text":"impl Unpin for nanoohm","synthetic":true,"types":[]},{"text":"impl Unpin for picoohm","synthetic":true,"types":[]},{"text":"impl Unpin for femtoohm","synthetic":true,"types":[]},{"text":"impl Unpin for attoohm","synthetic":true,"types":[]},{"text":"impl Unpin for zeptoohm","synthetic":true,"types":[]},{"text":"impl Unpin for yoctoohm","synthetic":true,"types":[]},{"text":"impl Unpin for abohm","synthetic":true,"types":[]},{"text":"impl Unpin for statohm","synthetic":true,"types":[]},{"text":"impl Unpin for yottajoule","synthetic":true,"types":[]},{"text":"impl Unpin for zettajoule","synthetic":true,"types":[]},{"text":"impl Unpin for exajoule","synthetic":true,"types":[]},{"text":"impl Unpin for petajoule","synthetic":true,"types":[]},{"text":"impl Unpin for terajoule","synthetic":true,"types":[]},{"text":"impl Unpin for gigajoule","synthetic":true,"types":[]},{"text":"impl Unpin for megajoule","synthetic":true,"types":[]},{"text":"impl Unpin for kilojoule","synthetic":true,"types":[]},{"text":"impl Unpin for hectojoule","synthetic":true,"types":[]},{"text":"impl Unpin for decajoule","synthetic":true,"types":[]},{"text":"impl Unpin for joule","synthetic":true,"types":[]},{"text":"impl Unpin for decijoule","synthetic":true,"types":[]},{"text":"impl Unpin for centijoule","synthetic":true,"types":[]},{"text":"impl Unpin for millijoule","synthetic":true,"types":[]},{"text":"impl Unpin for microjoule","synthetic":true,"types":[]},{"text":"impl Unpin for nanojoule","synthetic":true,"types":[]},{"text":"impl Unpin for picojoule","synthetic":true,"types":[]},{"text":"impl Unpin for femtojoule","synthetic":true,"types":[]},{"text":"impl Unpin for attojoule","synthetic":true,"types":[]},{"text":"impl Unpin for zeptojoule","synthetic":true,"types":[]},{"text":"impl Unpin for yoctojoule","synthetic":true,"types":[]},{"text":"impl Unpin for petawatt_hour","synthetic":true,"types":[]},{"text":"impl Unpin for terawatt_hour","synthetic":true,"types":[]},{"text":"impl Unpin for gigawatt_hour","synthetic":true,"types":[]},{"text":"impl Unpin for megawatt_hour","synthetic":true,"types":[]},{"text":"impl Unpin for kilowatt_hour","synthetic":true,"types":[]},{"text":"impl Unpin for hectowatt_hour","synthetic":true,"types":[]},{"text":"impl Unpin for decawatt_hour","synthetic":true,"types":[]},{"text":"impl Unpin for watt_hour","synthetic":true,"types":[]},{"text":"impl Unpin for milliwatt_hour","synthetic":true,"types":[]},{"text":"impl Unpin for microwatt_hour","synthetic":true,"types":[]},{"text":"impl Unpin for petaelectronvolt","synthetic":true,"types":[]},{"text":"impl Unpin for teraelectronvolt","synthetic":true,"types":[]},{"text":"impl Unpin for gigaelectronvolt","synthetic":true,"types":[]},{"text":"impl Unpin for megaelectronvolt","synthetic":true,"types":[]},{"text":"impl Unpin for kiloelectronvolt","synthetic":true,"types":[]},{"text":"impl Unpin for hectoelectronvolt","synthetic":true,"types":[]},{"text":"impl Unpin for decaelectronvolt","synthetic":true,"types":[]},{"text":"impl Unpin for electronvolt","synthetic":true,"types":[]},{"text":"impl Unpin for btu_it","synthetic":true,"types":[]},{"text":"impl Unpin for btu","synthetic":true,"types":[]},{"text":"impl Unpin for btu_39","synthetic":true,"types":[]},{"text":"impl Unpin for btu_59","synthetic":true,"types":[]},{"text":"impl Unpin for btu_60","synthetic":true,"types":[]},{"text":"impl Unpin for calorie_it","synthetic":true,"types":[]},{"text":"impl Unpin for calorie","synthetic":true,"types":[]},{"text":"impl Unpin for calorie_15","synthetic":true,"types":[]},{"text":"impl Unpin for calorie_20","synthetic":true,"types":[]},{"text":"impl Unpin for calorie_it_nutrition","synthetic":true,"types":[]},{"text":"impl Unpin for calorie_nutrition","synthetic":true,"types":[]},{"text":"impl Unpin for erg","synthetic":true,"types":[]},{"text":"impl Unpin for foot_poundal","synthetic":true,"types":[]},{"text":"impl Unpin for foot_pound","synthetic":true,"types":[]},{"text":"impl Unpin for kilocalorie_it","synthetic":true,"types":[]},{"text":"impl Unpin for kilocalorie","synthetic":true,"types":[]},{"text":"impl Unpin for quad","synthetic":true,"types":[]},{"text":"impl Unpin for therm_ec","synthetic":true,"types":[]},{"text":"impl Unpin for therm_us","synthetic":true,"types":[]},{"text":"impl Unpin for ton_tnt","synthetic":true,"types":[]},{"text":"impl Unpin for watt_second","synthetic":true,"types":[]},{"text":"impl Unpin for yottanewton","synthetic":true,"types":[]},{"text":"impl Unpin for zettanewton","synthetic":true,"types":[]},{"text":"impl Unpin for exanewton","synthetic":true,"types":[]},{"text":"impl Unpin for petanewton","synthetic":true,"types":[]},{"text":"impl Unpin for teranewton","synthetic":true,"types":[]},{"text":"impl Unpin for giganewton","synthetic":true,"types":[]},{"text":"impl Unpin for meganewton","synthetic":true,"types":[]},{"text":"impl Unpin for kilonewton","synthetic":true,"types":[]},{"text":"impl Unpin for hectonewton","synthetic":true,"types":[]},{"text":"impl Unpin for decanewton","synthetic":true,"types":[]},{"text":"impl Unpin for newton","synthetic":true,"types":[]},{"text":"impl Unpin for decinewton","synthetic":true,"types":[]},{"text":"impl Unpin for centinewton","synthetic":true,"types":[]},{"text":"impl Unpin for millinewton","synthetic":true,"types":[]},{"text":"impl Unpin for micronewton","synthetic":true,"types":[]},{"text":"impl Unpin for nanonewton","synthetic":true,"types":[]},{"text":"impl Unpin for piconewton","synthetic":true,"types":[]},{"text":"impl Unpin for femtonewton","synthetic":true,"types":[]},{"text":"impl Unpin for attonewton","synthetic":true,"types":[]},{"text":"impl Unpin for zeptonewton","synthetic":true,"types":[]},{"text":"impl Unpin for yoctonewton","synthetic":true,"types":[]},{"text":"impl Unpin for dyne","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_force","synthetic":true,"types":[]},{"text":"impl Unpin for kip","synthetic":true,"types":[]},{"text":"impl Unpin for ounce_force","synthetic":true,"types":[]},{"text":"impl Unpin for poundal","synthetic":true,"types":[]},{"text":"impl Unpin for pound_force","synthetic":true,"types":[]},{"text":"impl Unpin for ton_force","synthetic":true,"types":[]},{"text":"impl Unpin for yottahertz","synthetic":true,"types":[]},{"text":"impl Unpin for zettahertz","synthetic":true,"types":[]},{"text":"impl Unpin for exahertz","synthetic":true,"types":[]},{"text":"impl Unpin for petahertz","synthetic":true,"types":[]},{"text":"impl Unpin for terahertz","synthetic":true,"types":[]},{"text":"impl Unpin for gigahertz","synthetic":true,"types":[]},{"text":"impl Unpin for megahertz","synthetic":true,"types":[]},{"text":"impl Unpin for kilohertz","synthetic":true,"types":[]},{"text":"impl Unpin for hectohertz","synthetic":true,"types":[]},{"text":"impl Unpin for decahertz","synthetic":true,"types":[]},{"text":"impl Unpin for hertz","synthetic":true,"types":[]},{"text":"impl Unpin for decihertz","synthetic":true,"types":[]},{"text":"impl Unpin for centihertz","synthetic":true,"types":[]},{"text":"impl Unpin for millihertz","synthetic":true,"types":[]},{"text":"impl Unpin for microhertz","synthetic":true,"types":[]},{"text":"impl Unpin for nanohertz","synthetic":true,"types":[]},{"text":"impl Unpin for picohertz","synthetic":true,"types":[]},{"text":"impl Unpin for femtohertz","synthetic":true,"types":[]},{"text":"impl Unpin for attohertz","synthetic":true,"types":[]},{"text":"impl Unpin for zeptohertz","synthetic":true,"types":[]},{"text":"impl Unpin for yoctohertz","synthetic":true,"types":[]},{"text":"impl Unpin for cycle_per_day","synthetic":true,"types":[]},{"text":"impl Unpin for cycle_per_hour","synthetic":true,"types":[]},{"text":"impl Unpin for cycle_per_minute","synthetic":true,"types":[]},{"text":"impl Unpin for cycle_per_shake","synthetic":true,"types":[]},{"text":"impl Unpin for cycle_per_year","synthetic":true,"types":[]},{"text":"impl Unpin for yottagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zettagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for exagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for petagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for teragram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for gigagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for megagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for hectogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for decagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for gram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for decigram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for centigram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for milligram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for microgram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for nanogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for picogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for femtogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for attogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zeptogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for yoctogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for yottajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zettajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for exajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for petajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for terajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for gigajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for megajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for kilojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for hectojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for decajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for decijoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for centijoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for millijoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for microjoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for nanojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for picojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for femtojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for attojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zeptojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for yoctojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for kilojoule_per_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for millijoule_per_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for btu_per_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for btu_it_per_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for yottawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zettawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for exawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for petawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for terawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for gigawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for megawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for kilowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for hectowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for decawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for watt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for deciwatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for centiwatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for milliwatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for microwatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for nanowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for picowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for femtowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for attowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zeptowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for yoctowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for yottagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zettagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for exagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for petagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for teragram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for gigagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for megagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for hectogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for decagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for gram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for decigram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for centigram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for milligram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for microgram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for nanogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for picogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for femtogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for attogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zeptogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for yoctogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_per_second_cubed_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for yottawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zettawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for exawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for petawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for terawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for gigawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for megawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for kilowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for hectowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for decawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for watt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for deciwatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for centiwatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for milliwatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for microwatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for nanowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for picowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for femtowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for attowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zeptowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for yoctowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for watt_per_square_kilometer_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for watt_per_square_meter_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for watt_per_square_centimeter_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for watt_per_square_millimeter_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_second_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_second_square_meter_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for btu_it_per_hour_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for btu_it_per_hour_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for btu_it_per_minute_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for btu_it_per_minute_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for btu_it_per_second_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for btu_it_per_second_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for btu_per_hour_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for btu_per_hour_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for btu_per_minute_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for btu_per_minute_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for btu_per_second_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for btu_per_second_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for yottahenry","synthetic":true,"types":[]},{"text":"impl Unpin for zettahenry","synthetic":true,"types":[]},{"text":"impl Unpin for exahenry","synthetic":true,"types":[]},{"text":"impl Unpin for petahenry","synthetic":true,"types":[]},{"text":"impl Unpin for terahenry","synthetic":true,"types":[]},{"text":"impl Unpin for gigahenry","synthetic":true,"types":[]},{"text":"impl Unpin for megahenry","synthetic":true,"types":[]},{"text":"impl Unpin for kilohenry","synthetic":true,"types":[]},{"text":"impl Unpin for hectohenry","synthetic":true,"types":[]},{"text":"impl Unpin for decahenry","synthetic":true,"types":[]},{"text":"impl Unpin for henry","synthetic":true,"types":[]},{"text":"impl Unpin for decihenry","synthetic":true,"types":[]},{"text":"impl Unpin for centihenry","synthetic":true,"types":[]},{"text":"impl Unpin for millihenry","synthetic":true,"types":[]},{"text":"impl Unpin for microhenry","synthetic":true,"types":[]},{"text":"impl Unpin for nanohenry","synthetic":true,"types":[]},{"text":"impl Unpin for picohenry","synthetic":true,"types":[]},{"text":"impl Unpin for femtohenry","synthetic":true,"types":[]},{"text":"impl Unpin for attohenry","synthetic":true,"types":[]},{"text":"impl Unpin for zeptohenry","synthetic":true,"types":[]},{"text":"impl Unpin for yoctohenry","synthetic":true,"types":[]},{"text":"impl Unpin for abhenry","synthetic":true,"types":[]},{"text":"impl Unpin for stathenry","synthetic":true,"types":[]},{"text":"impl Unpin for yobibit","synthetic":true,"types":[]},{"text":"impl Unpin for yottabit","synthetic":true,"types":[]},{"text":"impl Unpin for zebibit","synthetic":true,"types":[]},{"text":"impl Unpin for zettabit","synthetic":true,"types":[]},{"text":"impl Unpin for exbibit","synthetic":true,"types":[]},{"text":"impl Unpin for exabit","synthetic":true,"types":[]},{"text":"impl Unpin for pebibit","synthetic":true,"types":[]},{"text":"impl Unpin for petabit","synthetic":true,"types":[]},{"text":"impl Unpin for tebibit","synthetic":true,"types":[]},{"text":"impl Unpin for terabit","synthetic":true,"types":[]},{"text":"impl Unpin for gibibit","synthetic":true,"types":[]},{"text":"impl Unpin for gigabit","synthetic":true,"types":[]},{"text":"impl Unpin for mebibit","synthetic":true,"types":[]},{"text":"impl Unpin for megabit","synthetic":true,"types":[]},{"text":"impl Unpin for kibibit","synthetic":true,"types":[]},{"text":"impl Unpin for kilobit","synthetic":true,"types":[]},{"text":"impl Unpin for bit","synthetic":true,"types":[]},{"text":"impl Unpin for yobibyte","synthetic":true,"types":[]},{"text":"impl Unpin for yottabyte","synthetic":true,"types":[]},{"text":"impl Unpin for zebibyte","synthetic":true,"types":[]},{"text":"impl Unpin for zettabyte","synthetic":true,"types":[]},{"text":"impl Unpin for exbibyte","synthetic":true,"types":[]},{"text":"impl Unpin for exabyte","synthetic":true,"types":[]},{"text":"impl Unpin for pebibyte","synthetic":true,"types":[]},{"text":"impl Unpin for petabyte","synthetic":true,"types":[]},{"text":"impl Unpin for tebibyte","synthetic":true,"types":[]},{"text":"impl Unpin for terabyte","synthetic":true,"types":[]},{"text":"impl Unpin for gibibyte","synthetic":true,"types":[]},{"text":"impl Unpin for gigabyte","synthetic":true,"types":[]},{"text":"impl Unpin for mebibyte","synthetic":true,"types":[]},{"text":"impl Unpin for megabyte","synthetic":true,"types":[]},{"text":"impl Unpin for kibibyte","synthetic":true,"types":[]},{"text":"impl Unpin for kilobyte","synthetic":true,"types":[]},{"text":"impl Unpin for byte","synthetic":true,"types":[]},{"text":"impl Unpin for octet","synthetic":true,"types":[]},{"text":"impl Unpin for nibble","synthetic":true,"types":[]},{"text":"impl Unpin for crumb","synthetic":true,"types":[]},{"text":"impl Unpin for shannon","synthetic":true,"types":[]},{"text":"impl Unpin for natural_unit_of_information","synthetic":true,"types":[]},{"text":"impl Unpin for trit","synthetic":true,"types":[]},{"text":"impl Unpin for hartley","synthetic":true,"types":[]},{"text":"impl Unpin for deciban","synthetic":true,"types":[]},{"text":"impl Unpin for yobibit_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for yottabit_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for zebibit_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for zettabit_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for exbibit_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for exabit_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for pebibit_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for petabit_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for tebibit_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for terabit_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for gibibit_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for gigabit_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for mebibit_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for megabit_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kibibit_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilobit_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for bit_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for yobibyte_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for yottabyte_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for zebibyte_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for zettabyte_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for exbibyte_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for exabyte_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for pebibyte_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for petabyte_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for tebibyte_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for terabyte_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for gibibyte_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for gigabyte_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for mebibyte_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for megabyte_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kibibyte_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilobyte_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for byte_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for octet_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for yottameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for zettameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for exameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for petameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for terameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for gigameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for megameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for kilometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for hectometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for decameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for meter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for decimeter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for centimeter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for millimeter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for micrometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for nanometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for picometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for femtometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for attometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for zeptometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for yoctometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for foot_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for inch_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for kilometer_per_minute_cubed","synthetic":true,"types":[]},{"text":"impl Unpin for yottameter","synthetic":true,"types":[]},{"text":"impl Unpin for zettameter","synthetic":true,"types":[]},{"text":"impl Unpin for exameter","synthetic":true,"types":[]},{"text":"impl Unpin for petameter","synthetic":true,"types":[]},{"text":"impl Unpin for terameter","synthetic":true,"types":[]},{"text":"impl Unpin for gigameter","synthetic":true,"types":[]},{"text":"impl Unpin for megameter","synthetic":true,"types":[]},{"text":"impl Unpin for kilometer","synthetic":true,"types":[]},{"text":"impl Unpin for hectometer","synthetic":true,"types":[]},{"text":"impl Unpin for decameter","synthetic":true,"types":[]},{"text":"impl Unpin for meter","synthetic":true,"types":[]},{"text":"impl Unpin for decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for micrometer","synthetic":true,"types":[]},{"text":"impl Unpin for nanometer","synthetic":true,"types":[]},{"text":"impl Unpin for picometer","synthetic":true,"types":[]},{"text":"impl Unpin for femtometer","synthetic":true,"types":[]},{"text":"impl Unpin for attometer","synthetic":true,"types":[]},{"text":"impl Unpin for zeptometer","synthetic":true,"types":[]},{"text":"impl Unpin for yoctometer","synthetic":true,"types":[]},{"text":"impl Unpin for angstrom","synthetic":true,"types":[]},{"text":"impl Unpin for astronomical_unit","synthetic":true,"types":[]},{"text":"impl Unpin for chain","synthetic":true,"types":[]},{"text":"impl Unpin for fathom","synthetic":true,"types":[]},{"text":"impl Unpin for fermi","synthetic":true,"types":[]},{"text":"impl Unpin for foot","synthetic":true,"types":[]},{"text":"impl Unpin for foot_survey","synthetic":true,"types":[]},{"text":"impl Unpin for inch","synthetic":true,"types":[]},{"text":"impl Unpin for light_year","synthetic":true,"types":[]},{"text":"impl Unpin for microinch","synthetic":true,"types":[]},{"text":"impl Unpin for micron","synthetic":true,"types":[]},{"text":"impl Unpin for mil","synthetic":true,"types":[]},{"text":"impl Unpin for mile","synthetic":true,"types":[]},{"text":"impl Unpin for mile_survey","synthetic":true,"types":[]},{"text":"impl Unpin for nautical_mile","synthetic":true,"types":[]},{"text":"impl Unpin for parsec","synthetic":true,"types":[]},{"text":"impl Unpin for pica_computer","synthetic":true,"types":[]},{"text":"impl Unpin for pica_printers","synthetic":true,"types":[]},{"text":"impl Unpin for point_computer","synthetic":true,"types":[]},{"text":"impl Unpin for point_printers","synthetic":true,"types":[]},{"text":"impl Unpin for rod","synthetic":true,"types":[]},{"text":"impl Unpin for yard","synthetic":true,"types":[]},{"text":"impl Unpin for yottacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zettacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for exacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for petacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for teracandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for gigacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for megacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for kilocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for hectocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for decacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for candela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for decicandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for centicandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for millicandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for microcandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for nanocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for picocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for femtocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for attocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zeptocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for yoctocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for candela_per_square_picometer","synthetic":true,"types":[]},{"text":"impl Unpin for candela_per_square_nanometer","synthetic":true,"types":[]},{"text":"impl Unpin for candela_per_square_micrometer","synthetic":true,"types":[]},{"text":"impl Unpin for candela_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for candela_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for candela_per_square_kilometer","synthetic":true,"types":[]},{"text":"impl Unpin for candela_per_square_megameter","synthetic":true,"types":[]},{"text":"impl Unpin for candela_per_square_gigameter","synthetic":true,"types":[]},{"text":"impl Unpin for candela_per_square_terameter","synthetic":true,"types":[]},{"text":"impl Unpin for candela_per_square_inch","synthetic":true,"types":[]},{"text":"impl Unpin for candela_per_square_foot","synthetic":true,"types":[]},{"text":"impl Unpin for footlambert","synthetic":true,"types":[]},{"text":"impl Unpin for lambert","synthetic":true,"types":[]},{"text":"impl Unpin for stilb","synthetic":true,"types":[]},{"text":"impl Unpin for yottacandela","synthetic":true,"types":[]},{"text":"impl Unpin for zettacandela","synthetic":true,"types":[]},{"text":"impl Unpin for exacandela","synthetic":true,"types":[]},{"text":"impl Unpin for petacandela","synthetic":true,"types":[]},{"text":"impl Unpin for teracandela","synthetic":true,"types":[]},{"text":"impl Unpin for gigacandela","synthetic":true,"types":[]},{"text":"impl Unpin for megacandela","synthetic":true,"types":[]},{"text":"impl Unpin for kilocandela","synthetic":true,"types":[]},{"text":"impl Unpin for hectocandela","synthetic":true,"types":[]},{"text":"impl Unpin for decacandela","synthetic":true,"types":[]},{"text":"impl Unpin for candela","synthetic":true,"types":[]},{"text":"impl Unpin for decicandela","synthetic":true,"types":[]},{"text":"impl Unpin for centicandela","synthetic":true,"types":[]},{"text":"impl Unpin for millicandela","synthetic":true,"types":[]},{"text":"impl Unpin for microcandela","synthetic":true,"types":[]},{"text":"impl Unpin for nanocandela","synthetic":true,"types":[]},{"text":"impl Unpin for picocandela","synthetic":true,"types":[]},{"text":"impl Unpin for femtocandela","synthetic":true,"types":[]},{"text":"impl Unpin for attocandela","synthetic":true,"types":[]},{"text":"impl Unpin for zeptocandela","synthetic":true,"types":[]},{"text":"impl Unpin for yoctocandela","synthetic":true,"types":[]},{"text":"impl Unpin for yottaweber","synthetic":true,"types":[]},{"text":"impl Unpin for zettaweber","synthetic":true,"types":[]},{"text":"impl Unpin for exaweber","synthetic":true,"types":[]},{"text":"impl Unpin for petaweber","synthetic":true,"types":[]},{"text":"impl Unpin for teraweber","synthetic":true,"types":[]},{"text":"impl Unpin for gigaweber","synthetic":true,"types":[]},{"text":"impl Unpin for megaweber","synthetic":true,"types":[]},{"text":"impl Unpin for kiloweber","synthetic":true,"types":[]},{"text":"impl Unpin for hectoweber","synthetic":true,"types":[]},{"text":"impl Unpin for decaweber","synthetic":true,"types":[]},{"text":"impl Unpin for weber","synthetic":true,"types":[]},{"text":"impl Unpin for deciweber","synthetic":true,"types":[]},{"text":"impl Unpin for centiweber","synthetic":true,"types":[]},{"text":"impl Unpin for milliweber","synthetic":true,"types":[]},{"text":"impl Unpin for microweber","synthetic":true,"types":[]},{"text":"impl Unpin for nanoweber","synthetic":true,"types":[]},{"text":"impl Unpin for picoweber","synthetic":true,"types":[]},{"text":"impl Unpin for femtoweber","synthetic":true,"types":[]},{"text":"impl Unpin for attoweber","synthetic":true,"types":[]},{"text":"impl Unpin for zeptoweber","synthetic":true,"types":[]},{"text":"impl Unpin for yoctoweber","synthetic":true,"types":[]},{"text":"impl Unpin for maxwell","synthetic":true,"types":[]},{"text":"impl Unpin for yottatesla","synthetic":true,"types":[]},{"text":"impl Unpin for zettatesla","synthetic":true,"types":[]},{"text":"impl Unpin for exatesla","synthetic":true,"types":[]},{"text":"impl Unpin for petatesla","synthetic":true,"types":[]},{"text":"impl Unpin for teratesla","synthetic":true,"types":[]},{"text":"impl Unpin for gigatesla","synthetic":true,"types":[]},{"text":"impl Unpin for megatesla","synthetic":true,"types":[]},{"text":"impl Unpin for kilotesla","synthetic":true,"types":[]},{"text":"impl Unpin for hectotesla","synthetic":true,"types":[]},{"text":"impl Unpin for decatesla","synthetic":true,"types":[]},{"text":"impl Unpin for tesla","synthetic":true,"types":[]},{"text":"impl Unpin for decitesla","synthetic":true,"types":[]},{"text":"impl Unpin for centitesla","synthetic":true,"types":[]},{"text":"impl Unpin for millitesla","synthetic":true,"types":[]},{"text":"impl Unpin for microtesla","synthetic":true,"types":[]},{"text":"impl Unpin for nanotesla","synthetic":true,"types":[]},{"text":"impl Unpin for picotesla","synthetic":true,"types":[]},{"text":"impl Unpin for femtotesla","synthetic":true,"types":[]},{"text":"impl Unpin for attotesla","synthetic":true,"types":[]},{"text":"impl Unpin for zeptotesla","synthetic":true,"types":[]},{"text":"impl Unpin for yoctotesla","synthetic":true,"types":[]},{"text":"impl Unpin for gamma","synthetic":true,"types":[]},{"text":"impl Unpin for gauss","synthetic":true,"types":[]},{"text":"impl Unpin for yottagram","synthetic":true,"types":[]},{"text":"impl Unpin for zettagram","synthetic":true,"types":[]},{"text":"impl Unpin for exagram","synthetic":true,"types":[]},{"text":"impl Unpin for petagram","synthetic":true,"types":[]},{"text":"impl Unpin for teragram","synthetic":true,"types":[]},{"text":"impl Unpin for gigagram","synthetic":true,"types":[]},{"text":"impl Unpin for megagram","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram","synthetic":true,"types":[]},{"text":"impl Unpin for hectogram","synthetic":true,"types":[]},{"text":"impl Unpin for decagram","synthetic":true,"types":[]},{"text":"impl Unpin for gram","synthetic":true,"types":[]},{"text":"impl Unpin for decigram","synthetic":true,"types":[]},{"text":"impl Unpin for centigram","synthetic":true,"types":[]},{"text":"impl Unpin for milligram","synthetic":true,"types":[]},{"text":"impl Unpin for microgram","synthetic":true,"types":[]},{"text":"impl Unpin for nanogram","synthetic":true,"types":[]},{"text":"impl Unpin for picogram","synthetic":true,"types":[]},{"text":"impl Unpin for femtogram","synthetic":true,"types":[]},{"text":"impl Unpin for attogram","synthetic":true,"types":[]},{"text":"impl Unpin for zeptogram","synthetic":true,"types":[]},{"text":"impl Unpin for yoctogram","synthetic":true,"types":[]},{"text":"impl Unpin for carat","synthetic":true,"types":[]},{"text":"impl Unpin for grain","synthetic":true,"types":[]},{"text":"impl Unpin for hundredweight_long","synthetic":true,"types":[]},{"text":"impl Unpin for hundredweight_short","synthetic":true,"types":[]},{"text":"impl Unpin for ounce","synthetic":true,"types":[]},{"text":"impl Unpin for ounce_troy","synthetic":true,"types":[]},{"text":"impl Unpin for pennyweight","synthetic":true,"types":[]},{"text":"impl Unpin for pound","synthetic":true,"types":[]},{"text":"impl Unpin for pound_troy","synthetic":true,"types":[]},{"text":"impl Unpin for slug","synthetic":true,"types":[]},{"text":"impl Unpin for ton_assay","synthetic":true,"types":[]},{"text":"impl Unpin for ton_long","synthetic":true,"types":[]},{"text":"impl Unpin for ton_short","synthetic":true,"types":[]},{"text":"impl Unpin for ton","synthetic":true,"types":[]},{"text":"impl Unpin for yottagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zettagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for exagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for petagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for teragram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for gigagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for megagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for hectogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for decagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for gram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for decigram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for centigram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for milligram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for microgram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for nanogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for picogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for femtogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for attogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zeptogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for yoctogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for gram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for gram_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for milligram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for milligram_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for microgram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for microgram_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for nanogram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for nanogram_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for picogram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for picogram_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for femtogram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for femtogram_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for gram_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for milligram_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for microgram_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for nanogram_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for picogram_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for femtogram_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for gram_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for milligram_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for microgram_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for nanogram_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for picogram_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for femtogram_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for yottagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zettagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for exagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for petagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for teragram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for gigagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for megagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for hectogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for decagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for gram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for decigram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for centigram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for milligram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for microgram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for nanogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for picogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for femtogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for attogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zeptogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for yoctogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for carat_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for grain_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for hundredweight_long_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for hundredweight_short_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for ounce_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for ounce_troy_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for pennyweight_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for pound_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for pound_troy_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for slug_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for ton_assay_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for ton_long_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for ton_short_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for ton_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for grain_per_gallon","synthetic":true,"types":[]},{"text":"impl Unpin for gram_per_cubic_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for ounce_per_cubic_inch","synthetic":true,"types":[]},{"text":"impl Unpin for ounce_per_gallon_imperial","synthetic":true,"types":[]},{"text":"impl Unpin for ounce_per_gallon","synthetic":true,"types":[]},{"text":"impl Unpin for pound_per_cubic_foot","synthetic":true,"types":[]},{"text":"impl Unpin for pound_per_cubic_inch","synthetic":true,"types":[]},{"text":"impl Unpin for pound_per_cubic_yard","synthetic":true,"types":[]},{"text":"impl Unpin for pound_per_gallon_imperial","synthetic":true,"types":[]},{"text":"impl Unpin for pound_per_gallon","synthetic":true,"types":[]},{"text":"impl Unpin for slug_per_cubic_foot","synthetic":true,"types":[]},{"text":"impl Unpin for ton_long_per_cubic_yard","synthetic":true,"types":[]},{"text":"impl Unpin for ton_short_per_cubic_yard","synthetic":true,"types":[]},{"text":"impl Unpin for yottagram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for zettagram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for exagram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for petagram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for teragram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for gigagram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for megagram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for hectogram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for decagram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for gram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for decigram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for centigram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for milligram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for microgram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for nanogram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for picogram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for femtogram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for attogram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for zeptogram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for yoctogram_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_per_minute","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_per_hour","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_per_day","synthetic":true,"types":[]},{"text":"impl Unpin for gram_per_minute","synthetic":true,"types":[]},{"text":"impl Unpin for gram_per_hour","synthetic":true,"types":[]},{"text":"impl Unpin for gram_per_day","synthetic":true,"types":[]},{"text":"impl Unpin for carat_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for grain_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for hundredweight_long_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for hundredweight_short_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for ounce_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for ounce_troy_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for pennyweight_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for pound_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for pound_per_minute","synthetic":true,"types":[]},{"text":"impl Unpin for pound_per_hour","synthetic":true,"types":[]},{"text":"impl Unpin for pound_per_day","synthetic":true,"types":[]},{"text":"impl Unpin for pound_troy_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for slug_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for ton_assay_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for ton_long_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for ton_short_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for ton_short_per_hour","synthetic":true,"types":[]},{"text":"impl Unpin for ton_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for yottamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zettamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for examole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for petamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for teramole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for gigamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for megamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for kilomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for hectomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for decamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for mole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for decimole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for centimole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for millimole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for micromole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for nanomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for picomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for femtomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for attomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zeptomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for yoctomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for kilomole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for kilomole_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for mole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for mole_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for millimole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for millimole_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for micromole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for micromole_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for nanomole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for nanomole_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for picomole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for picomole_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for femtomole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for femtomole_per_liter","synthetic":true,"types":[]},{"text":"impl Unpin for kilomole_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for mole_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for millimole_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for micromole_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for nanomole_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for picomole_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for femtomole_per_deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for kilomole_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for mole_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for millimole_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for micromole_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for nanomole_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for picomole_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for femtomole_per_milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_square_meter_per_second_squared_mole","synthetic":true,"types":[]},{"text":"impl Unpin for yottajoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for zettajoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for exajoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for petajoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for terajoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for gigajoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for megajoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for kilojoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for hectojoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for decajoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for decijoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for centijoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for millijoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for microjoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for nanojoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for picojoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for femtojoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for attojoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for zeptojoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for yoctojoule_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for petawatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for terawatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for gigawatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for megawatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for kilowatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for hectowatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for decawatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for watt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for milliwatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for microwatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for btu_it_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for btu_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for btu_39_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for btu_59_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for btu_60_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for calorie_it_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for calorie_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for calorie_15_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for calorie_20_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for calorie_it_nutrition_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for calorie_nutrition_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for electronvolt_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for erg_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for foot_poundal_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for foot_pound_force_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for kilocalorie_it_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for kilocalorie_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for quad_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for therm_ec_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for therm_us_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for ton_tnt_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for watt_second_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for yottagram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for zettagram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for exagram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for petagram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for teragram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for gigagram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for megagram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for hectogram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for decagram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for gram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for decigram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for centigram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for milligram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for microgram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for nanogram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for picogram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for femtogram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for attogram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for zeptogram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for yoctogram_per_mole","synthetic":true,"types":[]},{"text":"impl Unpin for yottagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for zettagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for exagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for petagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for teragram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for gigagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for megagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for hectogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for decagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for gram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for decigram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for centigram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for milligram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for microgram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for nanogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for picogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for femtogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for attogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for zeptogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for yoctogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_yottameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_zettameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_exameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_petameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_terameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_gigameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_megameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_kilometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_hectometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_decameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_decimeter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_centimeter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_millimeter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_micrometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_nanometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_picometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_femtometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_attometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_zeptometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_yoctometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for ton_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_meter_per_minute","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_meter_per_hour","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_meter_per_day","synthetic":true,"types":[]},{"text":"impl Unpin for slug_foot_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for slug_inch_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for pound_foot_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for pound_inch_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for yottawatt","synthetic":true,"types":[]},{"text":"impl Unpin for zettawatt","synthetic":true,"types":[]},{"text":"impl Unpin for exawatt","synthetic":true,"types":[]},{"text":"impl Unpin for petawatt","synthetic":true,"types":[]},{"text":"impl Unpin for terawatt","synthetic":true,"types":[]},{"text":"impl Unpin for gigawatt","synthetic":true,"types":[]},{"text":"impl Unpin for megawatt","synthetic":true,"types":[]},{"text":"impl Unpin for kilowatt","synthetic":true,"types":[]},{"text":"impl Unpin for hectowatt","synthetic":true,"types":[]},{"text":"impl Unpin for decawatt","synthetic":true,"types":[]},{"text":"impl Unpin for watt","synthetic":true,"types":[]},{"text":"impl Unpin for deciwatt","synthetic":true,"types":[]},{"text":"impl Unpin for centiwatt","synthetic":true,"types":[]},{"text":"impl Unpin for milliwatt","synthetic":true,"types":[]},{"text":"impl Unpin for microwatt","synthetic":true,"types":[]},{"text":"impl Unpin for nanowatt","synthetic":true,"types":[]},{"text":"impl Unpin for picowatt","synthetic":true,"types":[]},{"text":"impl Unpin for femtowatt","synthetic":true,"types":[]},{"text":"impl Unpin for attowatt","synthetic":true,"types":[]},{"text":"impl Unpin for zeptowatt","synthetic":true,"types":[]},{"text":"impl Unpin for yoctowatt","synthetic":true,"types":[]},{"text":"impl Unpin for erg_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for foot_pound_per_hour","synthetic":true,"types":[]},{"text":"impl Unpin for foot_pound_per_minute","synthetic":true,"types":[]},{"text":"impl Unpin for foot_pound_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for horsepower","synthetic":true,"types":[]},{"text":"impl Unpin for horsepower_boiler","synthetic":true,"types":[]},{"text":"impl Unpin for horsepower_electric","synthetic":true,"types":[]},{"text":"impl Unpin for horsepower_metric","synthetic":true,"types":[]},{"text":"impl Unpin for horsepower_imperial","synthetic":true,"types":[]},{"text":"impl Unpin for hydraulic_horsepower","synthetic":true,"types":[]},{"text":"impl Unpin for yottapascal","synthetic":true,"types":[]},{"text":"impl Unpin for zettapascal","synthetic":true,"types":[]},{"text":"impl Unpin for exapascal","synthetic":true,"types":[]},{"text":"impl Unpin for petapascal","synthetic":true,"types":[]},{"text":"impl Unpin for terapascal","synthetic":true,"types":[]},{"text":"impl Unpin for gigapascal","synthetic":true,"types":[]},{"text":"impl Unpin for megapascal","synthetic":true,"types":[]},{"text":"impl Unpin for kilopascal","synthetic":true,"types":[]},{"text":"impl Unpin for hectopascal","synthetic":true,"types":[]},{"text":"impl Unpin for decapascal","synthetic":true,"types":[]},{"text":"impl Unpin for pascal","synthetic":true,"types":[]},{"text":"impl Unpin for decipascal","synthetic":true,"types":[]},{"text":"impl Unpin for centipascal","synthetic":true,"types":[]},{"text":"impl Unpin for millipascal","synthetic":true,"types":[]},{"text":"impl Unpin for micropascal","synthetic":true,"types":[]},{"text":"impl Unpin for nanopascal","synthetic":true,"types":[]},{"text":"impl Unpin for picopascal","synthetic":true,"types":[]},{"text":"impl Unpin for femtopascal","synthetic":true,"types":[]},{"text":"impl Unpin for attopascal","synthetic":true,"types":[]},{"text":"impl Unpin for zeptopascal","synthetic":true,"types":[]},{"text":"impl Unpin for yoctopascal","synthetic":true,"types":[]},{"text":"impl Unpin for atmosphere","synthetic":true,"types":[]},{"text":"impl Unpin for atmosphere_technical","synthetic":true,"types":[]},{"text":"impl Unpin for bar","synthetic":true,"types":[]},{"text":"impl Unpin for centimeter_of_mercury_0","synthetic":true,"types":[]},{"text":"impl Unpin for centimeter_of_mercury","synthetic":true,"types":[]},{"text":"impl Unpin for centimeter_of_water_4","synthetic":true,"types":[]},{"text":"impl Unpin for centimeter_of_water","synthetic":true,"types":[]},{"text":"impl Unpin for dyne_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for foot_of_mercury","synthetic":true,"types":[]},{"text":"impl Unpin for foot_of_water_39_2","synthetic":true,"types":[]},{"text":"impl Unpin for foot_of_water","synthetic":true,"types":[]},{"text":"impl Unpin for gram_force_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for inch_of_mercury_32","synthetic":true,"types":[]},{"text":"impl Unpin for inch_of_mercury_60","synthetic":true,"types":[]},{"text":"impl Unpin for inch_of_mercury","synthetic":true,"types":[]},{"text":"impl Unpin for inch_of_water_39_2","synthetic":true,"types":[]},{"text":"impl Unpin for inch_of_water_60","synthetic":true,"types":[]},{"text":"impl Unpin for inch_of_water","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_force_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_force_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_force_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for kip_per_square_inch","synthetic":true,"types":[]},{"text":"impl Unpin for millibar","synthetic":true,"types":[]},{"text":"impl Unpin for millimeter_of_mercury","synthetic":true,"types":[]},{"text":"impl Unpin for millimeter_of_water","synthetic":true,"types":[]},{"text":"impl Unpin for millitorr","synthetic":true,"types":[]},{"text":"impl Unpin for poundal_per_square_foot","synthetic":true,"types":[]},{"text":"impl Unpin for pound_force_per_square_foot","synthetic":true,"types":[]},{"text":"impl Unpin for pound_force_per_square_inch","synthetic":true,"types":[]},{"text":"impl Unpin for psi","synthetic":true,"types":[]},{"text":"impl Unpin for torr","synthetic":true,"types":[]},{"text":"impl Unpin for ratio","synthetic":true,"types":[]},{"text":"impl Unpin for part_per_hundred","synthetic":true,"types":[]},{"text":"impl Unpin for percent","synthetic":true,"types":[]},{"text":"impl Unpin for part_per_thousand","synthetic":true,"types":[]},{"text":"impl Unpin for per_mille","synthetic":true,"types":[]},{"text":"impl Unpin for part_per_ten_thousand","synthetic":true,"types":[]},{"text":"impl Unpin for basis_point","synthetic":true,"types":[]},{"text":"impl Unpin for part_per_million","synthetic":true,"types":[]},{"text":"impl Unpin for part_per_billion","synthetic":true,"types":[]},{"text":"impl Unpin for part_per_trillion","synthetic":true,"types":[]},{"text":"impl Unpin for part_per_quadrillion","synthetic":true,"types":[]},{"text":"impl Unpin for square_kilometer_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for square_centimeter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for square_millimeter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for square_micrometer_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for yottajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zettajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for exajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for petajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for terajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for gigajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for megajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for kilojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for hectojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for decajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for decijoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for centijoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for millijoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for microjoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for nanojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for picojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for femtojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for attojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zeptojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for yoctojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for kilojoule_per_kilogram_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for kilojoule_per_gram_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_kilogram_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_gram_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for millijoule_per_kilogram_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for millijoule_per_gram_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for btu_per_ounce_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for btu_it_per_ounce_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for btu_per_pound_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for btu_it_per_pound_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for btu_per_ton_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for btu_it_per_ton_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for steradian","synthetic":true,"types":[]},{"text":"impl Unpin for spat","synthetic":true,"types":[]},{"text":"impl Unpin for square_degree","synthetic":true,"types":[]},{"text":"impl Unpin for square_minute","synthetic":true,"types":[]},{"text":"impl Unpin for square_second","synthetic":true,"types":[]},{"text":"impl Unpin for yottajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zettajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for exajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for petajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for terajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for gigajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for megajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for kilojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for hectojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for decajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for decijoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for centijoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for millijoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for microjoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for nanojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for picojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for femtojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for attojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zeptojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for yoctojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Unpin for gigajoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for megajoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for kilojoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for hectojoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for decajoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for decijoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for centijoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for millijoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for microjoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for nanojoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for gigajoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for megajoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for kilojoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for hectojoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for decajoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for joule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for decijoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for centijoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for millijoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for microjoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for nanojoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for yottakelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zettakelvin","synthetic":true,"types":[]},{"text":"impl Unpin for exakelvin","synthetic":true,"types":[]},{"text":"impl Unpin for petakelvin","synthetic":true,"types":[]},{"text":"impl Unpin for terakelvin","synthetic":true,"types":[]},{"text":"impl Unpin for gigakelvin","synthetic":true,"types":[]},{"text":"impl Unpin for megakelvin","synthetic":true,"types":[]},{"text":"impl Unpin for kilokelvin","synthetic":true,"types":[]},{"text":"impl Unpin for hectokelvin","synthetic":true,"types":[]},{"text":"impl Unpin for decakelvin","synthetic":true,"types":[]},{"text":"impl Unpin for kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for decikelvin","synthetic":true,"types":[]},{"text":"impl Unpin for centikelvin","synthetic":true,"types":[]},{"text":"impl Unpin for millikelvin","synthetic":true,"types":[]},{"text":"impl Unpin for microkelvin","synthetic":true,"types":[]},{"text":"impl Unpin for nanokelvin","synthetic":true,"types":[]},{"text":"impl Unpin for picokelvin","synthetic":true,"types":[]},{"text":"impl Unpin for femtokelvin","synthetic":true,"types":[]},{"text":"impl Unpin for attokelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zeptokelvin","synthetic":true,"types":[]},{"text":"impl Unpin for yoctokelvin","synthetic":true,"types":[]},{"text":"impl Unpin for degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for degree_rankine","synthetic":true,"types":[]},{"text":"impl Unpin for yottagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zettagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for exagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for petagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for teragram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for gigagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for megagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for hectogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for decagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for gram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for decigram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for centigram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for milligram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for microgram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for nanogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for picogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for femtogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for attogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zeptogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for yoctogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for yottawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zettawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for exawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for petawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for terawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for gigawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for megawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for kilowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for hectowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for decawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for watt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for deciwatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for centiwatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for milliwatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for microwatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for nanowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for picowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for femtowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for attowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zeptowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for yoctowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_meter_per_second_cubed_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for kilowatt_per_meter_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for watt_per_meter_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for milliwatt_per_meter_degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for yottakelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zettakelvin","synthetic":true,"types":[]},{"text":"impl Unpin for exakelvin","synthetic":true,"types":[]},{"text":"impl Unpin for petakelvin","synthetic":true,"types":[]},{"text":"impl Unpin for terakelvin","synthetic":true,"types":[]},{"text":"impl Unpin for gigakelvin","synthetic":true,"types":[]},{"text":"impl Unpin for megakelvin","synthetic":true,"types":[]},{"text":"impl Unpin for kilokelvin","synthetic":true,"types":[]},{"text":"impl Unpin for hectokelvin","synthetic":true,"types":[]},{"text":"impl Unpin for decakelvin","synthetic":true,"types":[]},{"text":"impl Unpin for kelvin","synthetic":true,"types":[]},{"text":"impl Unpin for decikelvin","synthetic":true,"types":[]},{"text":"impl Unpin for centikelvin","synthetic":true,"types":[]},{"text":"impl Unpin for millikelvin","synthetic":true,"types":[]},{"text":"impl Unpin for microkelvin","synthetic":true,"types":[]},{"text":"impl Unpin for nanokelvin","synthetic":true,"types":[]},{"text":"impl Unpin for picokelvin","synthetic":true,"types":[]},{"text":"impl Unpin for femtokelvin","synthetic":true,"types":[]},{"text":"impl Unpin for attokelvin","synthetic":true,"types":[]},{"text":"impl Unpin for zeptokelvin","synthetic":true,"types":[]},{"text":"impl Unpin for yoctokelvin","synthetic":true,"types":[]},{"text":"impl Unpin for degree_celsius","synthetic":true,"types":[]},{"text":"impl Unpin for degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Unpin for degree_rankine","synthetic":true,"types":[]},{"text":"impl Unpin for yottasecond","synthetic":true,"types":[]},{"text":"impl Unpin for zettasecond","synthetic":true,"types":[]},{"text":"impl Unpin for exasecond","synthetic":true,"types":[]},{"text":"impl Unpin for petasecond","synthetic":true,"types":[]},{"text":"impl Unpin for terasecond","synthetic":true,"types":[]},{"text":"impl Unpin for gigasecond","synthetic":true,"types":[]},{"text":"impl Unpin for megasecond","synthetic":true,"types":[]},{"text":"impl Unpin for kilosecond","synthetic":true,"types":[]},{"text":"impl Unpin for hectosecond","synthetic":true,"types":[]},{"text":"impl Unpin for decasecond","synthetic":true,"types":[]},{"text":"impl Unpin for second","synthetic":true,"types":[]},{"text":"impl Unpin for decisecond","synthetic":true,"types":[]},{"text":"impl Unpin for centisecond","synthetic":true,"types":[]},{"text":"impl Unpin for millisecond","synthetic":true,"types":[]},{"text":"impl Unpin for microsecond","synthetic":true,"types":[]},{"text":"impl Unpin for nanosecond","synthetic":true,"types":[]},{"text":"impl Unpin for picosecond","synthetic":true,"types":[]},{"text":"impl Unpin for femtosecond","synthetic":true,"types":[]},{"text":"impl Unpin for attosecond","synthetic":true,"types":[]},{"text":"impl Unpin for zeptosecond","synthetic":true,"types":[]},{"text":"impl Unpin for yoctosecond","synthetic":true,"types":[]},{"text":"impl Unpin for second_sidereal","synthetic":true,"types":[]},{"text":"impl Unpin for day","synthetic":true,"types":[]},{"text":"impl Unpin for day_sidereal","synthetic":true,"types":[]},{"text":"impl Unpin for hour","synthetic":true,"types":[]},{"text":"impl Unpin for hour_sidereal","synthetic":true,"types":[]},{"text":"impl Unpin for minute","synthetic":true,"types":[]},{"text":"impl Unpin for shake","synthetic":true,"types":[]},{"text":"impl Unpin for year","synthetic":true,"types":[]},{"text":"impl Unpin for year_sidereal","synthetic":true,"types":[]},{"text":"impl Unpin for year_tropical","synthetic":true,"types":[]},{"text":"impl Unpin for yottanewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zettanewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for exanewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for petanewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for teranewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for giganewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for meganewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for kilonewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for hectonewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for decanewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for newton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for decinewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for centinewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for millinewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for micronewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for nanonewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for piconewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for femtonewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for attonewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for zeptonewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for yoctonewton_meter","synthetic":true,"types":[]},{"text":"impl Unpin for newton_yottameter","synthetic":true,"types":[]},{"text":"impl Unpin for newton_zettameter","synthetic":true,"types":[]},{"text":"impl Unpin for newton_exameter","synthetic":true,"types":[]},{"text":"impl Unpin for newton_petameter","synthetic":true,"types":[]},{"text":"impl Unpin for newton_terameter","synthetic":true,"types":[]},{"text":"impl Unpin for newton_gigameter","synthetic":true,"types":[]},{"text":"impl Unpin for newton_megameter","synthetic":true,"types":[]},{"text":"impl Unpin for newton_kilometer","synthetic":true,"types":[]},{"text":"impl Unpin for newton_hectometer","synthetic":true,"types":[]},{"text":"impl Unpin for newton_decameter","synthetic":true,"types":[]},{"text":"impl Unpin for newton_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for newton_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for newton_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for newton_micrometer","synthetic":true,"types":[]},{"text":"impl Unpin for newton_nanometer","synthetic":true,"types":[]},{"text":"impl Unpin for newton_picometer","synthetic":true,"types":[]},{"text":"impl Unpin for newton_femtometer","synthetic":true,"types":[]},{"text":"impl Unpin for newton_attometer","synthetic":true,"types":[]},{"text":"impl Unpin for newton_zeptometer","synthetic":true,"types":[]},{"text":"impl Unpin for newton_yoctometer","synthetic":true,"types":[]},{"text":"impl Unpin for dyne_meter","synthetic":true,"types":[]},{"text":"impl Unpin for dyne_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for kilogram_force_meter","synthetic":true,"types":[]},{"text":"impl Unpin for ounce_force_inch","synthetic":true,"types":[]},{"text":"impl Unpin for pound_force_foot","synthetic":true,"types":[]},{"text":"impl Unpin for pound_force_inch","synthetic":true,"types":[]},{"text":"impl Unpin for yottameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for zettameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for exameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for petameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for terameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for gigameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for megameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for hectometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for decameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for decimeter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for centimeter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for millimeter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for micrometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for nanometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for picometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for femtometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for attometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for zeptometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for yoctometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for foot_per_hour","synthetic":true,"types":[]},{"text":"impl Unpin for foot_per_minute","synthetic":true,"types":[]},{"text":"impl Unpin for foot_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for inch_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kilometer_per_hour","synthetic":true,"types":[]},{"text":"impl Unpin for knot","synthetic":true,"types":[]},{"text":"impl Unpin for mile_per_hour","synthetic":true,"types":[]},{"text":"impl Unpin for mile_per_minute","synthetic":true,"types":[]},{"text":"impl Unpin for mile_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for millimeter_per_minute","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_yottameter","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_zettameter","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_exameter","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_petameter","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_terameter","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_gigameter","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_megameter","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_kilometer","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_hectometer","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_decameter","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_meter","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_centimeter","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_millimeter","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_micrometer","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_nanometer","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_picometer","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_femtometer","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_attometer","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_zeptometer","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_yoctometer","synthetic":true,"types":[]},{"text":"impl Unpin for acre_foot","synthetic":true,"types":[]},{"text":"impl Unpin for barrel","synthetic":true,"types":[]},{"text":"impl Unpin for bushel","synthetic":true,"types":[]},{"text":"impl Unpin for cord","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_foot","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_inch","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_mile","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_yard","synthetic":true,"types":[]},{"text":"impl Unpin for cup","synthetic":true,"types":[]},{"text":"impl Unpin for fluid_ounce","synthetic":true,"types":[]},{"text":"impl Unpin for fluid_ounce_imperial","synthetic":true,"types":[]},{"text":"impl Unpin for gallon_imperial","synthetic":true,"types":[]},{"text":"impl Unpin for gallon","synthetic":true,"types":[]},{"text":"impl Unpin for gill_imperial","synthetic":true,"types":[]},{"text":"impl Unpin for gill","synthetic":true,"types":[]},{"text":"impl Unpin for yottaliter","synthetic":true,"types":[]},{"text":"impl Unpin for zettaliter","synthetic":true,"types":[]},{"text":"impl Unpin for exaliter","synthetic":true,"types":[]},{"text":"impl Unpin for petaliter","synthetic":true,"types":[]},{"text":"impl Unpin for teraliter","synthetic":true,"types":[]},{"text":"impl Unpin for gigaliter","synthetic":true,"types":[]},{"text":"impl Unpin for megaliter","synthetic":true,"types":[]},{"text":"impl Unpin for kiloliter","synthetic":true,"types":[]},{"text":"impl Unpin for hectoliter","synthetic":true,"types":[]},{"text":"impl Unpin for decaliter","synthetic":true,"types":[]},{"text":"impl Unpin for liter","synthetic":true,"types":[]},{"text":"impl Unpin for deciliter","synthetic":true,"types":[]},{"text":"impl Unpin for centiliter","synthetic":true,"types":[]},{"text":"impl Unpin for milliliter","synthetic":true,"types":[]},{"text":"impl Unpin for microliter","synthetic":true,"types":[]},{"text":"impl Unpin for nanoliter","synthetic":true,"types":[]},{"text":"impl Unpin for picoliter","synthetic":true,"types":[]},{"text":"impl Unpin for femtoliter","synthetic":true,"types":[]},{"text":"impl Unpin for attoliter","synthetic":true,"types":[]},{"text":"impl Unpin for zeptoliter","synthetic":true,"types":[]},{"text":"impl Unpin for yoctoliter","synthetic":true,"types":[]},{"text":"impl Unpin for peck","synthetic":true,"types":[]},{"text":"impl Unpin for pint_dry","synthetic":true,"types":[]},{"text":"impl Unpin for pint_liquid","synthetic":true,"types":[]},{"text":"impl Unpin for quart_dry","synthetic":true,"types":[]},{"text":"impl Unpin for quart_liquid","synthetic":true,"types":[]},{"text":"impl Unpin for stere","synthetic":true,"types":[]},{"text":"impl Unpin for tablespoon","synthetic":true,"types":[]},{"text":"impl Unpin for teaspoon","synthetic":true,"types":[]},{"text":"impl Unpin for register_ton","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_yottameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_zettameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_exameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_petameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_terameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_gigameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_megameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_kilometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_hectometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_decameter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_meter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_decimeter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_centimeter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_millimeter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_micrometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_nanometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_picometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_femtometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_attometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_zeptometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_yoctometer_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for yottaliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for zettaliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for exaliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for petaliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for teraliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for gigaliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for megaliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for kiloliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for hectoliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for decaliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for liter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for deciliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for centiliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for milliliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for microliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for nanoliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for picoliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for femtoliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for attoliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for zeptoliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for yoctoliter_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for acre_foot_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for barrel_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for bushel_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cord_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_foot_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_foot_per_minute","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_inch_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_inch_per_minute","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_mile_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_yard_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for cubic_yard_per_minute","synthetic":true,"types":[]},{"text":"impl Unpin for cup_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for fluid_ounce_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for fluid_ounce_imperial_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for gallon_imperial_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for gallon_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for gallon_per_minute","synthetic":true,"types":[]},{"text":"impl Unpin for gallon_per_day","synthetic":true,"types":[]},{"text":"impl Unpin for gill_imperial_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for gill_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for peck_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for pint_dry_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for pint_liquid_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for quart_dry_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for quart_liquid_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for stere_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for tablespoon_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for teaspoon_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for register_ton_per_second","synthetic":true,"types":[]},{"text":"impl Unpin for DisplayStyle","synthetic":true,"types":[]},{"text":"impl Unpin for ParseQuantityError","synthetic":true,"types":[]},{"text":"impl Unpin for ConstantOp","synthetic":true,"types":[]},{"text":"impl&lt;D:&nbsp;?Sized, U:&nbsp;?Sized, V&gt; Unpin for Quantity&lt;D, U, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Dimension,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Units&lt;V&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Num + Conversion&lt;V&gt; + Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;?Sized, N&gt; Unpin for Arguments&lt;D, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Dimension,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unit + Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;?Sized, U:&nbsp;?Sized, V, N&gt; Unpin for QuantityArguments&lt;D, U, V, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Dimension,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Units&lt;V&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Num + Conversion&lt;V&gt; + Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unit + Unpin,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["url"] = [{"text":"impl&lt;S&gt; Unpin for Host&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Origin","synthetic":true,"types":[]},{"text":"impl Unpin for OpaqueOrigin","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]},{"text":"impl Unpin for SyntaxViolation","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PathSegmentsMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Position","synthetic":true,"types":[]},{"text":"impl Unpin for Url","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ParseOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UrlQuery&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["vec_arena"] = [{"text":"impl&lt;T&gt; Unpin for Arena&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V&gt; Unpin for VecMap&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for Entry&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for VacantEntry&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for OccupiedEntry&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for Iter&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for IterMut&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for Keys&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for Values&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for ValuesMut&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Unpin for IntoIter&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for Drain&lt;'a, V&gt;","synthetic":true,"types":[]}];
implementors["walkdir"] = [{"text":"impl Unpin for DirEntry","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for WalkDir","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Unpin for FilterEntry&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["want"] = [{"text":"impl Unpin for Giver","synthetic":true,"types":[]},{"text":"impl Unpin for Taker","synthetic":true,"types":[]},{"text":"impl Unpin for SharedGiver","synthetic":true,"types":[]},{"text":"impl Unpin for Closed","synthetic":true,"types":[]}];
implementors["webpki"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for DNSName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DNSNameRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidDNSNameError","synthetic":true,"types":[]},{"text":"impl Unpin for SignatureAlgorithm","synthetic":true,"types":[]},{"text":"impl Unpin for Time","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for EndEntityCert&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TrustAnchor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TLSServerTrustAnchors&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TLSClientTrustAnchors&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["wyz"] = [{"text":"impl&lt;T&gt; Unpin for FmtBinary&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FmtDisplay&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FmtLowerExp&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FmtLowerHex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FmtOctal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FmtPointer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FmtUpperExp&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FmtUpperHex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["xattr"] = [{"text":"impl Unpin for UnsupportedPlatformError","synthetic":true,"types":[]},{"text":"impl Unpin for XAttrs","synthetic":true,"types":[]}];
implementors["xml"] = [{"text":"impl&lt;'a&gt; Unpin for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for ReprDisplay&lt;'a, 'b&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'b: 'a,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedAttribute","synthetic":true,"types":[]},{"text":"impl Unpin for TextPosition","synthetic":true,"types":[]},{"text":"impl Unpin for XmlVersion","synthetic":true,"types":[]},{"text":"impl Unpin for Namespace","synthetic":true,"types":[]},{"text":"impl Unpin for NamespaceStack","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for NamespaceStackMappings&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CheckedTarget&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ParserConfig","synthetic":true,"types":[]},{"text":"impl Unpin for XmlEvent","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for EventReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Events&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for EmitterError","synthetic":true,"types":[]},{"text":"impl Unpin for EmitterConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for XmlEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for EndElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StartElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for EventWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["yaml_rust"] = [{"text":"impl Unpin for EmitError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for YamlEmitter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Parser&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for TScalarStyle","synthetic":true,"types":[]},{"text":"impl Unpin for Marker","synthetic":true,"types":[]},{"text":"impl Unpin for ScanError","synthetic":true,"types":[]},{"text":"impl Unpin for TokenType","synthetic":true,"types":[]},{"text":"impl Unpin for Token","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Scanner&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Yaml","synthetic":true,"types":[]},{"text":"impl Unpin for YamlLoader","synthetic":true,"types":[]},{"text":"impl Unpin for YamlIter","synthetic":true,"types":[]}];
implementors["zip"] = [{"text":"impl Unpin for CompressionMethod","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ZipArchive&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ZipFile&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidPassword","synthetic":true,"types":[]},{"text":"impl Unpin for ZipError","synthetic":true,"types":[]},{"text":"impl Unpin for DateTime","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for ZipWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FileOptions","synthetic":true,"types":[]}];
implementors["zstd"] = [{"text":"impl Unpin for Compressor","synthetic":true,"types":[]},{"text":"impl Unpin for Decompressor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for EncoderDictionary&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DecoderDictionary&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Unpin for Decoder&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Unpin for Encoder&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Unpin for Encoder&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Unpin for Decoder&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Unpin for AutoFinishEncoder&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, D&gt; Unpin for Reader&lt;R, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, D&gt; Unpin for Writer&lt;W, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for NoOp","synthetic":true,"types":[]},{"text":"impl Unpin for Status","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Decoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Encoder&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["zstd_safe"] = [{"text":"impl&lt;'a&gt; Unpin for CCtx&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DCtx&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CDict&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DDict&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for InBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OutBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FrameFormat","synthetic":true,"types":[]},{"text":"impl Unpin for CParameter","synthetic":true,"types":[]},{"text":"impl Unpin for DParameter","synthetic":true,"types":[]}];
implementors["zstd_sys"] = [{"text":"impl Unpin for ZSTD_CCtx_s","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_DCtx_s","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_strategy","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_cParameter","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_bounds","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_ResetDirective","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_dParameter","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_inBuffer_s","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_outBuffer_s","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_EndDirective","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_CDict_s","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_DDict_s","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_CCtx_params_s","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_Sequence","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_compressionParameters","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_frameParameters","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_parameters","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_dictContentType_e","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_dictLoadMethod_e","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_format_e","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_forceIgnoreChecksum_e","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_refMultipleDDicts_e","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_dictAttachPref_e","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_literalCompressionMode_e","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_sequenceFormat_e","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_customMem","synthetic":true,"types":[]},{"text":"impl Unpin for POOL_ctx_s","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_frameProgression","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_frameType_e","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_frameHeader","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_nextInputType_e","synthetic":true,"types":[]},{"text":"impl Unpin for ZDICT_params_t","synthetic":true,"types":[]},{"text":"impl Unpin for ZDICT_cover_params_t","synthetic":true,"types":[]},{"text":"impl Unpin for ZDICT_fastCover_params_t","synthetic":true,"types":[]},{"text":"impl Unpin for ZDICT_legacy_params_t","synthetic":true,"types":[]},{"text":"impl Unpin for __locale_struct","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTDMT_CCtx_s","synthetic":true,"types":[]},{"text":"impl Unpin for __locale_data","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()