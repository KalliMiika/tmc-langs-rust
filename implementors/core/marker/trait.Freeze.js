(function() {var implementors = {};
implementors["adler32"] = [{"text":"impl Freeze for RollingAdler32","synthetic":true,"types":[]}];
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; Freeze for AhoCorasick&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for FindIter&lt;'a, 'b, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for FindOverlappingIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, S&gt; Freeze for StreamFindIter&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for AhoCorasickBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for MatchKind","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for MatchKind","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl Freeze for Searcher","synthetic":true,"types":[]},{"text":"impl&lt;'s, 'h&gt; Freeze for FindIter&lt;'s, 'h&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Match","synthetic":true,"types":[]}];
implementors["ansi_term"] = [{"text":"impl Freeze for Prefix","synthetic":true,"types":[]},{"text":"impl Freeze for Infix","synthetic":true,"types":[]},{"text":"impl Freeze for Suffix","synthetic":true,"types":[]},{"text":"impl Freeze for Style","synthetic":true,"types":[]},{"text":"impl Freeze for Colour","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Freeze for ANSIGenericString&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Freeze for ANSIGenericStrings&lt;'a, S&gt;","synthetic":true,"types":[]}];
implementors["anyhow"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Chain&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; Freeze for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for CapacityError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; Freeze for Drain&lt;'a, A&gt;","synthetic":true,"types":[]}];
implementors["async_channel"] = [{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for RecvError","synthetic":true,"types":[]},{"text":"impl Freeze for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Send&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Recv&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["async_executor"] = [{"text":"impl&lt;'a&gt; !Freeze for Executor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Freeze for LocalExecutor&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["async_fs"] = [{"text":"impl Freeze for ReadDir","synthetic":true,"types":[]},{"text":"impl Freeze for DirEntry","synthetic":true,"types":[]},{"text":"impl Freeze for DirBuilder","synthetic":true,"types":[]},{"text":"impl !Freeze for File","synthetic":true,"types":[]},{"text":"impl Freeze for OpenOptions","synthetic":true,"types":[]}];
implementors["async_io"] = [{"text":"impl Freeze for Timer","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Async&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["async_lock"] = [{"text":"impl !Freeze for Barrier","synthetic":true,"types":[]},{"text":"impl Freeze for BarrierWaitResult","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Mutex&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Freeze for MutexGuardArc&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for RwLock&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for RwLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for RwLockUpgradableReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for RwLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for Semaphore","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SemaphoreGuard&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SemaphoreGuardArc","synthetic":true,"types":[]}];
implementors["async_net"] = [{"text":"impl Freeze for UnixListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for UnixStream","synthetic":true,"types":[]},{"text":"impl Freeze for UnixDatagram","synthetic":true,"types":[]},{"text":"impl Freeze for TcpListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TcpStream","synthetic":true,"types":[]},{"text":"impl Freeze for UdpSocket","synthetic":true,"types":[]}];
implementors["async_process"] = [{"text":"impl Freeze for Child","synthetic":true,"types":[]},{"text":"impl Freeze for ChildStdin","synthetic":true,"types":[]},{"text":"impl Freeze for ChildStdout","synthetic":true,"types":[]},{"text":"impl Freeze for ChildStderr","synthetic":true,"types":[]},{"text":"impl Freeze for Command","synthetic":true,"types":[]}];
implementors["async_task"] = [{"text":"impl Freeze for Runnable","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Task&lt;T&gt;","synthetic":true,"types":[]}];
implementors["atomic_waker"] = [{"text":"impl !Freeze for AtomicWaker","synthetic":true,"types":[]}];
implementors["atty"] = [{"text":"impl Freeze for Stream","synthetic":true,"types":[]}];
implementors["base64"] = [{"text":"impl&lt;'a&gt; Freeze for Base64Display&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Freeze for DecoderReader&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Freeze for EncoderWriter&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DecodeError","synthetic":true,"types":[]},{"text":"impl Freeze for CharacterSet","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]}];
implementors["bitvec"] = [{"text":"impl&lt;O, V&gt; Freeze for BitArray&lt;O, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Freeze for BitDomain&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Freeze for BitDomainMut&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Domain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for DomainMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for BitIdx&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for BitTail&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for BitPos&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for BitSel&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for BitMask&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Msb0","synthetic":true,"types":[]},{"text":"impl Freeze for Lsb0","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Freeze for Iter&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Freeze for IterMut&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Freeze for Windows&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Freeze for Chunks&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Freeze for ChunksMut&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Freeze for ChunksExact&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Freeze for ChunksExactMut&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Freeze for RChunks&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Freeze for RChunksMut&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Freeze for RChunksExact&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Freeze for RChunksExactMut&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Freeze for Split&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Freeze for SplitMut&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Freeze for RSplit&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Freeze for RSplitMut&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Freeze for SplitN&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Freeze for SplitNMut&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Freeze for RSplitN&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Freeze for RSplitNMut&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Freeze for BitMut&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;O, T&gt; Freeze for BitSlice&lt;O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;O, T&gt; Freeze for BitBox&lt;O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;O, T&gt; Freeze for IntoIter&lt;O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Freeze for Drain&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, I&gt; Freeze for Splice&lt;'a, O, T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;O, T&gt; Freeze for BitVec&lt;O, T&gt;","synthetic":true,"types":[]}];
implementors["block_buffer"] = [{"text":"impl&lt;BlockSize&gt; Freeze for BlockBuffer&lt;BlockSize&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;BlockSize as ArrayLength&lt;u8&gt;&gt;::ArrayType: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["blocking"] = [{"text":"impl&lt;T&gt; Freeze for Unblock&lt;T&gt;","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl Freeze for BigEndian","synthetic":true,"types":[]},{"text":"impl Freeze for LittleEndian","synthetic":true,"types":[]}];
implementors["bytes"] = [{"text":"impl&lt;T, U&gt; Freeze for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Limit&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for Reader&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Take&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for UninitSlice","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for Writer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for Bytes","synthetic":true,"types":[]},{"text":"impl Freeze for BytesMut","synthetic":true,"types":[]}];
implementors["bzip2"] = [{"text":"impl Freeze for Compress","synthetic":true,"types":[]},{"text":"impl Freeze for Decompress","synthetic":true,"types":[]},{"text":"impl Freeze for Action","synthetic":true,"types":[]},{"text":"impl Freeze for Status","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for BzEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for BzDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for BzEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for BzDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for BzEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for BzDecoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Compression","synthetic":true,"types":[]}];
implementors["bzip2_sys"] = [{"text":"impl Freeze for bz_stream","synthetic":true,"types":[]}];
implementors["cache_padded"] = [{"text":"impl&lt;T&gt; Freeze for CachePadded&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["cesu8"] = [{"text":"impl Freeze for Cesu8DecodingError","synthetic":true,"types":[]}];
implementors["chrono"] = [{"text":"impl Freeze for FixedOffset","synthetic":true,"types":[]},{"text":"impl Freeze for Local","synthetic":true,"types":[]},{"text":"impl Freeze for Utc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for LocalResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for NaiveDate","synthetic":true,"types":[]},{"text":"impl Freeze for NaiveDateTime","synthetic":true,"types":[]},{"text":"impl Freeze for IsoWeek","synthetic":true,"types":[]},{"text":"impl Freeze for NaiveTime","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; Freeze for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for SecondsFormat","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; Freeze for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Parsed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StrftimeItems&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Pad","synthetic":true,"types":[]},{"text":"impl Freeze for Numeric","synthetic":true,"types":[]},{"text":"impl Freeze for InternalNumeric","synthetic":true,"types":[]},{"text":"impl Freeze for Fixed","synthetic":true,"types":[]},{"text":"impl Freeze for InternalFixed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Item&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for DelayedFormat&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for RoundingError","synthetic":true,"types":[]},{"text":"impl Freeze for Weekday","synthetic":true,"types":[]},{"text":"impl Freeze for ParseWeekdayError","synthetic":true,"types":[]},{"text":"impl Freeze for Month","synthetic":true,"types":[]},{"text":"impl Freeze for ParseMonthError","synthetic":true,"types":[]}];
implementors["clap"] = [{"text":"impl Freeze for AppSettings","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !Freeze for App&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Freeze for Arg&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ArgMatches&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for OsValues&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ArgGroup&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ArgSettings","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SubCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Shell","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["concurrent_queue"] = [{"text":"impl&lt;T&gt; !Freeze for ConcurrentQueue&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for PopError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for PushError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["cpuid_bool"] = [{"text":"impl !Freeze for LazyBool","synthetic":true,"types":[]}];
implementors["crc32fast"] = [{"text":"impl Freeze for Hasher","synthetic":true,"types":[]}];
implementors["crypto_mac"] = [{"text":"impl Freeze for MacError","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidKeyLength","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Freeze for Output&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;M as Mac&gt;::OutputSize as ArrayLength&lt;u8&gt;&gt;::ArrayType: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["digest"] = [{"text":"impl Freeze for InvalidOutputSize","synthetic":true,"types":[]}];
implementors["encoding_rs"] = [{"text":"impl Freeze for Latin1Bidi","synthetic":true,"types":[]},{"text":"impl Freeze for Encoding","synthetic":true,"types":[]},{"text":"impl Freeze for CoderResult","synthetic":true,"types":[]},{"text":"impl Freeze for DecoderResult","synthetic":true,"types":[]},{"text":"impl Freeze for Decoder","synthetic":true,"types":[]},{"text":"impl Freeze for EncoderResult","synthetic":true,"types":[]},{"text":"impl Freeze for Encoder","synthetic":true,"types":[]}];
implementors["env_logger"] = [{"text":"impl !Freeze for Filter","synthetic":true,"types":[]},{"text":"impl !Freeze for Builder","synthetic":true,"types":[]},{"text":"impl Freeze for Timestamp","synthetic":true,"types":[]},{"text":"impl Freeze for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for StyledValue&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Color","synthetic":true,"types":[]},{"text":"impl Freeze for Target","synthetic":true,"types":[]},{"text":"impl Freeze for WriteStyle","synthetic":true,"types":[]},{"text":"impl Freeze for TimestampPrecision","synthetic":true,"types":[]},{"text":"impl Freeze for Formatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Env&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for Logger","synthetic":true,"types":[]},{"text":"impl !Freeze for Builder","synthetic":true,"types":[]}];
implementors["event_listener"] = [{"text":"impl !Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for EventListener","synthetic":true,"types":[]}];
implementors["fastrand"] = [{"text":"impl !Freeze for Rng","synthetic":true,"types":[]}];
implementors["fd_lock"] = [{"text":"impl&lt;'fdlock, T&gt; Freeze for FdLockGuard&lt;'fdlock, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for FdLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["filetime"] = [{"text":"impl Freeze for FileTime","synthetic":true,"types":[]}];
implementors["flate2"] = [{"text":"impl Freeze for Crc","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for CrcReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for CrcWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DeflateEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DeflateDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DeflateEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DeflateDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for DeflateEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for DeflateDecoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for GzEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for GzDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for MultiGzDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for GzEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for GzDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for MultiGzDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for GzEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for GzDecoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for GzHeader","synthetic":true,"types":[]},{"text":"impl Freeze for GzBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Compress","synthetic":true,"types":[]},{"text":"impl Freeze for Decompress","synthetic":true,"types":[]},{"text":"impl Freeze for FlushCompress","synthetic":true,"types":[]},{"text":"impl Freeze for FlushDecompress","synthetic":true,"types":[]},{"text":"impl Freeze for DecompressError","synthetic":true,"types":[]},{"text":"impl Freeze for CompressError","synthetic":true,"types":[]},{"text":"impl Freeze for Status","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for ZlibEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for ZlibDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for ZlibEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for ZlibDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for ZlibEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for ZlibDecoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Compression","synthetic":true,"types":[]}];
implementors["fnv"] = [{"text":"impl Freeze for FnvHasher","synthetic":true,"types":[]}];
implementors["form_urlencoded"] = [{"text":"impl&lt;'a&gt; Freeze for Parse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ParseIntoOwned&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ByteSerialize&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Serializer&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["fs_extra"] = [{"text":"impl Freeze for ErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for CopyOptions","synthetic":true,"types":[]},{"text":"impl Freeze for TransitProcess","synthetic":true,"types":[]},{"text":"impl Freeze for CopyOptions","synthetic":true,"types":[]},{"text":"impl Freeze for DirOptions","synthetic":true,"types":[]},{"text":"impl Freeze for DirContent","synthetic":true,"types":[]},{"text":"impl Freeze for TransitProcess","synthetic":true,"types":[]},{"text":"impl Freeze for TransitState","synthetic":true,"types":[]},{"text":"impl Freeze for TransitProcessResult","synthetic":true,"types":[]},{"text":"impl Freeze for DirEntryAttr","synthetic":true,"types":[]},{"text":"impl Freeze for DirEntryValue","synthetic":true,"types":[]},{"text":"impl Freeze for LsResult","synthetic":true,"types":[]},{"text":"impl Freeze for TransitProcess","synthetic":true,"types":[]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for UnboundedReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Cancellation&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Canceled","synthetic":true,"types":[]}];
implementors["futures_lite"] = [{"text":"impl&lt;T&gt; Freeze for Pending&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for PollOnce&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Ready&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for YieldNow","synthetic":true,"types":[]},{"text":"impl&lt;F1, F2&gt; Freeze for Zip&lt;F1, F2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F1 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F2 as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F1, F2&gt; Freeze for TryZip&lt;F1, F2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F1 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F2 as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F1, F2&gt; Freeze for Or&lt;F1, F2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F1, F2&gt; Freeze for Race&lt;F1, F2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for CatchUnwind&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for BlockOn&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Empty&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Once&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Pending&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for RepeatWith&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; Freeze for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; Freeze for TryUnfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Freeze for NextFuture&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Freeze for TryNextFuture&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S:&nbsp;?Sized&gt; Freeze for CountFuture&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, C&gt; Freeze for CollectFuture&lt;S, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, C&gt; Freeze for TryCollectFuture&lt;S, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, P, B&gt; Freeze for PartitionFuture&lt;S, P, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, T&gt; Freeze for FoldFuture&lt;S, F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S, F, B&gt; Freeze for TryFoldFuture&lt;'a, S, F, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, St, F&gt; Freeze for Scan&lt;S, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Fuse&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Freeze for Map&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, U, F&gt; Freeze for FlatMap&lt;S, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Flatten&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, Fut&gt; Freeze for Then&lt;S, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, P&gt; Freeze for Filter&lt;S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S1, S2&gt; Freeze for Or&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S1, S2&gt; Freeze for Race&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Freeze for FilterMap&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Take&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, P&gt; Freeze for TakeWhile&lt;S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Skip&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, P&gt; Freeze for SkipWhile&lt;S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for StepBy&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, U&gt; Freeze for Chain&lt;S, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Cloned&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Copied&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Cycle&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Enumerate&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Freeze for Inspect&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Freeze for NthFuture&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for LastFuture&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Stream&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, P&gt; Freeze for FindFuture&lt;'a, S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, F&gt; Freeze for FindMapFuture&lt;'a, S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, P&gt; Freeze for PositionFuture&lt;'a, S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, P&gt; Freeze for AllFuture&lt;'a, S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, P&gt; Freeze for AnyFuture&lt;'a, S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Freeze for ForEachFuture&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, F&gt; Freeze for TryForEachFuture&lt;'a, S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Freeze for Zip&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Stream&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, FromA, FromB&gt; Freeze for UnzipFuture&lt;S, FromA, FromB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;FromA: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;FromB: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for AssertAsync&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for BlockOn&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Cursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Empty","synthetic":true,"types":[]},{"text":"impl Freeze for Repeat","synthetic":true,"types":[]},{"text":"impl Freeze for Sink","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for FillBuf&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadUntilFuture&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadLineFuture&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Split&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadFuture&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadVectoredFuture&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadToEndFuture&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadToStringFuture&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadExactFuture&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Bytes&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R1, R2&gt; Freeze for Chain&lt;R1, R2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Freeze for SeekFuture&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Freeze for WriteFuture&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Freeze for WriteVectoredFuture&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Freeze for WriteAllFuture&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Freeze for FlushFuture&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Freeze for CloseFuture&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for WriteHalf&lt;T&gt;","synthetic":true,"types":[]}];
implementors["futures_task"] = [{"text":"impl Freeze for SpawnError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for WakerRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for LocalFutureObj&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for FutureObj&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["futures_timer"] = [{"text":"impl Freeze for Delay","synthetic":true,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;Fut&gt; Freeze for Fuse&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for CatchUnwind&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for RemoteHandle&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for Remote&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for Shared&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for WeakShared&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for Flatten&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for FlattenStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Freeze for Map&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for IntoStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, T&gt; Freeze for MapInto&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for Then&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Freeze for Inspect&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for NeverError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for UnitError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for IntoFuture&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for TryFlatten&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for TryFlattenStream&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, Si&gt; Freeze for FlattenSink&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for AndThen&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for OrElse&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; Freeze for ErrInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; Freeze for OkInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Freeze for InspectOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Freeze for InspectErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Freeze for MapOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Freeze for MapErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F, G&gt; Freeze for MapOkOrElse&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Freeze for UnwrapOrElse&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for Lazy&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Pending&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for MaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for TryMaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for OptionFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Ready&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for Join&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Freeze for Join3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Freeze for Join4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Freeze for Join5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for JoinAll&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Freeze for Select&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for SelectAll&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for TryJoin&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Freeze for TryJoin3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Freeze for TryJoin4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Freeze for TryJoin5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as TryFuture&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for TryJoinAll&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Freeze for TrySelect&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for SelectOk&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Freeze for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for Abortable&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for AbortRegistration","synthetic":true,"types":[]},{"text":"impl Freeze for AbortHandle","synthetic":true,"types":[]},{"text":"impl Freeze for Aborted","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Freeze for Chain&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; Freeze for Collect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, FromA, FromB&gt; Freeze for Unzip&lt;St, FromA, FromB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;FromA: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;FromB: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Concat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Cycle&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Enumerate&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for Filter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for FilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; Freeze for Fold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for ForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Fuse&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for StreamFuture&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Freeze for Map&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Freeze for Next&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Freeze for SelectNextSome&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Peekable&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; Freeze for Peek&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Skip&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for SkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Take&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for TakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut&gt; Freeze for TakeUntil&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for Then&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Freeze for Zip&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St1 as Stream&gt;::Item: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St2 as Stream&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Chunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for ReadyChunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, S, Fut, F&gt; Freeze for Scan&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !Freeze for BufferUnordered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !Freeze for Buffered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; !Freeze for ForEachConcurrent&lt;St, Fut, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for SplitStream&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, Item&gt; Freeze for SplitSink&lt;S, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Item&gt; Freeze for ReuniteError&lt;T, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for CatchUnwind&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Flatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Si&gt; Freeze for Forward&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Freeze for Inspect&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, U, F&gt; Freeze for FlatMap&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for AndThen&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for IntoStream&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for OrElse&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Freeze for TryNext&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for TryForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for TryFilter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for TryFilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for TryFlatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; Freeze for TryCollect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for TryConcat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; Freeze for TryFold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; Freeze for TryUnfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for TrySkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for TryTakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !Freeze for TryBufferUnordered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !Freeze for TryBuffered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; !Freeze for TryForEachConcurrent&lt;St, Fut, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for IntoAsyncRead&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, E&gt; Freeze for ErrInto&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Freeze for InspectOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Freeze for InspectErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Freeze for MapOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Freeze for MapErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for RepeatWith&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Empty&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for Once&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Pending&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Freeze for Select&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; Freeze for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for FuturesOrdered&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Freeze for IterPinMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Freeze for IterMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Freeze for IterPinRef&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Freeze for Iter&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !Freeze for FuturesUnordered&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !Freeze for SelectAll&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Freeze for Close&lt;'a, Si, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Drain&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Si1, Si2&gt; Freeze for Fanout&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Freeze for Feed&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Freeze for Flush&lt;'a, Si, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, E&gt; Freeze for SinkErrInto&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, F&gt; Freeze for SinkMapErr&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Freeze for Send&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, St:&nbsp;?Sized&gt; Freeze for SendAll&lt;'a, Si, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, R&gt; Freeze for Unfold&lt;T, F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, Fut, F&gt; Freeze for With&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, St, F&gt; Freeze for WithFlatMap&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item&gt; Freeze for Buffer&lt;Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for AllowStdIo&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Freeze for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Freeze for Close&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; Freeze for Copy&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; Freeze for CopyBuf&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Cursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Empty","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for FillBuf&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Freeze for Flush&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W, Item&gt; Freeze for IntoSink&lt;W, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for Read&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadVectored&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadExact&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadLine&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadToEnd&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadToString&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadUntil&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Repeat","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Freeze for Seek&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Sink","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for WriteHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ReuniteError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Window&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Freeze for Write&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Freeze for WriteVectored&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Freeze for WriteAll&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Mutex&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for MutexLockFuture&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized, U:&nbsp;?Sized&gt; Freeze for MappedMutexGuard&lt;'a, T, U&gt;","synthetic":true,"types":[]}];
implementors["generic_array"] = [{"text":"impl&lt;T, N&gt; Freeze for GenericArrayIter&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as ArrayLength&lt;T&gt;&gt;::ArrayType: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Freeze for GenericArray&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as ArrayLength&lt;T&gt;&gt;::ArrayType: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["glob"] = [{"text":"impl Freeze for Paths","synthetic":true,"types":[]},{"text":"impl Freeze for GlobError","synthetic":true,"types":[]},{"text":"impl Freeze for PatternError","synthetic":true,"types":[]},{"text":"impl Freeze for Pattern","synthetic":true,"types":[]},{"text":"impl Freeze for MatchOptions","synthetic":true,"types":[]}];
implementors["h2"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Reason","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for SendRequest&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for ReadySendRequest&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, B&nbsp;=&nbsp;Bytes&gt; !Freeze for Connection&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ResponseFuture","synthetic":true,"types":[]},{"text":"impl Freeze for PushedResponseFuture","synthetic":true,"types":[]},{"text":"impl !Freeze for PushPromise","synthetic":true,"types":[]},{"text":"impl Freeze for PushPromises","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T, B&nbsp;=&nbsp;Bytes&gt; !Freeze for Handshake&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; !Freeze for Connection&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for SendResponse&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for SendPushedResponse&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for SendStream&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for StreamId","synthetic":true,"types":[]},{"text":"impl Freeze for RecvStream","synthetic":true,"types":[]},{"text":"impl Freeze for FlowControl","synthetic":true,"types":[]},{"text":"impl Freeze for PingPong","synthetic":true,"types":[]},{"text":"impl Freeze for Ping","synthetic":true,"types":[]},{"text":"impl Freeze for Pong","synthetic":true,"types":[]}];
implementors["hashbrown"] = [{"text":"impl&lt;T&gt; Freeze for Bucket&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for RawTable&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for RawIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for RawIntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for RawDrain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for RawIterHash&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DefaultHashBuilder","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; Freeze for HashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for IntoIter&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Drain&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, F&gt; Freeze for DrainFilter&lt;'a, K, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for ValuesMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for RawEntryBuilderMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for RawEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for RawOccupiedEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for RawVacantEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for RawEntryBuilder&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for Entry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for OccupiedEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Freeze for HashSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Freeze for Iter&lt;'a, K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Freeze for IntoIter&lt;K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Freeze for Drain&lt;'a, K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, F&gt; Freeze for DrainFilter&lt;'a, K, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for Intersection&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for Difference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for SymmetricDifference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for Union&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TryReserveError","synthetic":true,"types":[]}];
implementors["heim_common"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["heim_disk"] = [{"text":"impl Freeze for Flags","synthetic":true,"types":[]},{"text":"impl Freeze for IoCounters","synthetic":true,"types":[]},{"text":"impl Freeze for FileSystem","synthetic":true,"types":[]},{"text":"impl Freeze for Partition","synthetic":true,"types":[]},{"text":"impl Freeze for Usage","synthetic":true,"types":[]}];
implementors["heim_runtime"] = [{"text":"impl Freeze for Interval","synthetic":true,"types":[]}];
implementors["hex"] = [{"text":"impl Freeze for FromHexError","synthetic":true,"types":[]}];
implementors["hmac"] = [{"text":"impl&lt;D&gt; Freeze for Hmac&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;D as BlockInput&gt;::BlockSize as ArrayLength&lt;u8&gt;&gt;::ArrayType: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["http"] = [{"text":"impl&lt;T&gt; Freeze for HeaderMap&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Keys&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Values&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for ValuesMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for GetAll&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Freeze for Entry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Freeze for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for OccupiedEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for ValueIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for ValueIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for ValueDrain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for HeaderName","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidHeaderName","synthetic":true,"types":[]},{"text":"impl !Freeze for HeaderValue","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidHeaderValue","synthetic":true,"types":[]},{"text":"impl Freeze for ToStrError","synthetic":true,"types":[]},{"text":"impl Freeze for Method","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidMethod","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Request&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for Parts","synthetic":true,"types":[]},{"text":"impl !Freeze for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Response&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Parts","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl Freeze for StatusCode","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidStatusCode","synthetic":true,"types":[]},{"text":"impl !Freeze for Authority","synthetic":true,"types":[]},{"text":"impl !Freeze for Builder","synthetic":true,"types":[]},{"text":"impl !Freeze for PathAndQuery","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Port&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Scheme","synthetic":true,"types":[]},{"text":"impl !Freeze for Uri","synthetic":true,"types":[]},{"text":"impl !Freeze for Parts","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidUri","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidUriParts","synthetic":true,"types":[]},{"text":"impl Freeze for Version","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Extensions","synthetic":true,"types":[]}];
implementors["http_body"] = [{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for Data&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for Trailers&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SizeHint","synthetic":true,"types":[]}];
implementors["httparse"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidChunkSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Status&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; Freeze for Request&lt;'headers, 'buf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; Freeze for Response&lt;'headers, 'buf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Header&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["httpdate"] = [{"text":"impl Freeze for HttpDate","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["humantime"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for FormattedDuration","synthetic":true,"types":[]},{"text":"impl Freeze for Duration","synthetic":true,"types":[]},{"text":"impl Freeze for Timestamp","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Rfc3339Timestamp","synthetic":true,"types":[]}];
implementors["hyper"] = [{"text":"impl !Freeze for Body","synthetic":true,"types":[]},{"text":"impl Freeze for Sender","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl !Freeze for Upgraded","synthetic":true,"types":[]},{"text":"impl Freeze for OnUpgrade","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Parts&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Name","synthetic":true,"types":[]},{"text":"impl Freeze for GaiResolver","synthetic":true,"types":[]},{"text":"impl Freeze for GaiAddrs","synthetic":true,"types":[]},{"text":"impl Freeze for GaiFuture","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidNameError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for HttpConnector&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for HttpInfo","synthetic":true,"types":[]},{"text":"impl Freeze for Connected","synthetic":true,"types":[]},{"text":"impl&lt;C, B&gt; Freeze for Client&lt;C, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ResponseFuture","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for SendRequest&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Freeze for Connection&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl Freeze for ResponseFuture","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Parts&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;C, B, T&gt; Freeze for Connect&lt;C, B, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["hyper_rustls"] = [{"text":"impl&lt;T&gt; Freeze for HttpsConnector&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for MaybeHttpsStream&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["idna"] = [{"text":"impl Freeze for Idna","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for Errors","synthetic":true,"types":[]}];
implementors["indexmap"] = [{"text":"impl&lt;'a, K, V&gt; Freeze for OccupiedEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Entry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for VacantEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; Freeze for IndexMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for ValuesMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for IntoIter&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Drain&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Freeze for IndexSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for Difference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for Intersection&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S1, S2&gt; Freeze for SymmetricDifference&lt;'a, T, S1, S2&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for Union&lt;'a, T, S&gt;","synthetic":true,"types":[]}];
implementors["ipnet"] = [{"text":"impl Freeze for IpAddrRange","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv4AddrRange","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6AddrRange","synthetic":true,"types":[]},{"text":"impl Freeze for IpNet","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv4Net","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6Net","synthetic":true,"types":[]},{"text":"impl Freeze for PrefixLenError","synthetic":true,"types":[]},{"text":"impl Freeze for IpSubnets","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv4Subnets","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6Subnets","synthetic":true,"types":[]},{"text":"impl Freeze for AddrParseError","synthetic":true,"types":[]}];
implementors["isolang"] = [{"text":"impl Freeze for Language","synthetic":true,"types":[]}];
implementors["itoa"] = [{"text":"impl Freeze for Buffer","synthetic":true,"types":[]}];
implementors["j4rs"] = [{"text":"impl Freeze for Jvm","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for JvmBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for InvocationArg","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Null&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for InstanceReceiver","synthetic":true,"types":[]},{"text":"impl Freeze for Instance","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ClasspathEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for JavaOpt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for J4RsError","synthetic":true,"types":[]},{"text":"impl Freeze for LocalJarArtifact","synthetic":true,"types":[]},{"text":"impl Freeze for MavenArtifact","synthetic":true,"types":[]},{"text":"impl Freeze for MavenSettings","synthetic":true,"types":[]},{"text":"impl Freeze for MavenArtifactRepo","synthetic":true,"types":[]},{"text":"impl Freeze for FxController","synthetic":true,"types":[]},{"text":"impl Freeze for FxEventType","synthetic":true,"types":[]}];
implementors["java_locator"] = [{"text":"impl Freeze for JavaLocatorError","synthetic":true,"types":[]}];
implementors["jni_sys"] = [{"text":"impl Freeze for _jobject","synthetic":true,"types":[]},{"text":"impl Freeze for jvalue","synthetic":true,"types":[]},{"text":"impl Freeze for _jfieldID","synthetic":true,"types":[]},{"text":"impl Freeze for _jmethodID","synthetic":true,"types":[]},{"text":"impl Freeze for jobjectRefType","synthetic":true,"types":[]},{"text":"impl Freeze for JNINativeMethod","synthetic":true,"types":[]},{"text":"impl Freeze for JNINativeInterface_","synthetic":true,"types":[]},{"text":"impl Freeze for JNIEnv_","synthetic":true,"types":[]},{"text":"impl Freeze for JavaVMOption","synthetic":true,"types":[]},{"text":"impl Freeze for JavaVMInitArgs","synthetic":true,"types":[]},{"text":"impl Freeze for JavaVMAttachArgs","synthetic":true,"types":[]},{"text":"impl Freeze for JNIInvokeInterface_","synthetic":true,"types":[]}];
implementors["lexical_core"] = [{"text":"impl Freeze for ErrorCode","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl Freeze for statvfs","synthetic":true,"types":[]},{"text":"impl Freeze for max_align_t","synthetic":true,"types":[]},{"text":"impl Freeze for sigaction","synthetic":true,"types":[]},{"text":"impl Freeze for statfs","synthetic":true,"types":[]},{"text":"impl Freeze for flock","synthetic":true,"types":[]},{"text":"impl Freeze for flock64","synthetic":true,"types":[]},{"text":"impl Freeze for siginfo_t","synthetic":true,"types":[]},{"text":"impl Freeze for stack_t","synthetic":true,"types":[]},{"text":"impl Freeze for stat","synthetic":true,"types":[]},{"text":"impl Freeze for stat64","synthetic":true,"types":[]},{"text":"impl Freeze for statfs64","synthetic":true,"types":[]},{"text":"impl Freeze for statvfs64","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Freeze for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Freeze for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Freeze for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Freeze for user_regs_struct","synthetic":true,"types":[]},{"text":"impl Freeze for user","synthetic":true,"types":[]},{"text":"impl Freeze for mcontext_t","synthetic":true,"types":[]},{"text":"impl Freeze for ipc_perm","synthetic":true,"types":[]},{"text":"impl Freeze for shmid_ds","synthetic":true,"types":[]},{"text":"impl Freeze for termios2","synthetic":true,"types":[]},{"text":"impl Freeze for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Freeze for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl Freeze for ucontext_t","synthetic":true,"types":[]},{"text":"impl Freeze for sigset_t","synthetic":true,"types":[]},{"text":"impl Freeze for sysinfo","synthetic":true,"types":[]},{"text":"impl Freeze for msqid_ds","synthetic":true,"types":[]},{"text":"impl Freeze for sem_t","synthetic":true,"types":[]},{"text":"impl Freeze for statx","synthetic":true,"types":[]},{"text":"impl Freeze for statx_timestamp","synthetic":true,"types":[]},{"text":"impl Freeze for aiocb","synthetic":true,"types":[]},{"text":"impl Freeze for __exit_status","synthetic":true,"types":[]},{"text":"impl Freeze for __timeval","synthetic":true,"types":[]},{"text":"impl Freeze for glob64_t","synthetic":true,"types":[]},{"text":"impl Freeze for msghdr","synthetic":true,"types":[]},{"text":"impl Freeze for cmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for termios","synthetic":true,"types":[]},{"text":"impl Freeze for mallinfo","synthetic":true,"types":[]},{"text":"impl Freeze for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Freeze for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Freeze for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Freeze for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Freeze for nlattr","synthetic":true,"types":[]},{"text":"impl Freeze for rtentry","synthetic":true,"types":[]},{"text":"impl Freeze for timex","synthetic":true,"types":[]},{"text":"impl Freeze for ntptimeval","synthetic":true,"types":[]},{"text":"impl Freeze for regex_t","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Freeze for utmpx","synthetic":true,"types":[]},{"text":"impl Freeze for fpos64_t","synthetic":true,"types":[]},{"text":"impl Freeze for rlimit64","synthetic":true,"types":[]},{"text":"impl Freeze for glob_t","synthetic":true,"types":[]},{"text":"impl Freeze for passwd","synthetic":true,"types":[]},{"text":"impl Freeze for spwd","synthetic":true,"types":[]},{"text":"impl Freeze for dqblk","synthetic":true,"types":[]},{"text":"impl Freeze for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Freeze for itimerspec","synthetic":true,"types":[]},{"text":"impl Freeze for fsid_t","synthetic":true,"types":[]},{"text":"impl Freeze for packet_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for cpu_set_t","synthetic":true,"types":[]},{"text":"impl Freeze for if_nameindex","synthetic":true,"types":[]},{"text":"impl Freeze for msginfo","synthetic":true,"types":[]},{"text":"impl Freeze for sembuf","synthetic":true,"types":[]},{"text":"impl Freeze for input_event","synthetic":true,"types":[]},{"text":"impl Freeze for input_id","synthetic":true,"types":[]},{"text":"impl Freeze for input_absinfo","synthetic":true,"types":[]},{"text":"impl Freeze for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Freeze for input_mask","synthetic":true,"types":[]},{"text":"impl Freeze for ff_replay","synthetic":true,"types":[]},{"text":"impl Freeze for ff_trigger","synthetic":true,"types":[]},{"text":"impl Freeze for ff_envelope","synthetic":true,"types":[]},{"text":"impl Freeze for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_effect","synthetic":true,"types":[]},{"text":"impl Freeze for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Freeze for ucred","synthetic":true,"types":[]},{"text":"impl Freeze for mntent","synthetic":true,"types":[]},{"text":"impl Freeze for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Freeze for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Freeze for arpd_request","synthetic":true,"types":[]},{"text":"impl Freeze for inotify_event","synthetic":true,"types":[]},{"text":"impl Freeze for fanotify_response","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Freeze for regmatch_t","synthetic":true,"types":[]},{"text":"impl Freeze for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Freeze for __c_anonymous_sockaddr_can_tp","synthetic":true,"types":[]},{"text":"impl Freeze for __c_anonymous_sockaddr_can_j1939","synthetic":true,"types":[]},{"text":"impl Freeze for can_filter","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Freeze for dirent","synthetic":true,"types":[]},{"text":"impl Freeze for dirent64","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Freeze for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Freeze for mq_attr","synthetic":true,"types":[]},{"text":"impl Freeze for __c_anonymous_sockaddr_can_can_addr","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_can","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Freeze for can_frame","synthetic":true,"types":[]},{"text":"impl Freeze for canfd_frame","synthetic":true,"types":[]},{"text":"impl Freeze for timezone","synthetic":true,"types":[]},{"text":"impl Freeze for in_addr","synthetic":true,"types":[]},{"text":"impl Freeze for ip_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl Freeze for addrinfo","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Freeze for fd_set","synthetic":true,"types":[]},{"text":"impl Freeze for tm","synthetic":true,"types":[]},{"text":"impl Freeze for sched_param","synthetic":true,"types":[]},{"text":"impl Freeze for Dl_info","synthetic":true,"types":[]},{"text":"impl Freeze for lconv","synthetic":true,"types":[]},{"text":"impl Freeze for in_pktinfo","synthetic":true,"types":[]},{"text":"impl Freeze for ifaddrs","synthetic":true,"types":[]},{"text":"impl Freeze for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Freeze for arpreq","synthetic":true,"types":[]},{"text":"impl Freeze for arpreq_old","synthetic":true,"types":[]},{"text":"impl Freeze for arphdr","synthetic":true,"types":[]},{"text":"impl Freeze for mmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for epoll_event","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Freeze for utsname","synthetic":true,"types":[]},{"text":"impl Freeze for sigevent","synthetic":true,"types":[]},{"text":"impl Freeze for in6_addr","synthetic":true,"types":[]},{"text":"impl Freeze for DIR","synthetic":true,"types":[]},{"text":"impl Freeze for group","synthetic":true,"types":[]},{"text":"impl Freeze for utimbuf","synthetic":true,"types":[]},{"text":"impl Freeze for timeval","synthetic":true,"types":[]},{"text":"impl Freeze for timespec","synthetic":true,"types":[]},{"text":"impl Freeze for rlimit","synthetic":true,"types":[]},{"text":"impl Freeze for rusage","synthetic":true,"types":[]},{"text":"impl Freeze for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for hostent","synthetic":true,"types":[]},{"text":"impl Freeze for iovec","synthetic":true,"types":[]},{"text":"impl Freeze for pollfd","synthetic":true,"types":[]},{"text":"impl Freeze for winsize","synthetic":true,"types":[]},{"text":"impl Freeze for linger","synthetic":true,"types":[]},{"text":"impl Freeze for sigval","synthetic":true,"types":[]},{"text":"impl Freeze for itimerval","synthetic":true,"types":[]},{"text":"impl Freeze for tms","synthetic":true,"types":[]},{"text":"impl Freeze for servent","synthetic":true,"types":[]},{"text":"impl Freeze for protoent","synthetic":true,"types":[]},{"text":"impl Freeze for FILE","synthetic":true,"types":[]},{"text":"impl Freeze for fpos_t","synthetic":true,"types":[]}];
implementors["libloading"] = [{"text":"impl Freeze for Library","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Symbol&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Library","synthetic":true,"types":[]},{"text":"impl&lt;'lib, T&gt; Freeze for Symbol&lt;'lib, T&gt;","synthetic":true,"types":[]}];
implementors["linked_hash_map"] = [{"text":"impl&lt;K, V, S&gt; Freeze for LinkedHashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for IntoIter&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for Entries&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for Entry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for OccupiedEntry&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["log"] = [{"text":"impl Freeze for Level","synthetic":true,"types":[]},{"text":"impl Freeze for LevelFilter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Freeze for ParseLevelError","synthetic":true,"types":[]}];
implementors["md5"] = [{"text":"impl Freeze for Digest","synthetic":true,"types":[]},{"text":"impl Freeze for Context","synthetic":true,"types":[]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Freeze for Memchr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Memchr2&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Memchr3&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["mime"] = [{"text":"impl Freeze for Mime","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for FromStrError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Params&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["mime_guess"] = [{"text":"impl Freeze for MimeGuess","synthetic":true,"types":[]},{"text":"impl Freeze for Iter","synthetic":true,"types":[]},{"text":"impl Freeze for IterRaw","synthetic":true,"types":[]}];
implementors["miniz_oxide"] = [{"text":"impl Freeze for CompressionStrategy","synthetic":true,"types":[]},{"text":"impl Freeze for TDEFLFlush","synthetic":true,"types":[]},{"text":"impl Freeze for TDEFLStatus","synthetic":true,"types":[]},{"text":"impl Freeze for CompressorOxide","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CallbackFunc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CompressionLevel","synthetic":true,"types":[]},{"text":"impl Freeze for DecompressorOxide","synthetic":true,"types":[]},{"text":"impl Freeze for InflateState","synthetic":true,"types":[]},{"text":"impl Freeze for TINFLStatus","synthetic":true,"types":[]},{"text":"impl Freeze for MZFlush","synthetic":true,"types":[]},{"text":"impl Freeze for MZStatus","synthetic":true,"types":[]},{"text":"impl Freeze for MZError","synthetic":true,"types":[]},{"text":"impl Freeze for DataFormat","synthetic":true,"types":[]},{"text":"impl Freeze for StreamResult","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl Freeze for Interest","synthetic":true,"types":[]},{"text":"impl !Freeze for Poll","synthetic":true,"types":[]},{"text":"impl !Freeze for Registry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SourceFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SocketAddr","synthetic":true,"types":[]},{"text":"impl !Freeze for Sender","synthetic":true,"types":[]},{"text":"impl !Freeze for Receiver","synthetic":true,"types":[]},{"text":"impl Freeze for Token","synthetic":true,"types":[]},{"text":"impl Freeze for Waker","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for Events","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for TcpListener","synthetic":true,"types":[]},{"text":"impl Freeze for TcpSocket","synthetic":true,"types":[]},{"text":"impl Freeze for TcpKeepalive","synthetic":true,"types":[]},{"text":"impl !Freeze for TcpStream","synthetic":true,"types":[]},{"text":"impl !Freeze for UdpSocket","synthetic":true,"types":[]},{"text":"impl !Freeze for UnixDatagram","synthetic":true,"types":[]},{"text":"impl !Freeze for UnixListener","synthetic":true,"types":[]},{"text":"impl !Freeze for UnixStream","synthetic":true,"types":[]}];
implementors["nix"] = [{"text":"impl Freeze for Dir","synthetic":true,"types":[]},{"text":"impl&lt;'d&gt; Freeze for Iter&lt;'d&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Entry","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for Errno","synthetic":true,"types":[]},{"text":"impl Freeze for PosixFadviseAdvice","synthetic":true,"types":[]},{"text":"impl Freeze for AtFlags","synthetic":true,"types":[]},{"text":"impl Freeze for OFlag","synthetic":true,"types":[]},{"text":"impl Freeze for SealFlag","synthetic":true,"types":[]},{"text":"impl Freeze for FdFlag","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FcntlArg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for FlockArg","synthetic":true,"types":[]},{"text":"impl Freeze for SpliceFFlags","synthetic":true,"types":[]},{"text":"impl Freeze for FallocateFlags","synthetic":true,"types":[]},{"text":"impl Freeze for InterfaceAddress","synthetic":true,"types":[]},{"text":"impl Freeze for InterfaceAddressIterator","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleInitFlags","synthetic":true,"types":[]},{"text":"impl Freeze for DeleteModuleFlags","synthetic":true,"types":[]},{"text":"impl Freeze for MsFlags","synthetic":true,"types":[]},{"text":"impl Freeze for MntFlags","synthetic":true,"types":[]},{"text":"impl Freeze for MQ_OFlag","synthetic":true,"types":[]},{"text":"impl Freeze for FdFlag","synthetic":true,"types":[]},{"text":"impl Freeze for MqAttr","synthetic":true,"types":[]},{"text":"impl Freeze for InterfaceFlags","synthetic":true,"types":[]},{"text":"impl Freeze for PollFd","synthetic":true,"types":[]},{"text":"impl Freeze for PollFlags","synthetic":true,"types":[]},{"text":"impl Freeze for OpenptyResult","synthetic":true,"types":[]},{"text":"impl Freeze for ForkptyResult","synthetic":true,"types":[]},{"text":"impl Freeze for PtyMaster","synthetic":true,"types":[]},{"text":"impl Freeze for CloneFlags","synthetic":true,"types":[]},{"text":"impl Freeze for CpuSet","synthetic":true,"types":[]},{"text":"impl Freeze for AioFsyncMode","synthetic":true,"types":[]},{"text":"impl Freeze for LioOpcode","synthetic":true,"types":[]},{"text":"impl Freeze for LioMode","synthetic":true,"types":[]},{"text":"impl Freeze for AioCancelStat","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Buffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for AioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for LioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for EpollFlags","synthetic":true,"types":[]},{"text":"impl Freeze for EpollOp","synthetic":true,"types":[]},{"text":"impl Freeze for EpollCreateFlags","synthetic":true,"types":[]},{"text":"impl Freeze for EpollEvent","synthetic":true,"types":[]},{"text":"impl Freeze for EfdFlags","synthetic":true,"types":[]},{"text":"impl Freeze for MemFdCreateFlag","synthetic":true,"types":[]},{"text":"impl Freeze for ProtFlags","synthetic":true,"types":[]},{"text":"impl Freeze for MapFlags","synthetic":true,"types":[]},{"text":"impl Freeze for MmapAdvise","synthetic":true,"types":[]},{"text":"impl Freeze for MsFlags","synthetic":true,"types":[]},{"text":"impl Freeze for MlockAllFlags","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for Options","synthetic":true,"types":[]},{"text":"impl Freeze for QuotaType","synthetic":true,"types":[]},{"text":"impl Freeze for QuotaFmt","synthetic":true,"types":[]},{"text":"impl Freeze for QuotaValidFlags","synthetic":true,"types":[]},{"text":"impl Freeze for Dqblk","synthetic":true,"types":[]},{"text":"impl Freeze for RebootMode","synthetic":true,"types":[]},{"text":"impl Freeze for FdSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Fds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SigEvent","synthetic":true,"types":[]},{"text":"impl Freeze for Signal","synthetic":true,"types":[]},{"text":"impl Freeze for SignalIterator","synthetic":true,"types":[]},{"text":"impl Freeze for SaFlags","synthetic":true,"types":[]},{"text":"impl Freeze for SigmaskHow","synthetic":true,"types":[]},{"text":"impl Freeze for SigSet","synthetic":true,"types":[]},{"text":"impl Freeze for SigHandler","synthetic":true,"types":[]},{"text":"impl Freeze for SigAction","synthetic":true,"types":[]},{"text":"impl Freeze for SigevNotify","synthetic":true,"types":[]},{"text":"impl Freeze for SfdFlags","synthetic":true,"types":[]},{"text":"impl Freeze for SignalFd","synthetic":true,"types":[]},{"text":"impl Freeze for NetlinkAddr","synthetic":true,"types":[]},{"text":"impl Freeze for AlgAddr","synthetic":true,"types":[]},{"text":"impl Freeze for LinkAddr","synthetic":true,"types":[]},{"text":"impl Freeze for VsockAddr","synthetic":true,"types":[]},{"text":"impl Freeze for AddressFamily","synthetic":true,"types":[]},{"text":"impl Freeze for InetAddr","synthetic":true,"types":[]},{"text":"impl Freeze for IpAddr","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv4Addr","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6Addr","synthetic":true,"types":[]},{"text":"impl Freeze for UnixAddr","synthetic":true,"types":[]},{"text":"impl Freeze for SockAddr","synthetic":true,"types":[]},{"text":"impl Freeze for ReuseAddr","synthetic":true,"types":[]},{"text":"impl Freeze for ReusePort","synthetic":true,"types":[]},{"text":"impl Freeze for TcpNoDelay","synthetic":true,"types":[]},{"text":"impl Freeze for Linger","synthetic":true,"types":[]},{"text":"impl Freeze for IpAddMembership","synthetic":true,"types":[]},{"text":"impl Freeze for IpDropMembership","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6AddMembership","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6DropMembership","synthetic":true,"types":[]},{"text":"impl Freeze for IpMulticastTtl","synthetic":true,"types":[]},{"text":"impl Freeze for IpMulticastLoop","synthetic":true,"types":[]},{"text":"impl Freeze for ReceiveTimeout","synthetic":true,"types":[]},{"text":"impl Freeze for SendTimeout","synthetic":true,"types":[]},{"text":"impl Freeze for Broadcast","synthetic":true,"types":[]},{"text":"impl Freeze for OobInline","synthetic":true,"types":[]},{"text":"impl Freeze for SocketError","synthetic":true,"types":[]},{"text":"impl Freeze for KeepAlive","synthetic":true,"types":[]},{"text":"impl Freeze for PeerCredentials","synthetic":true,"types":[]},{"text":"impl Freeze for TcpKeepIdle","synthetic":true,"types":[]},{"text":"impl Freeze for TcpKeepCount","synthetic":true,"types":[]},{"text":"impl Freeze for TcpKeepInterval","synthetic":true,"types":[]},{"text":"impl Freeze for RcvBuf","synthetic":true,"types":[]},{"text":"impl Freeze for SndBuf","synthetic":true,"types":[]},{"text":"impl Freeze for RcvBufForce","synthetic":true,"types":[]},{"text":"impl Freeze for SndBufForce","synthetic":true,"types":[]},{"text":"impl Freeze for SockType","synthetic":true,"types":[]},{"text":"impl Freeze for AcceptConn","synthetic":true,"types":[]},{"text":"impl Freeze for BindToDevice","synthetic":true,"types":[]},{"text":"impl Freeze for OriginalDst","synthetic":true,"types":[]},{"text":"impl Freeze for ReceiveTimestamp","synthetic":true,"types":[]},{"text":"impl Freeze for IpTransparent","synthetic":true,"types":[]},{"text":"impl Freeze for Mark","synthetic":true,"types":[]},{"text":"impl Freeze for PassCred","synthetic":true,"types":[]},{"text":"impl Freeze for TcpCongestion","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv4PacketInfo","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6RecvPacketInfo","synthetic":true,"types":[]},{"text":"impl Freeze for UdpGsoSegment","synthetic":true,"types":[]},{"text":"impl Freeze for UdpGroSegment","synthetic":true,"types":[]},{"text":"impl Freeze for AlgSetAeadAuthSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for AlgSetKey&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SockType","synthetic":true,"types":[]},{"text":"impl Freeze for SockProtocol","synthetic":true,"types":[]},{"text":"impl Freeze for SockFlag","synthetic":true,"types":[]},{"text":"impl Freeze for MsgFlags","synthetic":true,"types":[]},{"text":"impl Freeze for UnixCredentials","synthetic":true,"types":[]},{"text":"impl Freeze for IpMembershipRequest","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6MembershipRequest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for RecvMsg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CmsgIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ControlMessageOwned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ControlMessage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, C&gt; Freeze for SendMmsgData&lt;'a, I, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Freeze for RecvMmsgData&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for SockLevel","synthetic":true,"types":[]},{"text":"impl Freeze for Shutdown","synthetic":true,"types":[]},{"text":"impl Freeze for SFlag","synthetic":true,"types":[]},{"text":"impl Freeze for Mode","synthetic":true,"types":[]},{"text":"impl Freeze for FchmodatFlags","synthetic":true,"types":[]},{"text":"impl Freeze for UtimensatFlags","synthetic":true,"types":[]},{"text":"impl Freeze for Statfs","synthetic":true,"types":[]},{"text":"impl Freeze for FsType","synthetic":true,"types":[]},{"text":"impl Freeze for FsFlags","synthetic":true,"types":[]},{"text":"impl Freeze for Statvfs","synthetic":true,"types":[]},{"text":"impl Freeze for SysInfo","synthetic":true,"types":[]},{"text":"impl !Freeze for Termios","synthetic":true,"types":[]},{"text":"impl Freeze for BaudRate","synthetic":true,"types":[]},{"text":"impl Freeze for SetArg","synthetic":true,"types":[]},{"text":"impl Freeze for FlushArg","synthetic":true,"types":[]},{"text":"impl Freeze for FlowArg","synthetic":true,"types":[]},{"text":"impl Freeze for SpecialCharacterIndices","synthetic":true,"types":[]},{"text":"impl Freeze for InputFlags","synthetic":true,"types":[]},{"text":"impl Freeze for OutputFlags","synthetic":true,"types":[]},{"text":"impl Freeze for ControlFlags","synthetic":true,"types":[]},{"text":"impl Freeze for LocalFlags","synthetic":true,"types":[]},{"text":"impl Freeze for TimeSpec","synthetic":true,"types":[]},{"text":"impl Freeze for TimeVal","synthetic":true,"types":[]},{"text":"impl Freeze for RemoteIoVec","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IoVec&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for UtsName","synthetic":true,"types":[]},{"text":"impl Freeze for WaitPidFlag","synthetic":true,"types":[]},{"text":"impl Freeze for WaitStatus","synthetic":true,"types":[]},{"text":"impl Freeze for AddWatchFlags","synthetic":true,"types":[]},{"text":"impl Freeze for InitFlags","synthetic":true,"types":[]},{"text":"impl Freeze for Inotify","synthetic":true,"types":[]},{"text":"impl Freeze for WatchDescriptor","synthetic":true,"types":[]},{"text":"impl Freeze for InotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for TimerFd","synthetic":true,"types":[]},{"text":"impl Freeze for ClockId","synthetic":true,"types":[]},{"text":"impl Freeze for TimerFlags","synthetic":true,"types":[]},{"text":"impl Freeze for TimerSetTimeFlags","synthetic":true,"types":[]},{"text":"impl Freeze for Expiration","synthetic":true,"types":[]},{"text":"impl Freeze for ClockId","synthetic":true,"types":[]},{"text":"impl Freeze for UContext","synthetic":true,"types":[]},{"text":"impl Freeze for Uid","synthetic":true,"types":[]},{"text":"impl Freeze for Gid","synthetic":true,"types":[]},{"text":"impl Freeze for Pid","synthetic":true,"types":[]},{"text":"impl Freeze for ForkResult","synthetic":true,"types":[]},{"text":"impl Freeze for FchownatFlags","synthetic":true,"types":[]},{"text":"impl Freeze for Whence","synthetic":true,"types":[]},{"text":"impl Freeze for LinkatFlags","synthetic":true,"types":[]},{"text":"impl Freeze for UnlinkatFlags","synthetic":true,"types":[]},{"text":"impl Freeze for PathconfVar","synthetic":true,"types":[]},{"text":"impl Freeze for SysconfVar","synthetic":true,"types":[]},{"text":"impl Freeze for AccessFlags","synthetic":true,"types":[]},{"text":"impl Freeze for User","synthetic":true,"types":[]},{"text":"impl Freeze for Group","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["nom"] = [{"text":"impl&lt;I&gt; Freeze for Error&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for VerboseError&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for VerboseErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for Needed","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Err&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, G, O1&gt; Freeze for Map&lt;F, G, O1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, G, O1&gt; Freeze for FlatMap&lt;F, G, O1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, G, O1&gt; Freeze for AndThen&lt;F, G, O1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, G&gt; Freeze for And&lt;F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, G&gt; Freeze for Or&lt;F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, O1, O2, E1, E2&gt; Freeze for Into&lt;F, O1, O2, E1, E2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for CompareResult","synthetic":true,"types":[]},{"text":"impl&lt;I, E, F&gt; Freeze for ParserIterator&lt;I, E, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Endianness","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Freeze for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T&gt; Freeze for Ratio&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ParseRatioError","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Freeze for FloatErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for ParseFloatError","synthetic":true,"types":[]}];
implementors["oauth2"] = [{"text":"impl Freeze for BasicTokenType","synthetic":true,"types":[]},{"text":"impl Freeze for BasicErrorResponseType","synthetic":true,"types":[]},{"text":"impl Freeze for EmptyExtraDeviceAuthorizationFields","synthetic":true,"types":[]},{"text":"impl&lt;EF&gt; Freeze for DeviceAuthorizationResponse&lt;EF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EF: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for DeviceCodeErrorResponseType","synthetic":true,"types":[]},{"text":"impl Freeze for StandardRevocableToken","synthetic":true,"types":[]},{"text":"impl Freeze for RevocationErrorResponseType","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Error&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ClientId","synthetic":true,"types":[]},{"text":"impl Freeze for AuthUrl","synthetic":true,"types":[]},{"text":"impl Freeze for TokenUrl","synthetic":true,"types":[]},{"text":"impl Freeze for RedirectUrl","synthetic":true,"types":[]},{"text":"impl Freeze for IntrospectionUrl","synthetic":true,"types":[]},{"text":"impl Freeze for RevocationUrl","synthetic":true,"types":[]},{"text":"impl Freeze for DeviceAuthorizationUrl","synthetic":true,"types":[]},{"text":"impl Freeze for EndUserVerificationUrl","synthetic":true,"types":[]},{"text":"impl Freeze for ResponseType","synthetic":true,"types":[]},{"text":"impl Freeze for ResourceOwnerUsername","synthetic":true,"types":[]},{"text":"impl Freeze for Scope","synthetic":true,"types":[]},{"text":"impl Freeze for PkceCodeChallengeMethod","synthetic":true,"types":[]},{"text":"impl Freeze for PkceCodeVerifier","synthetic":true,"types":[]},{"text":"impl Freeze for PkceCodeChallenge","synthetic":true,"types":[]},{"text":"impl Freeze for ClientSecret","synthetic":true,"types":[]},{"text":"impl Freeze for CsrfToken","synthetic":true,"types":[]},{"text":"impl Freeze for AuthorizationCode","synthetic":true,"types":[]},{"text":"impl Freeze for RefreshToken","synthetic":true,"types":[]},{"text":"impl Freeze for AccessToken","synthetic":true,"types":[]},{"text":"impl Freeze for ResourceOwnerPassword","synthetic":true,"types":[]},{"text":"impl Freeze for DeviceCode","synthetic":true,"types":[]},{"text":"impl Freeze for UserCode","synthetic":true,"types":[]},{"text":"impl Freeze for ConfigurationError","synthetic":true,"types":[]},{"text":"impl Freeze for AuthType","synthetic":true,"types":[]},{"text":"impl&lt;TE, TR, TT, TIR, RT, TRE&gt; Freeze for Client&lt;TE, TR, TT, TIR, RT, TRE&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for AuthorizationRequest&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for HttpRequest","synthetic":true,"types":[]},{"text":"impl Freeze for HttpResponse","synthetic":true,"types":[]},{"text":"impl&lt;'a, TE, TR, TT&gt; Freeze for CodeTokenRequest&lt;'a, TE, TR, TT&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TE, TR, TT&gt; Freeze for RefreshTokenRequest&lt;'a, TE, TR, TT&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TE, TR, TT&gt; Freeze for PasswordTokenRequest&lt;'a, TE, TR, TT&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TE, TR, TT&gt; Freeze for ClientCredentialsTokenRequest&lt;'a, TE, TR, TT&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TE, TIR, TT&gt; Freeze for IntrospectionRequest&lt;'a, TE, TIR, TT&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, RT, TE&gt; Freeze for RevocationRequest&lt;'a, RT, TE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RT: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TE&gt; Freeze for DeviceAuthorizationRequest&lt;'a, TE&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, TR, TT, EF&gt; Freeze for DeviceAccessTokenRequest&lt;'a, 'b, TR, TT, EF&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for EmptyExtraTokenFields","synthetic":true,"types":[]},{"text":"impl&lt;EF, TT&gt; Freeze for StandardTokenResponse&lt;EF, TT&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EF: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;TT: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;EF, TT&gt; Freeze for StandardTokenIntrospectionResponse&lt;EF, TT&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EF: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;TT: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for StandardErrorResponse&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;RE, T&gt; Freeze for RequestTokenError&lt;RE, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RE: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; !Freeze for OnceCell&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, F&nbsp;=&nbsp;fn() -&gt; T&gt; !Freeze for Lazy&lt;T, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for OnceCell&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, F&nbsp;=&nbsp;fn() -&gt; T&gt; !Freeze for Lazy&lt;T, F&gt;","synthetic":true,"types":[]}];
implementors["parking"] = [{"text":"impl Freeze for Parker","synthetic":true,"types":[]},{"text":"impl Freeze for Unparker","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl Freeze for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["phf"] = [{"text":"impl&lt;K, V&gt; Freeze for Map&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Entries&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Set&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for OrderedMap&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Entries&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for OrderedSet&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["polling"] = [{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl !Freeze for Poller","synthetic":true,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Freeze for YesS3","synthetic":true,"types":[]},{"text":"impl Freeze for NoS3","synthetic":true,"types":[]},{"text":"impl Freeze for YesS4","synthetic":true,"types":[]},{"text":"impl Freeze for NoS4","synthetic":true,"types":[]},{"text":"impl Freeze for YesA1","synthetic":true,"types":[]},{"text":"impl Freeze for NoA1","synthetic":true,"types":[]},{"text":"impl Freeze for YesA2","synthetic":true,"types":[]},{"text":"impl Freeze for NoA2","synthetic":true,"types":[]},{"text":"impl Freeze for YesNI","synthetic":true,"types":[]},{"text":"impl Freeze for NoNI","synthetic":true,"types":[]},{"text":"impl&lt;S3, S4, NI&gt; Freeze for SseMachine&lt;S3, S4, NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Freeze for Avx2Machine&lt;NI&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for vec128_storage","synthetic":true,"types":[]},{"text":"impl Freeze for vec256_storage","synthetic":true,"types":[]},{"text":"impl Freeze for vec512_storage","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Freeze for IntoIter","synthetic":true,"types":[]},{"text":"impl Freeze for TokenStream","synthetic":true,"types":[]},{"text":"impl Freeze for LexError","synthetic":true,"types":[]},{"text":"impl Freeze for Span","synthetic":true,"types":[]},{"text":"impl Freeze for TokenTree","synthetic":true,"types":[]},{"text":"impl Freeze for Group","synthetic":true,"types":[]},{"text":"impl Freeze for Delimiter","synthetic":true,"types":[]},{"text":"impl Freeze for Punct","synthetic":true,"types":[]},{"text":"impl Freeze for Spacing","synthetic":true,"types":[]},{"text":"impl Freeze for Ident","synthetic":true,"types":[]},{"text":"impl Freeze for Literal","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl Freeze for Bernoulli","synthetic":true,"types":[]},{"text":"impl Freeze for BernoulliError","synthetic":true,"types":[]},{"text":"impl Freeze for Binomial","synthetic":true,"types":[]},{"text":"impl Freeze for Cauchy","synthetic":true,"types":[]},{"text":"impl Freeze for Dirichlet","synthetic":true,"types":[]},{"text":"impl Freeze for Exp1","synthetic":true,"types":[]},{"text":"impl Freeze for Exp","synthetic":true,"types":[]},{"text":"impl Freeze for Gamma","synthetic":true,"types":[]},{"text":"impl Freeze for ChiSquared","synthetic":true,"types":[]},{"text":"impl Freeze for FisherF","synthetic":true,"types":[]},{"text":"impl Freeze for StudentT","synthetic":true,"types":[]},{"text":"impl Freeze for Beta","synthetic":true,"types":[]},{"text":"impl Freeze for StandardNormal","synthetic":true,"types":[]},{"text":"impl Freeze for Normal","synthetic":true,"types":[]},{"text":"impl Freeze for LogNormal","synthetic":true,"types":[]},{"text":"impl Freeze for Pareto","synthetic":true,"types":[]},{"text":"impl Freeze for Poisson","synthetic":true,"types":[]},{"text":"impl Freeze for Triangular","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Freeze for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Freeze for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Freeze for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for UniformDuration","synthetic":true,"types":[]},{"text":"impl Freeze for UnitCircle","synthetic":true,"types":[]},{"text":"impl Freeze for UnitSphereSurface","synthetic":true,"types":[]},{"text":"impl Freeze for Weibull","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as SampleUniform&gt;::Sampler: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Freeze for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for WeightedError","synthetic":true,"types":[]},{"text":"impl Freeze for OpenClosed01","synthetic":true,"types":[]},{"text":"impl Freeze for Open01","synthetic":true,"types":[]},{"text":"impl Freeze for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; Freeze for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Standard","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; Freeze for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for EntropyRng","synthetic":true,"types":[]},{"text":"impl Freeze for StepRng","synthetic":true,"types":[]},{"text":"impl Freeze for StdRng","synthetic":true,"types":[]},{"text":"impl Freeze for ThreadRng","synthetic":true,"types":[]},{"text":"impl Freeze for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for IndexVecIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; Freeze for SliceChooseIter&lt;'a, S, T&gt;","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl Freeze for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl Freeze for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl Freeze for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl Freeze for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl Freeze for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl Freeze for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Freeze for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Freeze for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for OsRng","synthetic":true,"types":[]}];
implementors["regex"] = [{"text":"impl Freeze for RegexBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Freeze for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Freeze for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Freeze for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Freeze for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Freeze for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Freeze for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Freeze for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; Freeze for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReplacerRef&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Freeze for NoExpand&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for RegexSet","synthetic":true,"types":[]},{"text":"impl Freeze for SetMatches","synthetic":true,"types":[]},{"text":"impl Freeze for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for RegexBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl !Freeze for RegexSet","synthetic":true,"types":[]},{"text":"impl Freeze for SetMatches","synthetic":true,"types":[]},{"text":"impl Freeze for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Freeze for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Freeze for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Freeze for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Freeze for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Freeze for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; Freeze for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Freeze for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Freeze for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReplacerRef&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Freeze for NoExpand&lt;'t&gt;","synthetic":true,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Freeze for ParserBuilder","synthetic":true,"types":[]},{"text":"impl !Freeze for Parser","synthetic":true,"types":[]},{"text":"impl Freeze for Printer","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for Span","synthetic":true,"types":[]},{"text":"impl Freeze for Position","synthetic":true,"types":[]},{"text":"impl Freeze for WithComments","synthetic":true,"types":[]},{"text":"impl Freeze for Comment","synthetic":true,"types":[]},{"text":"impl Freeze for Ast","synthetic":true,"types":[]},{"text":"impl Freeze for Alternation","synthetic":true,"types":[]},{"text":"impl Freeze for Concat","synthetic":true,"types":[]},{"text":"impl Freeze for Literal","synthetic":true,"types":[]},{"text":"impl Freeze for LiteralKind","synthetic":true,"types":[]},{"text":"impl Freeze for SpecialLiteralKind","synthetic":true,"types":[]},{"text":"impl Freeze for HexLiteralKind","synthetic":true,"types":[]},{"text":"impl Freeze for Class","synthetic":true,"types":[]},{"text":"impl Freeze for ClassPerl","synthetic":true,"types":[]},{"text":"impl Freeze for ClassPerlKind","synthetic":true,"types":[]},{"text":"impl Freeze for ClassAscii","synthetic":true,"types":[]},{"text":"impl Freeze for ClassAsciiKind","synthetic":true,"types":[]},{"text":"impl Freeze for ClassUnicode","synthetic":true,"types":[]},{"text":"impl Freeze for ClassUnicodeKind","synthetic":true,"types":[]},{"text":"impl Freeze for ClassUnicodeOpKind","synthetic":true,"types":[]},{"text":"impl Freeze for ClassBracketed","synthetic":true,"types":[]},{"text":"impl Freeze for ClassSet","synthetic":true,"types":[]},{"text":"impl Freeze for ClassSetItem","synthetic":true,"types":[]},{"text":"impl Freeze for ClassSetRange","synthetic":true,"types":[]},{"text":"impl Freeze for ClassSetUnion","synthetic":true,"types":[]},{"text":"impl Freeze for ClassSetBinaryOp","synthetic":true,"types":[]},{"text":"impl Freeze for ClassSetBinaryOpKind","synthetic":true,"types":[]},{"text":"impl Freeze for Assertion","synthetic":true,"types":[]},{"text":"impl Freeze for AssertionKind","synthetic":true,"types":[]},{"text":"impl Freeze for Repetition","synthetic":true,"types":[]},{"text":"impl Freeze for RepetitionOp","synthetic":true,"types":[]},{"text":"impl Freeze for RepetitionKind","synthetic":true,"types":[]},{"text":"impl Freeze for RepetitionRange","synthetic":true,"types":[]},{"text":"impl Freeze for Group","synthetic":true,"types":[]},{"text":"impl Freeze for GroupKind","synthetic":true,"types":[]},{"text":"impl Freeze for CaptureName","synthetic":true,"types":[]},{"text":"impl Freeze for SetFlags","synthetic":true,"types":[]},{"text":"impl Freeze for Flags","synthetic":true,"types":[]},{"text":"impl Freeze for FlagsItem","synthetic":true,"types":[]},{"text":"impl Freeze for FlagsItemKind","synthetic":true,"types":[]},{"text":"impl Freeze for Flag","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Literals","synthetic":true,"types":[]},{"text":"impl Freeze for Literal","synthetic":true,"types":[]},{"text":"impl Freeze for Printer","synthetic":true,"types":[]},{"text":"impl Freeze for TranslatorBuilder","synthetic":true,"types":[]},{"text":"impl !Freeze for Translator","synthetic":true,"types":[]},{"text":"impl Freeze for CaseFoldError","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for Hir","synthetic":true,"types":[]},{"text":"impl Freeze for HirKind","synthetic":true,"types":[]},{"text":"impl Freeze for Literal","synthetic":true,"types":[]},{"text":"impl Freeze for Class","synthetic":true,"types":[]},{"text":"impl Freeze for ClassUnicode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ClassUnicodeIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ClassUnicodeRange","synthetic":true,"types":[]},{"text":"impl Freeze for ClassBytes","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ClassBytesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ClassBytesRange","synthetic":true,"types":[]},{"text":"impl Freeze for Anchor","synthetic":true,"types":[]},{"text":"impl Freeze for WordBoundary","synthetic":true,"types":[]},{"text":"impl Freeze for Group","synthetic":true,"types":[]},{"text":"impl Freeze for GroupKind","synthetic":true,"types":[]},{"text":"impl Freeze for Repetition","synthetic":true,"types":[]},{"text":"impl Freeze for RepetitionKind","synthetic":true,"types":[]},{"text":"impl Freeze for RepetitionRange","synthetic":true,"types":[]},{"text":"impl Freeze for ParserBuilder","synthetic":true,"types":[]},{"text":"impl !Freeze for Parser","synthetic":true,"types":[]},{"text":"impl Freeze for UnicodeWordError","synthetic":true,"types":[]},{"text":"impl Freeze for Utf8Sequence","synthetic":true,"types":[]},{"text":"impl Freeze for Utf8Range","synthetic":true,"types":[]},{"text":"impl Freeze for Utf8Sequences","synthetic":true,"types":[]}];
implementors["reqwest"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Form","synthetic":true,"types":[]},{"text":"impl !Freeze for Part","synthetic":true,"types":[]},{"text":"impl !Freeze for Body","synthetic":true,"types":[]},{"text":"impl Freeze for Client","synthetic":true,"types":[]},{"text":"impl Freeze for ClientBuilder","synthetic":true,"types":[]},{"text":"impl !Freeze for Request","synthetic":true,"types":[]},{"text":"impl !Freeze for RequestBuilder","synthetic":true,"types":[]},{"text":"impl !Freeze for Response","synthetic":true,"types":[]},{"text":"impl !Freeze for Body","synthetic":true,"types":[]},{"text":"impl Freeze for Client","synthetic":true,"types":[]},{"text":"impl Freeze for ClientBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Form","synthetic":true,"types":[]},{"text":"impl !Freeze for Part","synthetic":true,"types":[]},{"text":"impl !Freeze for Request","synthetic":true,"types":[]},{"text":"impl !Freeze for RequestBuilder","synthetic":true,"types":[]},{"text":"impl !Freeze for Response","synthetic":true,"types":[]},{"text":"impl !Freeze for Proxy","synthetic":true,"types":[]},{"text":"impl Freeze for Policy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Attempt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Action","synthetic":true,"types":[]},{"text":"impl Freeze for Certificate","synthetic":true,"types":[]},{"text":"impl Freeze for Identity","synthetic":true,"types":[]}];
implementors["ring"] = [{"text":"impl Freeze for TestCase","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for File&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SealingKey","synthetic":true,"types":[]},{"text":"impl Freeze for OpeningKey","synthetic":true,"types":[]},{"text":"impl Freeze for Nonce","synthetic":true,"types":[]},{"text":"impl Freeze for HeaderProtectionKey","synthetic":true,"types":[]},{"text":"impl Freeze for Algorithm","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Freeze for OpeningKey&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Freeze for SealingKey&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for Aad&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for UnboundKey","synthetic":true,"types":[]},{"text":"impl Freeze for LessSafeKey","synthetic":true,"types":[]},{"text":"impl Freeze for Algorithm","synthetic":true,"types":[]},{"text":"impl Freeze for Tag","synthetic":true,"types":[]},{"text":"impl Freeze for Algorithm","synthetic":true,"types":[]},{"text":"impl Freeze for EphemeralPrivateKey","synthetic":true,"types":[]},{"text":"impl Freeze for PublicKey","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for UnparsedPublicKey&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Positive&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Context","synthetic":true,"types":[]},{"text":"impl Freeze for Digest","synthetic":true,"types":[]},{"text":"impl Freeze for Algorithm","synthetic":true,"types":[]},{"text":"impl Freeze for Ed25519KeyPair","synthetic":true,"types":[]},{"text":"impl Freeze for EdDSAParameters","synthetic":true,"types":[]},{"text":"impl Freeze for EcdsaSigningAlgorithm","synthetic":true,"types":[]},{"text":"impl Freeze for EcdsaKeyPair","synthetic":true,"types":[]},{"text":"impl Freeze for EcdsaVerificationAlgorithm","synthetic":true,"types":[]},{"text":"impl Freeze for Unspecified","synthetic":true,"types":[]},{"text":"impl Freeze for KeyRejected","synthetic":true,"types":[]},{"text":"impl Freeze for Algorithm","synthetic":true,"types":[]},{"text":"impl Freeze for Salt","synthetic":true,"types":[]},{"text":"impl Freeze for Prk","synthetic":true,"types":[]},{"text":"impl&lt;'a, L&gt; Freeze for Okm&lt;'a, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Algorithm","synthetic":true,"types":[]},{"text":"impl Freeze for Tag","synthetic":true,"types":[]},{"text":"impl Freeze for Key","synthetic":true,"types":[]},{"text":"impl Freeze for Context","synthetic":true,"types":[]},{"text":"impl Freeze for Algorithm","synthetic":true,"types":[]},{"text":"impl Freeze for Document","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Random&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for SystemRandom","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for RsaPublicKeyComponents&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for RsaKeyPair","synthetic":true,"types":[]},{"text":"impl Freeze for RsaSubjectPublicKey","synthetic":true,"types":[]},{"text":"impl Freeze for RsaParameters","synthetic":true,"types":[]},{"text":"impl Freeze for Signature","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for UnparsedPublicKey&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rustc_hash"] = [{"text":"impl Freeze for FxHasher","synthetic":true,"types":[]}];
implementors["rustls"] = [{"text":"impl Freeze for AlertMessagePayload","synthetic":true,"types":[]},{"text":"impl Freeze for Payload","synthetic":true,"types":[]},{"text":"impl Freeze for PayloadU24","synthetic":true,"types":[]},{"text":"impl Freeze for PayloadU16","synthetic":true,"types":[]},{"text":"impl Freeze for PayloadU8","synthetic":true,"types":[]},{"text":"impl Freeze for ChangeCipherSpecPayload","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for u24","synthetic":true,"types":[]},{"text":"impl Freeze for MessageDeframer","synthetic":true,"types":[]},{"text":"impl Freeze for ProtocolVersion","synthetic":true,"types":[]},{"text":"impl Freeze for HashAlgorithm","synthetic":true,"types":[]},{"text":"impl Freeze for SignatureAlgorithm","synthetic":true,"types":[]},{"text":"impl Freeze for ClientCertificateType","synthetic":true,"types":[]},{"text":"impl Freeze for Compression","synthetic":true,"types":[]},{"text":"impl Freeze for ContentType","synthetic":true,"types":[]},{"text":"impl Freeze for HandshakeType","synthetic":true,"types":[]},{"text":"impl Freeze for AlertLevel","synthetic":true,"types":[]},{"text":"impl Freeze for AlertDescription","synthetic":true,"types":[]},{"text":"impl Freeze for HeartbeatMessageType","synthetic":true,"types":[]},{"text":"impl Freeze for ExtensionType","synthetic":true,"types":[]},{"text":"impl Freeze for ServerNameType","synthetic":true,"types":[]},{"text":"impl Freeze for NamedCurve","synthetic":true,"types":[]},{"text":"impl Freeze for NamedGroup","synthetic":true,"types":[]},{"text":"impl Freeze for CipherSuite","synthetic":true,"types":[]},{"text":"impl Freeze for ECPointFormat","synthetic":true,"types":[]},{"text":"impl Freeze for HeartbeatMode","synthetic":true,"types":[]},{"text":"impl Freeze for ECCurveType","synthetic":true,"types":[]},{"text":"impl Freeze for SignatureScheme","synthetic":true,"types":[]},{"text":"impl Freeze for PSKKeyExchangeMode","synthetic":true,"types":[]},{"text":"impl Freeze for KeyUpdateRequest","synthetic":true,"types":[]},{"text":"impl Freeze for CertificateStatusType","synthetic":true,"types":[]},{"text":"impl Freeze for MessageFragmenter","synthetic":true,"types":[]},{"text":"impl Freeze for Random","synthetic":true,"types":[]},{"text":"impl Freeze for SessionID","synthetic":true,"types":[]},{"text":"impl Freeze for UnknownExtension","synthetic":true,"types":[]},{"text":"impl Freeze for ServerNamePayload","synthetic":true,"types":[]},{"text":"impl Freeze for ServerName","synthetic":true,"types":[]},{"text":"impl Freeze for KeyShareEntry","synthetic":true,"types":[]},{"text":"impl Freeze for PresharedKeyIdentity","synthetic":true,"types":[]},{"text":"impl Freeze for PresharedKeyOffer","synthetic":true,"types":[]},{"text":"impl Freeze for OCSPCertificateStatusRequest","synthetic":true,"types":[]},{"text":"impl Freeze for CertificateStatusRequest","synthetic":true,"types":[]},{"text":"impl Freeze for ClientExtension","synthetic":true,"types":[]},{"text":"impl Freeze for ServerExtension","synthetic":true,"types":[]},{"text":"impl Freeze for ClientHelloPayload","synthetic":true,"types":[]},{"text":"impl Freeze for HelloRetryExtension","synthetic":true,"types":[]},{"text":"impl Freeze for HelloRetryRequest","synthetic":true,"types":[]},{"text":"impl Freeze for ServerHelloPayload","synthetic":true,"types":[]},{"text":"impl Freeze for CertificateExtension","synthetic":true,"types":[]},{"text":"impl Freeze for CertificateEntry","synthetic":true,"types":[]},{"text":"impl Freeze for CertificatePayloadTLS13","synthetic":true,"types":[]},{"text":"impl Freeze for KeyExchangeAlgorithm","synthetic":true,"types":[]},{"text":"impl Freeze for ECParameters","synthetic":true,"types":[]},{"text":"impl Freeze for DigitallySignedStruct","synthetic":true,"types":[]},{"text":"impl Freeze for ClientECDHParams","synthetic":true,"types":[]},{"text":"impl Freeze for ServerECDHParams","synthetic":true,"types":[]},{"text":"impl Freeze for ECDHEServerKeyExchange","synthetic":true,"types":[]},{"text":"impl Freeze for ServerKeyExchangePayload","synthetic":true,"types":[]},{"text":"impl Freeze for CertificateRequestPayload","synthetic":true,"types":[]},{"text":"impl Freeze for CertReqExtension","synthetic":true,"types":[]},{"text":"impl Freeze for CertificateRequestPayloadTLS13","synthetic":true,"types":[]},{"text":"impl Freeze for NewSessionTicketPayload","synthetic":true,"types":[]},{"text":"impl Freeze for NewSessionTicketExtension","synthetic":true,"types":[]},{"text":"impl Freeze for NewSessionTicketPayloadTLS13","synthetic":true,"types":[]},{"text":"impl Freeze for CertificateStatus","synthetic":true,"types":[]},{"text":"impl Freeze for HandshakePayload","synthetic":true,"types":[]},{"text":"impl Freeze for HandshakeMessagePayload","synthetic":true,"types":[]},{"text":"impl Freeze for HandshakeJoiner","synthetic":true,"types":[]},{"text":"impl Freeze for MessagePayload","synthetic":true,"types":[]},{"text":"impl Freeze for Message","synthetic":true,"types":[]},{"text":"impl Freeze for MessageError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BorrowMessage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ClientSessionKey","synthetic":true,"types":[]},{"text":"impl Freeze for ClientSessionValue","synthetic":true,"types":[]},{"text":"impl Freeze for ServerSessionValue","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedTrustAnchor","synthetic":true,"types":[]},{"text":"impl Freeze for RootCertStore","synthetic":true,"types":[]},{"text":"impl Freeze for TLSError","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T:&nbsp;?Sized&gt; Freeze for Stream&lt;'a, S, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; Freeze for StreamOwned&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for HandshakeSignatureValid","synthetic":true,"types":[]},{"text":"impl Freeze for ServerCertVerified","synthetic":true,"types":[]},{"text":"impl Freeze for ClientCertVerified","synthetic":true,"types":[]},{"text":"impl Freeze for WebPKIVerifier","synthetic":true,"types":[]},{"text":"impl Freeze for AllowAnyAuthenticatedClient","synthetic":true,"types":[]},{"text":"impl Freeze for AllowAnyAnonymousOrAuthenticatedClient","synthetic":true,"types":[]},{"text":"impl Freeze for NoClientAuth","synthetic":true,"types":[]},{"text":"impl Freeze for NoClientSessionStorage","synthetic":true,"types":[]},{"text":"impl !Freeze for ClientSessionMemoryCache","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DangerousClientConfig&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ClientConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for WriteEarlyData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ClientSession","synthetic":true,"types":[]},{"text":"impl Freeze for PrivateKey","synthetic":true,"types":[]},{"text":"impl Freeze for Certificate","synthetic":true,"types":[]},{"text":"impl Freeze for NoKeyLog","synthetic":true,"types":[]},{"text":"impl !Freeze for KeyLogFile","synthetic":true,"types":[]},{"text":"impl Freeze for NoServerSessionStorage","synthetic":true,"types":[]},{"text":"impl !Freeze for ServerSessionMemoryCache","synthetic":true,"types":[]},{"text":"impl Freeze for ResolvesServerCertUsingSNI","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ClientHello&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ServerConfig","synthetic":true,"types":[]},{"text":"impl Freeze for ServerSession","synthetic":true,"types":[]},{"text":"impl Freeze for BulkAlgorithm","synthetic":true,"types":[]},{"text":"impl Freeze for SupportedCipherSuite","synthetic":true,"types":[]},{"text":"impl Freeze for Ticketer","synthetic":true,"types":[]},{"text":"impl Freeze for CertifiedKey","synthetic":true,"types":[]},{"text":"impl Freeze for RSASigningKey","synthetic":true,"types":[]}];
implementors["ryu"] = [{"text":"impl Freeze for Buffer","synthetic":true,"types":[]}];
implementors["same_file"] = [{"text":"impl Freeze for Handle","synthetic":true,"types":[]}];
implementors["schemars"] = [{"text":"impl Freeze for SchemaSettings","synthetic":true,"types":[]},{"text":"impl Freeze for SchemaGenerator","synthetic":true,"types":[]},{"text":"impl Freeze for Schema","synthetic":true,"types":[]},{"text":"impl Freeze for RootSchema","synthetic":true,"types":[]},{"text":"impl Freeze for SchemaObject","synthetic":true,"types":[]},{"text":"impl Freeze for Metadata","synthetic":true,"types":[]},{"text":"impl Freeze for SubschemaValidation","synthetic":true,"types":[]},{"text":"impl Freeze for NumberValidation","synthetic":true,"types":[]},{"text":"impl Freeze for StringValidation","synthetic":true,"types":[]},{"text":"impl Freeze for ArrayValidation","synthetic":true,"types":[]},{"text":"impl Freeze for ObjectValidation","synthetic":true,"types":[]},{"text":"impl Freeze for InstanceType","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SingleOrVec&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ReplaceBoolSchemas","synthetic":true,"types":[]},{"text":"impl Freeze for RemoveRefSiblings","synthetic":true,"types":[]},{"text":"impl Freeze for SetSingleExample","synthetic":true,"types":[]}];
implementors["sct"] = [{"text":"impl&lt;'a&gt; Freeze for Log&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for UnitDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for BoolDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I8Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I16Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I32Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I64Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for IsizeDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U8Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U16Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U64Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for UsizeDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for F32Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for F64Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for CharDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I128Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U128Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U32Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Freeze for StrDeserializer&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Freeze for BorrowedStrDeserializer&lt;'de, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for StringDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Freeze for CowStrDeserializer&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Freeze for BytesDeserializer&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Freeze for BorrowedBytesDeserializer&lt;'de, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Freeze for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; Freeze for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; Freeze for Impossible&lt;Ok, Error&gt;","synthetic":true,"types":[]}];
implementors["serde_derive_internals"] = [{"text":"impl&lt;'a&gt; Freeze for Container&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Data&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Variant&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Field&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Style","synthetic":true,"types":[]},{"text":"impl Freeze for Name","synthetic":true,"types":[]},{"text":"impl Freeze for RenameAllRules","synthetic":true,"types":[]},{"text":"impl Freeze for Container","synthetic":true,"types":[]},{"text":"impl Freeze for TagType","synthetic":true,"types":[]},{"text":"impl Freeze for Identifier","synthetic":true,"types":[]},{"text":"impl Freeze for Variant","synthetic":true,"types":[]},{"text":"impl Freeze for Field","synthetic":true,"types":[]},{"text":"impl Freeze for Default","synthetic":true,"types":[]},{"text":"impl !Freeze for Ctxt","synthetic":true,"types":[]},{"text":"impl Freeze for RenameRule","synthetic":true,"types":[]},{"text":"impl Freeze for Derive","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;'a&gt; Freeze for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; Freeze for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Category","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for Map&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; Freeze for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for CharEscape","synthetic":true,"types":[]},{"text":"impl Freeze for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Serializer","synthetic":true,"types":[]},{"text":"impl Freeze for Number","synthetic":true,"types":[]},{"text":"impl Freeze for Value","synthetic":true,"types":[]}];
implementors["serde_urlencoded"] = [{"text":"impl&lt;'de&gt; Freeze for Deserializer&lt;'de&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for Serializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for SeqSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for TupleSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for TupleStructSerializer&lt;'input, 'output, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for TupleVariantSerializer&lt;'input, 'output, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for MapSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for StructSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for StructVariantSerializer&lt;'input, 'output, T&gt;","synthetic":true,"types":[]}];
implementors["serde_xml_rs"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for Serializer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_yaml"] = [{"text":"impl&lt;'a&gt; Freeze for Deserializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Location","synthetic":true,"types":[]},{"text":"impl Freeze for Mapping","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for IntoIter","synthetic":true,"types":[]},{"text":"impl Freeze for Number","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for Serializer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Value","synthetic":true,"types":[]}];
implementors["sha2"] = [{"text":"impl Freeze for Sha256","synthetic":true,"types":[]},{"text":"impl Freeze for Sha224","synthetic":true,"types":[]},{"text":"impl Freeze for Sha512","synthetic":true,"types":[]},{"text":"impl Freeze for Sha384","synthetic":true,"types":[]},{"text":"impl Freeze for Sha512Trunc256","synthetic":true,"types":[]},{"text":"impl Freeze for Sha512Trunc224","synthetic":true,"types":[]}];
implementors["shellwords"] = [{"text":"impl Freeze for MismatchedQuotes","synthetic":true,"types":[]}];
implementors["signal_hook"] = [{"text":"impl Freeze for Handle","synthetic":true,"types":[]},{"text":"impl&lt;R, E&gt; Freeze for SignalDelivery&lt;R, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Pending&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;O&gt; Freeze for PollResult&lt;O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;SD, E&gt; Freeze for SignalIterator&lt;SD, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SD: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for WithRawSiginfo","synthetic":true,"types":[]},{"text":"impl Freeze for SignalOnly","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for SignalsInfo&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Freeze for Forever&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Channel&lt;T&gt;","synthetic":true,"types":[]}];
implementors["signal_hook_registry"] = [{"text":"impl Freeze for SigId","synthetic":true,"types":[]}];
implementors["siphasher"] = [{"text":"impl Freeze for SipHasher13","synthetic":true,"types":[]},{"text":"impl Freeze for SipHasher24","synthetic":true,"types":[]},{"text":"impl Freeze for SipHasher","synthetic":true,"types":[]},{"text":"impl Freeze for Hash128","synthetic":true,"types":[]},{"text":"impl Freeze for SipHasher13","synthetic":true,"types":[]},{"text":"impl Freeze for SipHasher24","synthetic":true,"types":[]},{"text":"impl Freeze for SipHasher","synthetic":true,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Freeze for Slab&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Drain&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["socket2"] = [{"text":"impl Freeze for SockAddr","synthetic":true,"types":[]},{"text":"impl Freeze for Socket","synthetic":true,"types":[]},{"text":"impl Freeze for Domain","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for Protocol","synthetic":true,"types":[]}];
implementors["spin"] = [{"text":"impl&lt;T&gt; !Freeze for Mutex&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for RwLock&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for RwLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for RwLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for RwLockUpgradeableGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Once&lt;T&gt;","synthetic":true,"types":[]}];
implementors["strsim"] = [{"text":"impl Freeze for StrSimError","synthetic":true,"types":[]}];
implementors["subprocess"] = [{"text":"impl Freeze for Exec","synthetic":true,"types":[]},{"text":"impl Freeze for CaptureData","synthetic":true,"types":[]},{"text":"impl Freeze for NullFile","synthetic":true,"types":[]},{"text":"impl Freeze for Pipeline","synthetic":true,"types":[]},{"text":"impl Freeze for Communicator","synthetic":true,"types":[]},{"text":"impl Freeze for CommunicateError","synthetic":true,"types":[]},{"text":"impl Freeze for Popen","synthetic":true,"types":[]},{"text":"impl Freeze for PopenConfig","synthetic":true,"types":[]},{"text":"impl Freeze for Redirection","synthetic":true,"types":[]},{"text":"impl Freeze for PopenError","synthetic":true,"types":[]},{"text":"impl Freeze for ExitStatus","synthetic":true,"types":[]}];
implementors["subtle"] = [{"text":"impl Freeze for Choice","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for CtOption&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl Freeze for Underscore","synthetic":true,"types":[]},{"text":"impl Freeze for Abstract","synthetic":true,"types":[]},{"text":"impl Freeze for As","synthetic":true,"types":[]},{"text":"impl Freeze for Async","synthetic":true,"types":[]},{"text":"impl Freeze for Auto","synthetic":true,"types":[]},{"text":"impl Freeze for Await","synthetic":true,"types":[]},{"text":"impl Freeze for Become","synthetic":true,"types":[]},{"text":"impl Freeze for Box","synthetic":true,"types":[]},{"text":"impl Freeze for Break","synthetic":true,"types":[]},{"text":"impl Freeze for Const","synthetic":true,"types":[]},{"text":"impl Freeze for Continue","synthetic":true,"types":[]},{"text":"impl Freeze for Crate","synthetic":true,"types":[]},{"text":"impl Freeze for Default","synthetic":true,"types":[]},{"text":"impl Freeze for Do","synthetic":true,"types":[]},{"text":"impl Freeze for Dyn","synthetic":true,"types":[]},{"text":"impl Freeze for Else","synthetic":true,"types":[]},{"text":"impl Freeze for Enum","synthetic":true,"types":[]},{"text":"impl Freeze for Extern","synthetic":true,"types":[]},{"text":"impl Freeze for Final","synthetic":true,"types":[]},{"text":"impl Freeze for Fn","synthetic":true,"types":[]},{"text":"impl Freeze for For","synthetic":true,"types":[]},{"text":"impl Freeze for If","synthetic":true,"types":[]},{"text":"impl Freeze for Impl","synthetic":true,"types":[]},{"text":"impl Freeze for In","synthetic":true,"types":[]},{"text":"impl Freeze for Let","synthetic":true,"types":[]},{"text":"impl Freeze for Loop","synthetic":true,"types":[]},{"text":"impl Freeze for Macro","synthetic":true,"types":[]},{"text":"impl Freeze for Match","synthetic":true,"types":[]},{"text":"impl Freeze for Mod","synthetic":true,"types":[]},{"text":"impl Freeze for Move","synthetic":true,"types":[]},{"text":"impl Freeze for Mut","synthetic":true,"types":[]},{"text":"impl Freeze for Override","synthetic":true,"types":[]},{"text":"impl Freeze for Priv","synthetic":true,"types":[]},{"text":"impl Freeze for Pub","synthetic":true,"types":[]},{"text":"impl Freeze for Ref","synthetic":true,"types":[]},{"text":"impl Freeze for Return","synthetic":true,"types":[]},{"text":"impl Freeze for SelfType","synthetic":true,"types":[]},{"text":"impl Freeze for SelfValue","synthetic":true,"types":[]},{"text":"impl Freeze for Static","synthetic":true,"types":[]},{"text":"impl Freeze for Struct","synthetic":true,"types":[]},{"text":"impl Freeze for Super","synthetic":true,"types":[]},{"text":"impl Freeze for Trait","synthetic":true,"types":[]},{"text":"impl Freeze for Try","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for Typeof","synthetic":true,"types":[]},{"text":"impl Freeze for Union","synthetic":true,"types":[]},{"text":"impl Freeze for Unsafe","synthetic":true,"types":[]},{"text":"impl Freeze for Unsized","synthetic":true,"types":[]},{"text":"impl Freeze for Use","synthetic":true,"types":[]},{"text":"impl Freeze for Virtual","synthetic":true,"types":[]},{"text":"impl Freeze for Where","synthetic":true,"types":[]},{"text":"impl Freeze for While","synthetic":true,"types":[]},{"text":"impl Freeze for Yield","synthetic":true,"types":[]},{"text":"impl Freeze for Add","synthetic":true,"types":[]},{"text":"impl Freeze for AddEq","synthetic":true,"types":[]},{"text":"impl Freeze for And","synthetic":true,"types":[]},{"text":"impl Freeze for AndAnd","synthetic":true,"types":[]},{"text":"impl Freeze for AndEq","synthetic":true,"types":[]},{"text":"impl Freeze for At","synthetic":true,"types":[]},{"text":"impl Freeze for Bang","synthetic":true,"types":[]},{"text":"impl Freeze for Caret","synthetic":true,"types":[]},{"text":"impl Freeze for CaretEq","synthetic":true,"types":[]},{"text":"impl Freeze for Colon","synthetic":true,"types":[]},{"text":"impl Freeze for Colon2","synthetic":true,"types":[]},{"text":"impl Freeze for Comma","synthetic":true,"types":[]},{"text":"impl Freeze for Div","synthetic":true,"types":[]},{"text":"impl Freeze for DivEq","synthetic":true,"types":[]},{"text":"impl Freeze for Dollar","synthetic":true,"types":[]},{"text":"impl Freeze for Dot","synthetic":true,"types":[]},{"text":"impl Freeze for Dot2","synthetic":true,"types":[]},{"text":"impl Freeze for Dot3","synthetic":true,"types":[]},{"text":"impl Freeze for DotDotEq","synthetic":true,"types":[]},{"text":"impl Freeze for Eq","synthetic":true,"types":[]},{"text":"impl Freeze for EqEq","synthetic":true,"types":[]},{"text":"impl Freeze for Ge","synthetic":true,"types":[]},{"text":"impl Freeze for Gt","synthetic":true,"types":[]},{"text":"impl Freeze for Le","synthetic":true,"types":[]},{"text":"impl Freeze for Lt","synthetic":true,"types":[]},{"text":"impl Freeze for MulEq","synthetic":true,"types":[]},{"text":"impl Freeze for Ne","synthetic":true,"types":[]},{"text":"impl Freeze for Or","synthetic":true,"types":[]},{"text":"impl Freeze for OrEq","synthetic":true,"types":[]},{"text":"impl Freeze for OrOr","synthetic":true,"types":[]},{"text":"impl Freeze for Pound","synthetic":true,"types":[]},{"text":"impl Freeze for Question","synthetic":true,"types":[]},{"text":"impl Freeze for RArrow","synthetic":true,"types":[]},{"text":"impl Freeze for LArrow","synthetic":true,"types":[]},{"text":"impl Freeze for Rem","synthetic":true,"types":[]},{"text":"impl Freeze for RemEq","synthetic":true,"types":[]},{"text":"impl Freeze for FatArrow","synthetic":true,"types":[]},{"text":"impl Freeze for Semi","synthetic":true,"types":[]},{"text":"impl Freeze for Shl","synthetic":true,"types":[]},{"text":"impl Freeze for ShlEq","synthetic":true,"types":[]},{"text":"impl Freeze for Shr","synthetic":true,"types":[]},{"text":"impl Freeze for ShrEq","synthetic":true,"types":[]},{"text":"impl Freeze for Star","synthetic":true,"types":[]},{"text":"impl Freeze for Sub","synthetic":true,"types":[]},{"text":"impl Freeze for SubEq","synthetic":true,"types":[]},{"text":"impl Freeze for Tilde","synthetic":true,"types":[]},{"text":"impl Freeze for Brace","synthetic":true,"types":[]},{"text":"impl Freeze for Bracket","synthetic":true,"types":[]},{"text":"impl Freeze for Paren","synthetic":true,"types":[]},{"text":"impl Freeze for Group","synthetic":true,"types":[]},{"text":"impl Freeze for Attribute","synthetic":true,"types":[]},{"text":"impl Freeze for AttrStyle","synthetic":true,"types":[]},{"text":"impl Freeze for Meta","synthetic":true,"types":[]},{"text":"impl Freeze for MetaList","synthetic":true,"types":[]},{"text":"impl Freeze for MetaNameValue","synthetic":true,"types":[]},{"text":"impl Freeze for NestedMeta","synthetic":true,"types":[]},{"text":"impl Freeze for Variant","synthetic":true,"types":[]},{"text":"impl Freeze for Fields","synthetic":true,"types":[]},{"text":"impl Freeze for FieldsNamed","synthetic":true,"types":[]},{"text":"impl Freeze for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl Freeze for Field","synthetic":true,"types":[]},{"text":"impl Freeze for Visibility","synthetic":true,"types":[]},{"text":"impl Freeze for VisPublic","synthetic":true,"types":[]},{"text":"impl Freeze for VisCrate","synthetic":true,"types":[]},{"text":"impl Freeze for VisRestricted","synthetic":true,"types":[]},{"text":"impl Freeze for Expr","synthetic":true,"types":[]},{"text":"impl Freeze for ExprArray","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAssign","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAsync","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAwait","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBinary","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBlock","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBox","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBreak","synthetic":true,"types":[]},{"text":"impl Freeze for ExprCall","synthetic":true,"types":[]},{"text":"impl Freeze for ExprCast","synthetic":true,"types":[]},{"text":"impl Freeze for ExprClosure","synthetic":true,"types":[]},{"text":"impl Freeze for ExprContinue","synthetic":true,"types":[]},{"text":"impl Freeze for ExprField","synthetic":true,"types":[]},{"text":"impl Freeze for ExprForLoop","synthetic":true,"types":[]},{"text":"impl Freeze for ExprGroup","synthetic":true,"types":[]},{"text":"impl Freeze for ExprIf","synthetic":true,"types":[]},{"text":"impl Freeze for ExprIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLet","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLit","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLoop","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMacro","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMatch","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl Freeze for ExprParen","synthetic":true,"types":[]},{"text":"impl Freeze for ExprPath","synthetic":true,"types":[]},{"text":"impl Freeze for ExprRange","synthetic":true,"types":[]},{"text":"impl Freeze for ExprReference","synthetic":true,"types":[]},{"text":"impl Freeze for ExprRepeat","synthetic":true,"types":[]},{"text":"impl Freeze for ExprReturn","synthetic":true,"types":[]},{"text":"impl Freeze for ExprStruct","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTry","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTuple","synthetic":true,"types":[]},{"text":"impl Freeze for ExprType","synthetic":true,"types":[]},{"text":"impl Freeze for ExprUnary","synthetic":true,"types":[]},{"text":"impl Freeze for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl Freeze for ExprWhile","synthetic":true,"types":[]},{"text":"impl Freeze for ExprYield","synthetic":true,"types":[]},{"text":"impl Freeze for Member","synthetic":true,"types":[]},{"text":"impl Freeze for Index","synthetic":true,"types":[]},{"text":"impl Freeze for MethodTurbofish","synthetic":true,"types":[]},{"text":"impl Freeze for GenericMethodArgument","synthetic":true,"types":[]},{"text":"impl Freeze for FieldValue","synthetic":true,"types":[]},{"text":"impl Freeze for Label","synthetic":true,"types":[]},{"text":"impl Freeze for Arm","synthetic":true,"types":[]},{"text":"impl Freeze for RangeLimits","synthetic":true,"types":[]},{"text":"impl Freeze for Generics","synthetic":true,"types":[]},{"text":"impl Freeze for GenericParam","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParam","synthetic":true,"types":[]},{"text":"impl Freeze for LifetimeDef","synthetic":true,"types":[]},{"text":"impl Freeze for ConstParam","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParamBound","synthetic":true,"types":[]},{"text":"impl Freeze for TraitBound","synthetic":true,"types":[]},{"text":"impl Freeze for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl Freeze for WhereClause","synthetic":true,"types":[]},{"text":"impl Freeze for WherePredicate","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateType","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateEq","synthetic":true,"types":[]},{"text":"impl Freeze for Item","synthetic":true,"types":[]},{"text":"impl Freeze for ItemConst","synthetic":true,"types":[]},{"text":"impl Freeze for ItemEnum","synthetic":true,"types":[]},{"text":"impl Freeze for ItemExternCrate","synthetic":true,"types":[]},{"text":"impl Freeze for ItemFn","synthetic":true,"types":[]},{"text":"impl Freeze for ItemForeignMod","synthetic":true,"types":[]},{"text":"impl Freeze for ItemImpl","synthetic":true,"types":[]},{"text":"impl Freeze for ItemMacro","synthetic":true,"types":[]},{"text":"impl Freeze for ItemMacro2","synthetic":true,"types":[]},{"text":"impl Freeze for ItemMod","synthetic":true,"types":[]},{"text":"impl Freeze for ItemStatic","synthetic":true,"types":[]},{"text":"impl Freeze for ItemStruct","synthetic":true,"types":[]},{"text":"impl Freeze for ItemTrait","synthetic":true,"types":[]},{"text":"impl Freeze for ItemTraitAlias","synthetic":true,"types":[]},{"text":"impl Freeze for ItemType","synthetic":true,"types":[]},{"text":"impl Freeze for ItemUnion","synthetic":true,"types":[]},{"text":"impl Freeze for ItemUse","synthetic":true,"types":[]},{"text":"impl Freeze for UseTree","synthetic":true,"types":[]},{"text":"impl Freeze for UsePath","synthetic":true,"types":[]},{"text":"impl Freeze for UseName","synthetic":true,"types":[]},{"text":"impl Freeze for UseRename","synthetic":true,"types":[]},{"text":"impl Freeze for UseGlob","synthetic":true,"types":[]},{"text":"impl Freeze for UseGroup","synthetic":true,"types":[]},{"text":"impl Freeze for ForeignItem","synthetic":true,"types":[]},{"text":"impl Freeze for ForeignItemFn","synthetic":true,"types":[]},{"text":"impl Freeze for ForeignItemStatic","synthetic":true,"types":[]},{"text":"impl Freeze for ForeignItemType","synthetic":true,"types":[]},{"text":"impl Freeze for ForeignItemMacro","synthetic":true,"types":[]},{"text":"impl Freeze for TraitItem","synthetic":true,"types":[]},{"text":"impl Freeze for TraitItemConst","synthetic":true,"types":[]},{"text":"impl Freeze for TraitItemMethod","synthetic":true,"types":[]},{"text":"impl Freeze for TraitItemType","synthetic":true,"types":[]},{"text":"impl Freeze for TraitItemMacro","synthetic":true,"types":[]},{"text":"impl Freeze for ImplItem","synthetic":true,"types":[]},{"text":"impl Freeze for ImplItemConst","synthetic":true,"types":[]},{"text":"impl Freeze for ImplItemMethod","synthetic":true,"types":[]},{"text":"impl Freeze for ImplItemType","synthetic":true,"types":[]},{"text":"impl Freeze for ImplItemMacro","synthetic":true,"types":[]},{"text":"impl Freeze for Signature","synthetic":true,"types":[]},{"text":"impl Freeze for FnArg","synthetic":true,"types":[]},{"text":"impl Freeze for Receiver","synthetic":true,"types":[]},{"text":"impl Freeze for File","synthetic":true,"types":[]},{"text":"impl Freeze for Lifetime","synthetic":true,"types":[]},{"text":"impl Freeze for Lit","synthetic":true,"types":[]},{"text":"impl Freeze for LitStr","synthetic":true,"types":[]},{"text":"impl Freeze for LitByteStr","synthetic":true,"types":[]},{"text":"impl Freeze for LitByte","synthetic":true,"types":[]},{"text":"impl Freeze for LitChar","synthetic":true,"types":[]},{"text":"impl Freeze for LitInt","synthetic":true,"types":[]},{"text":"impl Freeze for LitFloat","synthetic":true,"types":[]},{"text":"impl Freeze for LitBool","synthetic":true,"types":[]},{"text":"impl Freeze for StrStyle","synthetic":true,"types":[]},{"text":"impl Freeze for Macro","synthetic":true,"types":[]},{"text":"impl Freeze for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl Freeze for DeriveInput","synthetic":true,"types":[]},{"text":"impl Freeze for Data","synthetic":true,"types":[]},{"text":"impl Freeze for DataStruct","synthetic":true,"types":[]},{"text":"impl Freeze for DataEnum","synthetic":true,"types":[]},{"text":"impl Freeze for DataUnion","synthetic":true,"types":[]},{"text":"impl Freeze for BinOp","synthetic":true,"types":[]},{"text":"impl Freeze for UnOp","synthetic":true,"types":[]},{"text":"impl Freeze for Block","synthetic":true,"types":[]},{"text":"impl Freeze for Stmt","synthetic":true,"types":[]},{"text":"impl Freeze for Local","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for TypeArray","synthetic":true,"types":[]},{"text":"impl Freeze for TypeBareFn","synthetic":true,"types":[]},{"text":"impl Freeze for TypeGroup","synthetic":true,"types":[]},{"text":"impl Freeze for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl Freeze for TypeInfer","synthetic":true,"types":[]},{"text":"impl Freeze for TypeMacro","synthetic":true,"types":[]},{"text":"impl Freeze for TypeNever","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParen","synthetic":true,"types":[]},{"text":"impl Freeze for TypePath","synthetic":true,"types":[]},{"text":"impl Freeze for TypePtr","synthetic":true,"types":[]},{"text":"impl Freeze for TypeReference","synthetic":true,"types":[]},{"text":"impl Freeze for TypeSlice","synthetic":true,"types":[]},{"text":"impl Freeze for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl Freeze for TypeTuple","synthetic":true,"types":[]},{"text":"impl Freeze for Abi","synthetic":true,"types":[]},{"text":"impl Freeze for BareFnArg","synthetic":true,"types":[]},{"text":"impl Freeze for Variadic","synthetic":true,"types":[]},{"text":"impl Freeze for ReturnType","synthetic":true,"types":[]},{"text":"impl Freeze for Pat","synthetic":true,"types":[]},{"text":"impl Freeze for PatBox","synthetic":true,"types":[]},{"text":"impl Freeze for PatIdent","synthetic":true,"types":[]},{"text":"impl Freeze for PatLit","synthetic":true,"types":[]},{"text":"impl Freeze for PatMacro","synthetic":true,"types":[]},{"text":"impl Freeze for PatOr","synthetic":true,"types":[]},{"text":"impl Freeze for PatPath","synthetic":true,"types":[]},{"text":"impl Freeze for PatRange","synthetic":true,"types":[]},{"text":"impl Freeze for PatReference","synthetic":true,"types":[]},{"text":"impl Freeze for PatRest","synthetic":true,"types":[]},{"text":"impl Freeze for PatSlice","synthetic":true,"types":[]},{"text":"impl Freeze for PatStruct","synthetic":true,"types":[]},{"text":"impl Freeze for PatTuple","synthetic":true,"types":[]},{"text":"impl Freeze for PatTupleStruct","synthetic":true,"types":[]},{"text":"impl Freeze for PatType","synthetic":true,"types":[]},{"text":"impl Freeze for PatWild","synthetic":true,"types":[]},{"text":"impl Freeze for FieldPat","synthetic":true,"types":[]},{"text":"impl Freeze for Path","synthetic":true,"types":[]},{"text":"impl Freeze for PathSegment","synthetic":true,"types":[]},{"text":"impl Freeze for PathArguments","synthetic":true,"types":[]},{"text":"impl Freeze for GenericArgument","synthetic":true,"types":[]},{"text":"impl Freeze for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl Freeze for Binding","synthetic":true,"types":[]},{"text":"impl Freeze for Constraint","synthetic":true,"types":[]},{"text":"impl Freeze for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl Freeze for QSelf","synthetic":true,"types":[]},{"text":"impl Freeze for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for Punctuated&lt;T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Freeze for Pairs&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Freeze for PairsMut&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Freeze for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Freeze for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; Freeze for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Nothing","synthetic":true,"types":[]}];
implementors["tar"] = [{"text":"impl&lt;R&gt; !Freeze for Archive&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Freeze for Entries&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for Builder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Freeze for Entry&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Unpacked","synthetic":true,"types":[]},{"text":"impl Freeze for EntryType","synthetic":true,"types":[]},{"text":"impl Freeze for Header","synthetic":true,"types":[]},{"text":"impl Freeze for HeaderMode","synthetic":true,"types":[]},{"text":"impl Freeze for OldHeader","synthetic":true,"types":[]},{"text":"impl Freeze for UstarHeader","synthetic":true,"types":[]},{"text":"impl Freeze for GnuHeader","synthetic":true,"types":[]},{"text":"impl Freeze for GnuSparseHeader","synthetic":true,"types":[]},{"text":"impl Freeze for GnuExtSparseHeader","synthetic":true,"types":[]},{"text":"impl&lt;'entry&gt; Freeze for PaxExtensions&lt;'entry&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'entry&gt; Freeze for PaxExtension&lt;'entry&gt;","synthetic":true,"types":[]}];
implementors["tempfile"] = [{"text":"impl Freeze for TempDir","synthetic":true,"types":[]},{"text":"impl Freeze for PathPersistError","synthetic":true,"types":[]},{"text":"impl Freeze for TempPath","synthetic":true,"types":[]},{"text":"impl Freeze for NamedTempFile","synthetic":true,"types":[]},{"text":"impl Freeze for PersistError","synthetic":true,"types":[]},{"text":"impl Freeze for SpooledTempFile","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Freeze for Builder&lt;'a, 'b&gt;","synthetic":true,"types":[]}];
implementors["termcolor"] = [{"text":"impl Freeze for ColorChoice","synthetic":true,"types":[]},{"text":"impl Freeze for StandardStream","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StandardStreamLock&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BufferedStandardStream","synthetic":true,"types":[]},{"text":"impl !Freeze for BufferWriter","synthetic":true,"types":[]},{"text":"impl Freeze for Buffer","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for NoColor&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for Ansi&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ColorSpec","synthetic":true,"types":[]},{"text":"impl Freeze for Color","synthetic":true,"types":[]},{"text":"impl Freeze for ParseColorError","synthetic":true,"types":[]}];
implementors["textwrap"] = [{"text":"impl Freeze for NoHyphenation","synthetic":true,"types":[]},{"text":"impl Freeze for HyphenSplitter","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Freeze for Wrapper&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Freeze for IntoWrapIter&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'w, 'a, S&gt; Freeze for WrapIter&lt;'w, 'a, S&gt;","synthetic":true,"types":[]}];
implementors["thread_local"] = [{"text":"impl&lt;T&gt; !Freeze for CachedThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for CachedIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for CachedIntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for ThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl Freeze for Duration","synthetic":true,"types":[]},{"text":"impl Freeze for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl Freeze for Timespec","synthetic":true,"types":[]},{"text":"impl Freeze for PreciseTime","synthetic":true,"types":[]},{"text":"impl Freeze for SteadyTime","synthetic":true,"types":[]},{"text":"impl Freeze for Tm","synthetic":true,"types":[]},{"text":"impl Freeze for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TmFmt&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A&gt; Freeze for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A, I&gt; Freeze for ArrayVecSplice&lt;'p, A, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for ArrayVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for ArrayVecDrain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'s, T&gt; Freeze for SliceVec&lt;'s, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'p, 's, T&gt; Freeze for SliceVecDrain&lt;'p, 's, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A&gt; Freeze for TinyVecDrain&lt;'p, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'p, A, I&gt; Freeze for TinyVecSplice&lt;'p, A, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for TinyVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tmc_client"] = [{"text":"impl Freeze for ClientError","synthetic":true,"types":[]},{"text":"impl Freeze for FeedbackAnswer","synthetic":true,"types":[]},{"text":"impl Freeze for User","synthetic":true,"types":[]},{"text":"impl Freeze for Organization","synthetic":true,"types":[]},{"text":"impl Freeze for Course","synthetic":true,"types":[]},{"text":"impl Freeze for CourseData","synthetic":true,"types":[]},{"text":"impl Freeze for CourseDetails","synthetic":true,"types":[]},{"text":"impl Freeze for Exercise","synthetic":true,"types":[]},{"text":"impl Freeze for CourseExercise","synthetic":true,"types":[]},{"text":"impl Freeze for CourseDataExercise","synthetic":true,"types":[]},{"text":"impl Freeze for CourseDataExercisePoint","synthetic":true,"types":[]},{"text":"impl Freeze for ExerciseDetails","synthetic":true,"types":[]},{"text":"impl Freeze for ExercisesDetails","synthetic":true,"types":[]},{"text":"impl Freeze for Submission","synthetic":true,"types":[]},{"text":"impl Freeze for NewSubmission","synthetic":true,"types":[]},{"text":"impl Freeze for SubmissionProcessingStatus","synthetic":true,"types":[]},{"text":"impl Freeze for SubmissionFinished","synthetic":true,"types":[]},{"text":"impl Freeze for SubmissionStatus","synthetic":true,"types":[]},{"text":"impl Freeze for SubmissionFeedbackResponse","synthetic":true,"types":[]},{"text":"impl Freeze for Review","synthetic":true,"types":[]},{"text":"impl Freeze for UpdateResult","synthetic":true,"types":[]},{"text":"impl Freeze for ClientUpdateData","synthetic":true,"types":[]},{"text":"impl Freeze for TmcClient","synthetic":true,"types":[]}];
implementors["tmc_langs_csharp"] = [{"text":"impl Freeze for CSharpError","synthetic":true,"types":[]},{"text":"impl Freeze for CSharpPlugin","synthetic":true,"types":[]},{"text":"impl Freeze for CSharpStudentFilePolicy","synthetic":true,"types":[]}];
implementors["tmc_langs_framework"] = [{"text":"impl Freeze for TmcCommand","synthetic":true,"types":[]},{"text":"impl Freeze for Output","synthetic":true,"types":[]},{"text":"impl Freeze for TestDesc","synthetic":true,"types":[]},{"text":"impl Freeze for TestResult","synthetic":true,"types":[]},{"text":"impl Freeze for ExerciseDesc","synthetic":true,"types":[]},{"text":"impl Freeze for RunResult","synthetic":true,"types":[]},{"text":"impl Freeze for RunStatus","synthetic":true,"types":[]},{"text":"impl Freeze for ExercisePackagingConfiguration","synthetic":true,"types":[]},{"text":"impl Freeze for StyleValidationStrategy","synthetic":true,"types":[]},{"text":"impl Freeze for StyleValidationError","synthetic":true,"types":[]},{"text":"impl Freeze for StyleValidationResult","synthetic":true,"types":[]},{"text":"impl Freeze for TmcError","synthetic":true,"types":[]},{"text":"impl Freeze for CommandError","synthetic":true,"types":[]},{"text":"impl Freeze for FileIo","synthetic":true,"types":[]},{"text":"impl Freeze for FileLock","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FileLockGuard&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for MetaString","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for MetaSyntaxParser&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for NothingIsStudentFilePolicy","synthetic":true,"types":[]},{"text":"impl Freeze for EverythingIsStudentFilePolicy","synthetic":true,"types":[]},{"text":"impl Freeze for TmcProjectYml","synthetic":true,"types":[]},{"text":"impl Freeze for PythonVer","synthetic":true,"types":[]},{"text":"impl Freeze for NoTests","synthetic":true,"types":[]},{"text":"impl Freeze for NoTestsWrapper","synthetic":true,"types":[]},{"text":"impl Freeze for NoTestsPoints","synthetic":true,"types":[]},{"text":"impl Freeze for IntOrString","synthetic":true,"types":[]},{"text":"impl Freeze for Warning","synthetic":true,"types":[]}];
implementors["tmc_langs_java"] = [{"text":"impl Freeze for AntPlugin","synthetic":true,"types":[]},{"text":"impl Freeze for AntStudentFilePolicy","synthetic":true,"types":[]},{"text":"impl Freeze for JavaError","synthetic":true,"types":[]},{"text":"impl Freeze for MavenPlugin","synthetic":true,"types":[]},{"text":"impl Freeze for MavenStudentFilePolicy","synthetic":true,"types":[]}];
implementors["tmc_langs_make"] = [{"text":"impl Freeze for MakeError","synthetic":true,"types":[]},{"text":"impl Freeze for MakePlugin","synthetic":true,"types":[]},{"text":"impl Freeze for MakeStudentFilePolicy","synthetic":true,"types":[]}];
implementors["tmc_langs_notests"] = [{"text":"impl Freeze for NoTestsPlugin","synthetic":true,"types":[]},{"text":"impl Freeze for NoTestsStudentFilePolicy","synthetic":true,"types":[]}];
implementors["tmc_langs_python3"] = [{"text":"impl Freeze for PythonError","synthetic":true,"types":[]},{"text":"impl Freeze for Python3Plugin","synthetic":true,"types":[]},{"text":"impl Freeze for Python3StudentFilePolicy","synthetic":true,"types":[]}];
implementors["tmc_langs_r"] = [{"text":"impl Freeze for RPlugin","synthetic":true,"types":[]},{"text":"impl Freeze for RStudentFilePolicy","synthetic":true,"types":[]}];
implementors["tmc_langs_util"] = [{"text":"impl Freeze for UtilError","synthetic":true,"types":[]},{"text":"impl Freeze for ParamError","synthetic":true,"types":[]},{"text":"impl Freeze for ProgressReporter2","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for StatusUpdate&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for RefreshData","synthetic":true,"types":[]},{"text":"impl Freeze for RefreshExercise","synthetic":true,"types":[]},{"text":"impl Freeze for TmcParams","synthetic":true,"types":[]},{"text":"impl Freeze for OutputFormat","synthetic":true,"types":[]}];
implementors["tokio"] = [{"text":"impl&lt;'a&gt; Freeze for ReadBuf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Interest","synthetic":true,"types":[]},{"text":"impl Freeze for Ready","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for AsyncFd&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for AsyncFdReadyGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for AsyncFdReadyMutGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TryIoError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for WriteHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;RW&gt; Freeze for BufStream&lt;RW&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RW: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Empty","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for DuplexStream","synthetic":true,"types":[]},{"text":"impl Freeze for Repeat","synthetic":true,"types":[]},{"text":"impl Freeze for Sink","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Split&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for TcpListener","synthetic":true,"types":[]},{"text":"impl Freeze for TcpSocket","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ReadHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for WriteHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedReadHalf","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedWriteHalf","synthetic":true,"types":[]},{"text":"impl Freeze for ReuniteError","synthetic":true,"types":[]},{"text":"impl !Freeze for TcpStream","synthetic":true,"types":[]},{"text":"impl !Freeze for UdpSocket","synthetic":true,"types":[]},{"text":"impl !Freeze for UnixDatagram","synthetic":true,"types":[]},{"text":"impl !Freeze for UnixListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ReadHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for WriteHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedReadHalf","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedWriteHalf","synthetic":true,"types":[]},{"text":"impl Freeze for ReuniteError","synthetic":true,"types":[]},{"text":"impl Freeze for SocketAddr","synthetic":true,"types":[]},{"text":"impl !Freeze for UnixStream","synthetic":true,"types":[]},{"text":"impl Freeze for UCred","synthetic":true,"types":[]},{"text":"impl !Freeze for JoinError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for JoinHandle&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl Freeze for Handle","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for EnterGuard&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for Runtime","synthetic":true,"types":[]},{"text":"impl !Freeze for Barrier","synthetic":true,"types":[]},{"text":"impl Freeze for BarrierWaitResult","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for RecvError","synthetic":true,"types":[]},{"text":"impl Freeze for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Permit&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for UnboundedReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for RecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Mutex&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Freeze for OwnedMutexGuard&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TryLockError","synthetic":true,"types":[]},{"text":"impl !Freeze for Notify","synthetic":true,"types":[]},{"text":"impl Freeze for RecvError","synthetic":true,"types":[]},{"text":"impl Freeze for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TryAcquireError","synthetic":true,"types":[]},{"text":"impl Freeze for AcquireError","synthetic":true,"types":[]},{"text":"impl !Freeze for Semaphore","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SemaphorePermit&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedSemaphorePermit","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for RwLock&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for RwLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for RwLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for RecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Ref&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for LocalSet","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for LocalKey&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for Sleep","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Elapsed","synthetic":true,"types":[]},{"text":"impl Freeze for Instant","synthetic":true,"types":[]},{"text":"impl Freeze for Interval","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Timeout&lt;T&gt;","synthetic":true,"types":[]}];
implementors["tokio_rustls"] = [{"text":"impl&lt;IO&gt; Freeze for TlsStream&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;IO&gt; Freeze for TlsStream&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for TlsConnector","synthetic":true,"types":[]},{"text":"impl Freeze for TlsAcceptor","synthetic":true,"types":[]},{"text":"impl&lt;IO&gt; Freeze for Connect&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;IO&gt; Freeze for Accept&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;IO&gt; Freeze for FailableConnect&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;IO&gt; Freeze for FailableAccept&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TlsStream&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tokio_util"] = [{"text":"impl Freeze for BytesCodec","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Freeze for Framed&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Freeze for FramedParts&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, D&gt; Freeze for FramedRead&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Freeze for FramedWrite&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl Freeze for LengthDelimitedCodecError","synthetic":true,"types":[]},{"text":"impl Freeze for LengthDelimitedCodec","synthetic":true,"types":[]},{"text":"impl Freeze for LinesCodec","synthetic":true,"types":[]},{"text":"impl Freeze for LinesCodecError","synthetic":true,"types":[]},{"text":"impl Freeze for CancellationToken","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for WaitForCancellationFuture&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for PollSemaphore","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ReusableBoxFuture&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; Freeze for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["toml"] = [{"text":"impl&lt;K, V&gt; Freeze for Map&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Datetime","synthetic":true,"types":[]},{"text":"impl Freeze for DatetimeParseError","synthetic":true,"types":[]},{"text":"impl Freeze for Value","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Serializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Deserializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Spanned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tracing"] = [{"text":"impl&lt;T&gt; Freeze for WithDispatch&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Instrumented&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Span","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Entered&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for EnteredSpan","synthetic":true,"types":[]}];
implementors["tracing_core"] = [{"text":"impl Freeze for Identifier","synthetic":true,"types":[]},{"text":"impl Freeze for Dispatch","synthetic":true,"types":[]},{"text":"impl Freeze for DefaultGuard","synthetic":true,"types":[]},{"text":"impl Freeze for SetGlobalDefaultError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Field","synthetic":true,"types":[]},{"text":"impl Freeze for Empty","synthetic":true,"types":[]},{"text":"impl Freeze for FieldSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ValueSet&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Iter","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DisplayValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Kind","synthetic":true,"types":[]},{"text":"impl Freeze for Level","synthetic":true,"types":[]},{"text":"impl Freeze for LevelFilter","synthetic":true,"types":[]},{"text":"impl Freeze for ParseLevelFilterError","synthetic":true,"types":[]},{"text":"impl Freeze for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Freeze for Id","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Current","synthetic":true,"types":[]},{"text":"impl Freeze for Interest","synthetic":true,"types":[]}];
implementors["try_lock"] = [{"text":"impl&lt;T&gt; !Freeze for TryLock&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Locked&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["type_map"] = [{"text":"impl&lt;'a, T&gt; Freeze for OccupiedEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Entry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TypeMap","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for OccupiedEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Entry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TypeMap","synthetic":true,"types":[]}];
implementors["typenum"] = [{"text":"impl Freeze for B0","synthetic":true,"types":[]},{"text":"impl Freeze for B1","synthetic":true,"types":[]},{"text":"impl&lt;U&gt; Freeze for PInt&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;U&gt; Freeze for NInt&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Z0","synthetic":true,"types":[]},{"text":"impl Freeze for UTerm","synthetic":true,"types":[]},{"text":"impl&lt;U, B&gt; Freeze for UInt&lt;U, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ATerm","synthetic":true,"types":[]},{"text":"impl&lt;V, A&gt; Freeze for TArr&lt;V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Greater","synthetic":true,"types":[]},{"text":"impl Freeze for Less","synthetic":true,"types":[]},{"text":"impl Freeze for Equal","synthetic":true,"types":[]}];
implementors["unicase"] = [{"text":"impl&lt;S&gt; Freeze for UniCase&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Ascii&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Freeze for Level","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for BidiClass","synthetic":true,"types":[]},{"text":"impl Freeze for ParagraphInfo","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Freeze for InitialInfo&lt;'text&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Freeze for BidiInfo&lt;'text&gt;","synthetic":true,"types":[]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; Freeze for Decompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for IsNormalized","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Recompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Replacements&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for StreamSafe&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["untrusted"] = [{"text":"impl&lt;'a&gt; Freeze for Input&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Mark","synthetic":true,"types":[]},{"text":"impl Freeze for EndOfInput","synthetic":true,"types":[]}];
implementors["uom"] = [{"text":"impl Freeze for yottameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for zettameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for exameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for petameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for terameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for gigameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for megameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for kilometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for hectometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for decameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for meter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for decimeter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for centimeter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for millimeter_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for micrometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for nanometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for picometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for femtometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for attometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for zeptometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for yoctometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for foot_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for galileo","synthetic":true,"types":[]},{"text":"impl Freeze for inch_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for millimeter_per_minute_squared","synthetic":true,"types":[]},{"text":"impl Freeze for yottamole","synthetic":true,"types":[]},{"text":"impl Freeze for zettamole","synthetic":true,"types":[]},{"text":"impl Freeze for examole","synthetic":true,"types":[]},{"text":"impl Freeze for petamole","synthetic":true,"types":[]},{"text":"impl Freeze for teramole","synthetic":true,"types":[]},{"text":"impl Freeze for gigamole","synthetic":true,"types":[]},{"text":"impl Freeze for megamole","synthetic":true,"types":[]},{"text":"impl Freeze for kilomole","synthetic":true,"types":[]},{"text":"impl Freeze for hectomole","synthetic":true,"types":[]},{"text":"impl Freeze for decamole","synthetic":true,"types":[]},{"text":"impl Freeze for mole","synthetic":true,"types":[]},{"text":"impl Freeze for decimole","synthetic":true,"types":[]},{"text":"impl Freeze for centimole","synthetic":true,"types":[]},{"text":"impl Freeze for millimole","synthetic":true,"types":[]},{"text":"impl Freeze for micromole","synthetic":true,"types":[]},{"text":"impl Freeze for nanomole","synthetic":true,"types":[]},{"text":"impl Freeze for picomole","synthetic":true,"types":[]},{"text":"impl Freeze for femtomole","synthetic":true,"types":[]},{"text":"impl Freeze for attomole","synthetic":true,"types":[]},{"text":"impl Freeze for zeptomole","synthetic":true,"types":[]},{"text":"impl Freeze for yoctomole","synthetic":true,"types":[]},{"text":"impl Freeze for radian","synthetic":true,"types":[]},{"text":"impl Freeze for revolution","synthetic":true,"types":[]},{"text":"impl Freeze for degree","synthetic":true,"types":[]},{"text":"impl Freeze for gon","synthetic":true,"types":[]},{"text":"impl Freeze for mil","synthetic":true,"types":[]},{"text":"impl Freeze for minute","synthetic":true,"types":[]},{"text":"impl Freeze for second","synthetic":true,"types":[]},{"text":"impl Freeze for radian_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for degree_per_second_squared","synthetic":true,"types":[]},{"text":"impl Freeze for radian_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for degree_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for radian_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for degree_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for revolution_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for revolution_per_minute","synthetic":true,"types":[]},{"text":"impl Freeze for revolution_per_hour","synthetic":true,"types":[]},{"text":"impl Freeze for square_yottameter","synthetic":true,"types":[]},{"text":"impl Freeze for square_zettameter","synthetic":true,"types":[]},{"text":"impl Freeze for square_exameter","synthetic":true,"types":[]},{"text":"impl Freeze for square_petameter","synthetic":true,"types":[]},{"text":"impl Freeze for square_terameter","synthetic":true,"types":[]},{"text":"impl Freeze for square_gigameter","synthetic":true,"types":[]},{"text":"impl Freeze for square_megameter","synthetic":true,"types":[]},{"text":"impl Freeze for square_kilometer","synthetic":true,"types":[]},{"text":"impl Freeze for square_hectometer","synthetic":true,"types":[]},{"text":"impl Freeze for square_decameter","synthetic":true,"types":[]},{"text":"impl Freeze for square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for square_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for square_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for square_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for square_micrometer","synthetic":true,"types":[]},{"text":"impl Freeze for square_nanometer","synthetic":true,"types":[]},{"text":"impl Freeze for square_picometer","synthetic":true,"types":[]},{"text":"impl Freeze for square_femtometer","synthetic":true,"types":[]},{"text":"impl Freeze for square_attometer","synthetic":true,"types":[]},{"text":"impl Freeze for square_zeptometer","synthetic":true,"types":[]},{"text":"impl Freeze for square_yoctometer","synthetic":true,"types":[]},{"text":"impl Freeze for acre","synthetic":true,"types":[]},{"text":"impl Freeze for are","synthetic":true,"types":[]},{"text":"impl Freeze for barn","synthetic":true,"types":[]},{"text":"impl Freeze for circular_mil","synthetic":true,"types":[]},{"text":"impl Freeze for hectare","synthetic":true,"types":[]},{"text":"impl Freeze for square_foot","synthetic":true,"types":[]},{"text":"impl Freeze for square_inch","synthetic":true,"types":[]},{"text":"impl Freeze for square_mile","synthetic":true,"types":[]},{"text":"impl Freeze for square_yard","synthetic":true,"types":[]},{"text":"impl Freeze for yottajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for zettajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for exajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for petajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for terajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for gigajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for megajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for kilojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for hectojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for decajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for decijoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for centijoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for millijoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for microjoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for nanojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for picojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for femtojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for attojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for zeptojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for yoctojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_zeptogram","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_attogram","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_femtogram","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_picogram","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_nanogram","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_microgram","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_milligram","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_gram","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_megagram","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_gigagram","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_teragram","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_petagram","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_exagram","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_zettagram","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_yottagram","synthetic":true,"types":[]},{"text":"impl Freeze for btu_it_per_pound","synthetic":true,"types":[]},{"text":"impl Freeze for btu_per_pound","synthetic":true,"types":[]},{"text":"impl Freeze for calorie_it_per_gram","synthetic":true,"types":[]},{"text":"impl Freeze for calorie_per_gram","synthetic":true,"types":[]},{"text":"impl Freeze for yottafarad","synthetic":true,"types":[]},{"text":"impl Freeze for zettafarad","synthetic":true,"types":[]},{"text":"impl Freeze for exafarad","synthetic":true,"types":[]},{"text":"impl Freeze for petafarad","synthetic":true,"types":[]},{"text":"impl Freeze for terafarad","synthetic":true,"types":[]},{"text":"impl Freeze for gigafarad","synthetic":true,"types":[]},{"text":"impl Freeze for megafarad","synthetic":true,"types":[]},{"text":"impl Freeze for kilofarad","synthetic":true,"types":[]},{"text":"impl Freeze for hectofarad","synthetic":true,"types":[]},{"text":"impl Freeze for decafarad","synthetic":true,"types":[]},{"text":"impl Freeze for farad","synthetic":true,"types":[]},{"text":"impl Freeze for decifarad","synthetic":true,"types":[]},{"text":"impl Freeze for centifarad","synthetic":true,"types":[]},{"text":"impl Freeze for millifarad","synthetic":true,"types":[]},{"text":"impl Freeze for microfarad","synthetic":true,"types":[]},{"text":"impl Freeze for nanofarad","synthetic":true,"types":[]},{"text":"impl Freeze for picofarad","synthetic":true,"types":[]},{"text":"impl Freeze for femtofarad","synthetic":true,"types":[]},{"text":"impl Freeze for attofarad","synthetic":true,"types":[]},{"text":"impl Freeze for zeptofarad","synthetic":true,"types":[]},{"text":"impl Freeze for yoctofarad","synthetic":true,"types":[]},{"text":"impl Freeze for abfarad","synthetic":true,"types":[]},{"text":"impl Freeze for statfarad","synthetic":true,"types":[]},{"text":"impl Freeze for yottakatal","synthetic":true,"types":[]},{"text":"impl Freeze for zettakatal","synthetic":true,"types":[]},{"text":"impl Freeze for exakatal","synthetic":true,"types":[]},{"text":"impl Freeze for petakatal","synthetic":true,"types":[]},{"text":"impl Freeze for terakatal","synthetic":true,"types":[]},{"text":"impl Freeze for gigakatal","synthetic":true,"types":[]},{"text":"impl Freeze for megakatal","synthetic":true,"types":[]},{"text":"impl Freeze for kilokatal","synthetic":true,"types":[]},{"text":"impl Freeze for hectokatal","synthetic":true,"types":[]},{"text":"impl Freeze for decakatal","synthetic":true,"types":[]},{"text":"impl Freeze for katal","synthetic":true,"types":[]},{"text":"impl Freeze for decikatal","synthetic":true,"types":[]},{"text":"impl Freeze for centikatal","synthetic":true,"types":[]},{"text":"impl Freeze for millikatal","synthetic":true,"types":[]},{"text":"impl Freeze for microkatal","synthetic":true,"types":[]},{"text":"impl Freeze for nanokatal","synthetic":true,"types":[]},{"text":"impl Freeze for picokatal","synthetic":true,"types":[]},{"text":"impl Freeze for femtokatal","synthetic":true,"types":[]},{"text":"impl Freeze for attokatal","synthetic":true,"types":[]},{"text":"impl Freeze for zeptokatal","synthetic":true,"types":[]},{"text":"impl Freeze for yoctokatal","synthetic":true,"types":[]},{"text":"impl Freeze for yotta_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for zetta_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for exa_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for peta_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for tera_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for giga_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for mega_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for kilo_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for hecto_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for deca_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for deci_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for centi_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for milli_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for micro_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for nano_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for pico_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for femto_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for atto_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for zepto_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for yocto_enzyme_unit","synthetic":true,"types":[]},{"text":"impl Freeze for yottakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zettakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for exakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for petakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for terakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for gigakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for megakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for kilokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for hectokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for decakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for katal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for decikatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for centikatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for millikatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for microkatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for nanokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for picokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for femtokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for attokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zeptokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for yoctokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for kilokatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for kilokatal_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for katal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for katal_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for millikatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for millikatal_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for microkatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for microkatal_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for nanokatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for nanokatal_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for picokatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for picokatal_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for femtokatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for femtokatal_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for kilokatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for katal_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for millikatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for microkatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for nanokatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for picokatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for femtokatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for kilokatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for katal_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for millikatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for microkatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for nanokatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for picokatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for femtokatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for yotta_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zetta_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for exa_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for peta_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for tera_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for giga_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for mega_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for kilo_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for hecto_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for deca_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for deci_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for centi_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for milli_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for micro_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for nano_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for pico_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for femto_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for atto_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zepto_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for yocto_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for kilo_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for kilo_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for milli_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for milli_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for micro_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for micro_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for nano_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for nano_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for pico_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for pico_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for femto_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for femto_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for kilo_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for milli_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for micro_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for nano_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for pico_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for femto_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for kilo_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for milli_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for micro_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for nano_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for pico_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for femto_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for radian_per_meter","synthetic":true,"types":[]},{"text":"impl Freeze for degree_per_meter","synthetic":true,"types":[]},{"text":"impl Freeze for radian_per_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for degree_per_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for yottacoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for zettacoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for exacoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for petacoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for teracoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for gigacoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for megacoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for kilocoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for hectocoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for decacoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for coulomb","synthetic":true,"types":[]},{"text":"impl Freeze for decicoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for centicoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for millicoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for microcoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for nanocoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for picocoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for femtocoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for attocoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for zeptocoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for yoctocoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for petaampere_hour","synthetic":true,"types":[]},{"text":"impl Freeze for teraampere_hour","synthetic":true,"types":[]},{"text":"impl Freeze for gigaampere_hour","synthetic":true,"types":[]},{"text":"impl Freeze for megaampere_hour","synthetic":true,"types":[]},{"text":"impl Freeze for kiloampere_hour","synthetic":true,"types":[]},{"text":"impl Freeze for hectoampere_hour","synthetic":true,"types":[]},{"text":"impl Freeze for decaampere_hour","synthetic":true,"types":[]},{"text":"impl Freeze for ampere_hour","synthetic":true,"types":[]},{"text":"impl Freeze for milliampere_hour","synthetic":true,"types":[]},{"text":"impl Freeze for microampere_hour","synthetic":true,"types":[]},{"text":"impl Freeze for abcoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for faraday","synthetic":true,"types":[]},{"text":"impl Freeze for franklin","synthetic":true,"types":[]},{"text":"impl Freeze for statcoulomb","synthetic":true,"types":[]},{"text":"impl Freeze for yottaampere","synthetic":true,"types":[]},{"text":"impl Freeze for zettaampere","synthetic":true,"types":[]},{"text":"impl Freeze for exaampere","synthetic":true,"types":[]},{"text":"impl Freeze for petaampere","synthetic":true,"types":[]},{"text":"impl Freeze for teraampere","synthetic":true,"types":[]},{"text":"impl Freeze for gigaampere","synthetic":true,"types":[]},{"text":"impl Freeze for megaampere","synthetic":true,"types":[]},{"text":"impl Freeze for kiloampere","synthetic":true,"types":[]},{"text":"impl Freeze for hectoampere","synthetic":true,"types":[]},{"text":"impl Freeze for decaampere","synthetic":true,"types":[]},{"text":"impl Freeze for ampere","synthetic":true,"types":[]},{"text":"impl Freeze for deciampere","synthetic":true,"types":[]},{"text":"impl Freeze for centiampere","synthetic":true,"types":[]},{"text":"impl Freeze for milliampere","synthetic":true,"types":[]},{"text":"impl Freeze for microampere","synthetic":true,"types":[]},{"text":"impl Freeze for nanoampere","synthetic":true,"types":[]},{"text":"impl Freeze for picoampere","synthetic":true,"types":[]},{"text":"impl Freeze for femtoampere","synthetic":true,"types":[]},{"text":"impl Freeze for attoampere","synthetic":true,"types":[]},{"text":"impl Freeze for zeptoampere","synthetic":true,"types":[]},{"text":"impl Freeze for yoctoampere","synthetic":true,"types":[]},{"text":"impl Freeze for abampere","synthetic":true,"types":[]},{"text":"impl Freeze for gilbert","synthetic":true,"types":[]},{"text":"impl Freeze for statampere","synthetic":true,"types":[]},{"text":"impl Freeze for yottavolt","synthetic":true,"types":[]},{"text":"impl Freeze for zettavolt","synthetic":true,"types":[]},{"text":"impl Freeze for exavolt","synthetic":true,"types":[]},{"text":"impl Freeze for petavolt","synthetic":true,"types":[]},{"text":"impl Freeze for teravolt","synthetic":true,"types":[]},{"text":"impl Freeze for gigavolt","synthetic":true,"types":[]},{"text":"impl Freeze for megavolt","synthetic":true,"types":[]},{"text":"impl Freeze for kilovolt","synthetic":true,"types":[]},{"text":"impl Freeze for hectovolt","synthetic":true,"types":[]},{"text":"impl Freeze for decavolt","synthetic":true,"types":[]},{"text":"impl Freeze for volt","synthetic":true,"types":[]},{"text":"impl Freeze for decivolt","synthetic":true,"types":[]},{"text":"impl Freeze for centivolt","synthetic":true,"types":[]},{"text":"impl Freeze for millivolt","synthetic":true,"types":[]},{"text":"impl Freeze for microvolt","synthetic":true,"types":[]},{"text":"impl Freeze for nanovolt","synthetic":true,"types":[]},{"text":"impl Freeze for picovolt","synthetic":true,"types":[]},{"text":"impl Freeze for femtovolt","synthetic":true,"types":[]},{"text":"impl Freeze for attovolt","synthetic":true,"types":[]},{"text":"impl Freeze for zeptovolt","synthetic":true,"types":[]},{"text":"impl Freeze for yoctovolt","synthetic":true,"types":[]},{"text":"impl Freeze for abvolt","synthetic":true,"types":[]},{"text":"impl Freeze for statvolt","synthetic":true,"types":[]},{"text":"impl Freeze for yottasiemens","synthetic":true,"types":[]},{"text":"impl Freeze for zettasiemens","synthetic":true,"types":[]},{"text":"impl Freeze for exasiemens","synthetic":true,"types":[]},{"text":"impl Freeze for petasiemens","synthetic":true,"types":[]},{"text":"impl Freeze for terasiemens","synthetic":true,"types":[]},{"text":"impl Freeze for gigasiemens","synthetic":true,"types":[]},{"text":"impl Freeze for megasiemens","synthetic":true,"types":[]},{"text":"impl Freeze for kilosiemens","synthetic":true,"types":[]},{"text":"impl Freeze for hectosiemens","synthetic":true,"types":[]},{"text":"impl Freeze for decasiemens","synthetic":true,"types":[]},{"text":"impl Freeze for siemens","synthetic":true,"types":[]},{"text":"impl Freeze for mho","synthetic":true,"types":[]},{"text":"impl Freeze for decisiemens","synthetic":true,"types":[]},{"text":"impl Freeze for centisiemens","synthetic":true,"types":[]},{"text":"impl Freeze for millisiemens","synthetic":true,"types":[]},{"text":"impl Freeze for microsiemens","synthetic":true,"types":[]},{"text":"impl Freeze for nanosiemens","synthetic":true,"types":[]},{"text":"impl Freeze for picosiemens","synthetic":true,"types":[]},{"text":"impl Freeze for femtosiemens","synthetic":true,"types":[]},{"text":"impl Freeze for attosiemens","synthetic":true,"types":[]},{"text":"impl Freeze for zeptosiemens","synthetic":true,"types":[]},{"text":"impl Freeze for yoctosiemens","synthetic":true,"types":[]},{"text":"impl Freeze for abmho","synthetic":true,"types":[]},{"text":"impl Freeze for absiemens","synthetic":true,"types":[]},{"text":"impl Freeze for statsiemens","synthetic":true,"types":[]},{"text":"impl Freeze for statmho","synthetic":true,"types":[]},{"text":"impl Freeze for yottaohm","synthetic":true,"types":[]},{"text":"impl Freeze for zettaohm","synthetic":true,"types":[]},{"text":"impl Freeze for exaohm","synthetic":true,"types":[]},{"text":"impl Freeze for petaohm","synthetic":true,"types":[]},{"text":"impl Freeze for teraohm","synthetic":true,"types":[]},{"text":"impl Freeze for gigaohm","synthetic":true,"types":[]},{"text":"impl Freeze for megaohm","synthetic":true,"types":[]},{"text":"impl Freeze for kiloohm","synthetic":true,"types":[]},{"text":"impl Freeze for hectoohm","synthetic":true,"types":[]},{"text":"impl Freeze for decaohm","synthetic":true,"types":[]},{"text":"impl Freeze for ohm","synthetic":true,"types":[]},{"text":"impl Freeze for deciohm","synthetic":true,"types":[]},{"text":"impl Freeze for centiohm","synthetic":true,"types":[]},{"text":"impl Freeze for milliohm","synthetic":true,"types":[]},{"text":"impl Freeze for microohm","synthetic":true,"types":[]},{"text":"impl Freeze for nanoohm","synthetic":true,"types":[]},{"text":"impl Freeze for picoohm","synthetic":true,"types":[]},{"text":"impl Freeze for femtoohm","synthetic":true,"types":[]},{"text":"impl Freeze for attoohm","synthetic":true,"types":[]},{"text":"impl Freeze for zeptoohm","synthetic":true,"types":[]},{"text":"impl Freeze for yoctoohm","synthetic":true,"types":[]},{"text":"impl Freeze for abohm","synthetic":true,"types":[]},{"text":"impl Freeze for statohm","synthetic":true,"types":[]},{"text":"impl Freeze for yottajoule","synthetic":true,"types":[]},{"text":"impl Freeze for zettajoule","synthetic":true,"types":[]},{"text":"impl Freeze for exajoule","synthetic":true,"types":[]},{"text":"impl Freeze for petajoule","synthetic":true,"types":[]},{"text":"impl Freeze for terajoule","synthetic":true,"types":[]},{"text":"impl Freeze for gigajoule","synthetic":true,"types":[]},{"text":"impl Freeze for megajoule","synthetic":true,"types":[]},{"text":"impl Freeze for kilojoule","synthetic":true,"types":[]},{"text":"impl Freeze for hectojoule","synthetic":true,"types":[]},{"text":"impl Freeze for decajoule","synthetic":true,"types":[]},{"text":"impl Freeze for joule","synthetic":true,"types":[]},{"text":"impl Freeze for decijoule","synthetic":true,"types":[]},{"text":"impl Freeze for centijoule","synthetic":true,"types":[]},{"text":"impl Freeze for millijoule","synthetic":true,"types":[]},{"text":"impl Freeze for microjoule","synthetic":true,"types":[]},{"text":"impl Freeze for nanojoule","synthetic":true,"types":[]},{"text":"impl Freeze for picojoule","synthetic":true,"types":[]},{"text":"impl Freeze for femtojoule","synthetic":true,"types":[]},{"text":"impl Freeze for attojoule","synthetic":true,"types":[]},{"text":"impl Freeze for zeptojoule","synthetic":true,"types":[]},{"text":"impl Freeze for yoctojoule","synthetic":true,"types":[]},{"text":"impl Freeze for petawatt_hour","synthetic":true,"types":[]},{"text":"impl Freeze for terawatt_hour","synthetic":true,"types":[]},{"text":"impl Freeze for gigawatt_hour","synthetic":true,"types":[]},{"text":"impl Freeze for megawatt_hour","synthetic":true,"types":[]},{"text":"impl Freeze for kilowatt_hour","synthetic":true,"types":[]},{"text":"impl Freeze for hectowatt_hour","synthetic":true,"types":[]},{"text":"impl Freeze for decawatt_hour","synthetic":true,"types":[]},{"text":"impl Freeze for watt_hour","synthetic":true,"types":[]},{"text":"impl Freeze for milliwatt_hour","synthetic":true,"types":[]},{"text":"impl Freeze for microwatt_hour","synthetic":true,"types":[]},{"text":"impl Freeze for petaelectronvolt","synthetic":true,"types":[]},{"text":"impl Freeze for teraelectronvolt","synthetic":true,"types":[]},{"text":"impl Freeze for gigaelectronvolt","synthetic":true,"types":[]},{"text":"impl Freeze for megaelectronvolt","synthetic":true,"types":[]},{"text":"impl Freeze for kiloelectronvolt","synthetic":true,"types":[]},{"text":"impl Freeze for hectoelectronvolt","synthetic":true,"types":[]},{"text":"impl Freeze for decaelectronvolt","synthetic":true,"types":[]},{"text":"impl Freeze for electronvolt","synthetic":true,"types":[]},{"text":"impl Freeze for btu_it","synthetic":true,"types":[]},{"text":"impl Freeze for btu","synthetic":true,"types":[]},{"text":"impl Freeze for btu_39","synthetic":true,"types":[]},{"text":"impl Freeze for btu_59","synthetic":true,"types":[]},{"text":"impl Freeze for btu_60","synthetic":true,"types":[]},{"text":"impl Freeze for calorie_it","synthetic":true,"types":[]},{"text":"impl Freeze for calorie","synthetic":true,"types":[]},{"text":"impl Freeze for calorie_15","synthetic":true,"types":[]},{"text":"impl Freeze for calorie_20","synthetic":true,"types":[]},{"text":"impl Freeze for calorie_it_nutrition","synthetic":true,"types":[]},{"text":"impl Freeze for calorie_nutrition","synthetic":true,"types":[]},{"text":"impl Freeze for erg","synthetic":true,"types":[]},{"text":"impl Freeze for foot_poundal","synthetic":true,"types":[]},{"text":"impl Freeze for foot_pound","synthetic":true,"types":[]},{"text":"impl Freeze for kilocalorie_it","synthetic":true,"types":[]},{"text":"impl Freeze for kilocalorie","synthetic":true,"types":[]},{"text":"impl Freeze for quad","synthetic":true,"types":[]},{"text":"impl Freeze for therm_ec","synthetic":true,"types":[]},{"text":"impl Freeze for therm_us","synthetic":true,"types":[]},{"text":"impl Freeze for ton_tnt","synthetic":true,"types":[]},{"text":"impl Freeze for watt_second","synthetic":true,"types":[]},{"text":"impl Freeze for yottanewton","synthetic":true,"types":[]},{"text":"impl Freeze for zettanewton","synthetic":true,"types":[]},{"text":"impl Freeze for exanewton","synthetic":true,"types":[]},{"text":"impl Freeze for petanewton","synthetic":true,"types":[]},{"text":"impl Freeze for teranewton","synthetic":true,"types":[]},{"text":"impl Freeze for giganewton","synthetic":true,"types":[]},{"text":"impl Freeze for meganewton","synthetic":true,"types":[]},{"text":"impl Freeze for kilonewton","synthetic":true,"types":[]},{"text":"impl Freeze for hectonewton","synthetic":true,"types":[]},{"text":"impl Freeze for decanewton","synthetic":true,"types":[]},{"text":"impl Freeze for newton","synthetic":true,"types":[]},{"text":"impl Freeze for decinewton","synthetic":true,"types":[]},{"text":"impl Freeze for centinewton","synthetic":true,"types":[]},{"text":"impl Freeze for millinewton","synthetic":true,"types":[]},{"text":"impl Freeze for micronewton","synthetic":true,"types":[]},{"text":"impl Freeze for nanonewton","synthetic":true,"types":[]},{"text":"impl Freeze for piconewton","synthetic":true,"types":[]},{"text":"impl Freeze for femtonewton","synthetic":true,"types":[]},{"text":"impl Freeze for attonewton","synthetic":true,"types":[]},{"text":"impl Freeze for zeptonewton","synthetic":true,"types":[]},{"text":"impl Freeze for yoctonewton","synthetic":true,"types":[]},{"text":"impl Freeze for dyne","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_force","synthetic":true,"types":[]},{"text":"impl Freeze for kip","synthetic":true,"types":[]},{"text":"impl Freeze for ounce_force","synthetic":true,"types":[]},{"text":"impl Freeze for poundal","synthetic":true,"types":[]},{"text":"impl Freeze for pound_force","synthetic":true,"types":[]},{"text":"impl Freeze for ton_force","synthetic":true,"types":[]},{"text":"impl Freeze for yottahertz","synthetic":true,"types":[]},{"text":"impl Freeze for zettahertz","synthetic":true,"types":[]},{"text":"impl Freeze for exahertz","synthetic":true,"types":[]},{"text":"impl Freeze for petahertz","synthetic":true,"types":[]},{"text":"impl Freeze for terahertz","synthetic":true,"types":[]},{"text":"impl Freeze for gigahertz","synthetic":true,"types":[]},{"text":"impl Freeze for megahertz","synthetic":true,"types":[]},{"text":"impl Freeze for kilohertz","synthetic":true,"types":[]},{"text":"impl Freeze for hectohertz","synthetic":true,"types":[]},{"text":"impl Freeze for decahertz","synthetic":true,"types":[]},{"text":"impl Freeze for hertz","synthetic":true,"types":[]},{"text":"impl Freeze for decihertz","synthetic":true,"types":[]},{"text":"impl Freeze for centihertz","synthetic":true,"types":[]},{"text":"impl Freeze for millihertz","synthetic":true,"types":[]},{"text":"impl Freeze for microhertz","synthetic":true,"types":[]},{"text":"impl Freeze for nanohertz","synthetic":true,"types":[]},{"text":"impl Freeze for picohertz","synthetic":true,"types":[]},{"text":"impl Freeze for femtohertz","synthetic":true,"types":[]},{"text":"impl Freeze for attohertz","synthetic":true,"types":[]},{"text":"impl Freeze for zeptohertz","synthetic":true,"types":[]},{"text":"impl Freeze for yoctohertz","synthetic":true,"types":[]},{"text":"impl Freeze for cycle_per_day","synthetic":true,"types":[]},{"text":"impl Freeze for cycle_per_hour","synthetic":true,"types":[]},{"text":"impl Freeze for cycle_per_minute","synthetic":true,"types":[]},{"text":"impl Freeze for cycle_per_shake","synthetic":true,"types":[]},{"text":"impl Freeze for cycle_per_year","synthetic":true,"types":[]},{"text":"impl Freeze for yottagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zettagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for exagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for petagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for teragram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for gigagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for megagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for hectogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for decagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for gram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for decigram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for centigram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for milligram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for microgram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for nanogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for picogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for femtogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for attogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zeptogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for yoctogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for yottajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zettajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for exajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for petajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for terajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for gigajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for megajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for kilojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for hectojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for decajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for decijoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for centijoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for millijoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for microjoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for nanojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for picojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for femtojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for attojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zeptojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for yoctojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for kilojoule_per_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for millijoule_per_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for btu_per_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for btu_it_per_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for yottawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zettawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for exawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for petawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for terawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for gigawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for megawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for kilowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for hectowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for decawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for watt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for deciwatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for centiwatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for milliwatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for microwatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for nanowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for picowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for femtowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for attowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zeptowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for yoctowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for yottagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zettagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for exagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for petagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for teragram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for gigagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for megagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for hectogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for decagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for gram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for decigram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for centigram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for milligram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for microgram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for nanogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for picogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for femtogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for attogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zeptogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for yoctogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_per_second_cubed_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for yottawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zettawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for exawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for petawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for terawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for gigawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for megawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for kilowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for hectowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for decawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for watt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for deciwatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for centiwatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for milliwatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for microwatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for nanowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for picowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for femtowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for attowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zeptowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for yoctowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for watt_per_square_kilometer_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for watt_per_square_meter_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for watt_per_square_centimeter_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for watt_per_square_millimeter_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_second_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_second_square_meter_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for btu_it_per_hour_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for btu_it_per_hour_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for btu_it_per_minute_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for btu_it_per_minute_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for btu_it_per_second_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for btu_it_per_second_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for btu_per_hour_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for btu_per_hour_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for btu_per_minute_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for btu_per_minute_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for btu_per_second_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for btu_per_second_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for yottahenry","synthetic":true,"types":[]},{"text":"impl Freeze for zettahenry","synthetic":true,"types":[]},{"text":"impl Freeze for exahenry","synthetic":true,"types":[]},{"text":"impl Freeze for petahenry","synthetic":true,"types":[]},{"text":"impl Freeze for terahenry","synthetic":true,"types":[]},{"text":"impl Freeze for gigahenry","synthetic":true,"types":[]},{"text":"impl Freeze for megahenry","synthetic":true,"types":[]},{"text":"impl Freeze for kilohenry","synthetic":true,"types":[]},{"text":"impl Freeze for hectohenry","synthetic":true,"types":[]},{"text":"impl Freeze for decahenry","synthetic":true,"types":[]},{"text":"impl Freeze for henry","synthetic":true,"types":[]},{"text":"impl Freeze for decihenry","synthetic":true,"types":[]},{"text":"impl Freeze for centihenry","synthetic":true,"types":[]},{"text":"impl Freeze for millihenry","synthetic":true,"types":[]},{"text":"impl Freeze for microhenry","synthetic":true,"types":[]},{"text":"impl Freeze for nanohenry","synthetic":true,"types":[]},{"text":"impl Freeze for picohenry","synthetic":true,"types":[]},{"text":"impl Freeze for femtohenry","synthetic":true,"types":[]},{"text":"impl Freeze for attohenry","synthetic":true,"types":[]},{"text":"impl Freeze for zeptohenry","synthetic":true,"types":[]},{"text":"impl Freeze for yoctohenry","synthetic":true,"types":[]},{"text":"impl Freeze for abhenry","synthetic":true,"types":[]},{"text":"impl Freeze for stathenry","synthetic":true,"types":[]},{"text":"impl Freeze for yobibit","synthetic":true,"types":[]},{"text":"impl Freeze for yottabit","synthetic":true,"types":[]},{"text":"impl Freeze for zebibit","synthetic":true,"types":[]},{"text":"impl Freeze for zettabit","synthetic":true,"types":[]},{"text":"impl Freeze for exbibit","synthetic":true,"types":[]},{"text":"impl Freeze for exabit","synthetic":true,"types":[]},{"text":"impl Freeze for pebibit","synthetic":true,"types":[]},{"text":"impl Freeze for petabit","synthetic":true,"types":[]},{"text":"impl Freeze for tebibit","synthetic":true,"types":[]},{"text":"impl Freeze for terabit","synthetic":true,"types":[]},{"text":"impl Freeze for gibibit","synthetic":true,"types":[]},{"text":"impl Freeze for gigabit","synthetic":true,"types":[]},{"text":"impl Freeze for mebibit","synthetic":true,"types":[]},{"text":"impl Freeze for megabit","synthetic":true,"types":[]},{"text":"impl Freeze for kibibit","synthetic":true,"types":[]},{"text":"impl Freeze for kilobit","synthetic":true,"types":[]},{"text":"impl Freeze for bit","synthetic":true,"types":[]},{"text":"impl Freeze for yobibyte","synthetic":true,"types":[]},{"text":"impl Freeze for yottabyte","synthetic":true,"types":[]},{"text":"impl Freeze for zebibyte","synthetic":true,"types":[]},{"text":"impl Freeze for zettabyte","synthetic":true,"types":[]},{"text":"impl Freeze for exbibyte","synthetic":true,"types":[]},{"text":"impl Freeze for exabyte","synthetic":true,"types":[]},{"text":"impl Freeze for pebibyte","synthetic":true,"types":[]},{"text":"impl Freeze for petabyte","synthetic":true,"types":[]},{"text":"impl Freeze for tebibyte","synthetic":true,"types":[]},{"text":"impl Freeze for terabyte","synthetic":true,"types":[]},{"text":"impl Freeze for gibibyte","synthetic":true,"types":[]},{"text":"impl Freeze for gigabyte","synthetic":true,"types":[]},{"text":"impl Freeze for mebibyte","synthetic":true,"types":[]},{"text":"impl Freeze for megabyte","synthetic":true,"types":[]},{"text":"impl Freeze for kibibyte","synthetic":true,"types":[]},{"text":"impl Freeze for kilobyte","synthetic":true,"types":[]},{"text":"impl Freeze for byte","synthetic":true,"types":[]},{"text":"impl Freeze for octet","synthetic":true,"types":[]},{"text":"impl Freeze for nibble","synthetic":true,"types":[]},{"text":"impl Freeze for crumb","synthetic":true,"types":[]},{"text":"impl Freeze for shannon","synthetic":true,"types":[]},{"text":"impl Freeze for natural_unit_of_information","synthetic":true,"types":[]},{"text":"impl Freeze for trit","synthetic":true,"types":[]},{"text":"impl Freeze for hartley","synthetic":true,"types":[]},{"text":"impl Freeze for deciban","synthetic":true,"types":[]},{"text":"impl Freeze for yobibit_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for yottabit_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for zebibit_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for zettabit_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for exbibit_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for exabit_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for pebibit_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for petabit_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for tebibit_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for terabit_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for gibibit_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for gigabit_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for mebibit_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for megabit_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kibibit_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilobit_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for bit_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for yobibyte_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for yottabyte_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for zebibyte_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for zettabyte_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for exbibyte_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for exabyte_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for pebibyte_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for petabyte_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for tebibyte_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for terabyte_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for gibibyte_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for gigabyte_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for mebibyte_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for megabyte_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kibibyte_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilobyte_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for byte_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for octet_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for yottameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for zettameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for exameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for petameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for terameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for gigameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for megameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for kilometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for hectometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for decameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for meter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for decimeter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for centimeter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for millimeter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for micrometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for nanometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for picometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for femtometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for attometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for zeptometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for yoctometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for foot_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for inch_per_second_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for kilometer_per_minute_cubed","synthetic":true,"types":[]},{"text":"impl Freeze for yottameter","synthetic":true,"types":[]},{"text":"impl Freeze for zettameter","synthetic":true,"types":[]},{"text":"impl Freeze for exameter","synthetic":true,"types":[]},{"text":"impl Freeze for petameter","synthetic":true,"types":[]},{"text":"impl Freeze for terameter","synthetic":true,"types":[]},{"text":"impl Freeze for gigameter","synthetic":true,"types":[]},{"text":"impl Freeze for megameter","synthetic":true,"types":[]},{"text":"impl Freeze for kilometer","synthetic":true,"types":[]},{"text":"impl Freeze for hectometer","synthetic":true,"types":[]},{"text":"impl Freeze for decameter","synthetic":true,"types":[]},{"text":"impl Freeze for meter","synthetic":true,"types":[]},{"text":"impl Freeze for decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for micrometer","synthetic":true,"types":[]},{"text":"impl Freeze for nanometer","synthetic":true,"types":[]},{"text":"impl Freeze for picometer","synthetic":true,"types":[]},{"text":"impl Freeze for femtometer","synthetic":true,"types":[]},{"text":"impl Freeze for attometer","synthetic":true,"types":[]},{"text":"impl Freeze for zeptometer","synthetic":true,"types":[]},{"text":"impl Freeze for yoctometer","synthetic":true,"types":[]},{"text":"impl Freeze for angstrom","synthetic":true,"types":[]},{"text":"impl Freeze for astronomical_unit","synthetic":true,"types":[]},{"text":"impl Freeze for chain","synthetic":true,"types":[]},{"text":"impl Freeze for fathom","synthetic":true,"types":[]},{"text":"impl Freeze for fermi","synthetic":true,"types":[]},{"text":"impl Freeze for foot","synthetic":true,"types":[]},{"text":"impl Freeze for foot_survey","synthetic":true,"types":[]},{"text":"impl Freeze for inch","synthetic":true,"types":[]},{"text":"impl Freeze for light_year","synthetic":true,"types":[]},{"text":"impl Freeze for microinch","synthetic":true,"types":[]},{"text":"impl Freeze for micron","synthetic":true,"types":[]},{"text":"impl Freeze for mil","synthetic":true,"types":[]},{"text":"impl Freeze for mile","synthetic":true,"types":[]},{"text":"impl Freeze for mile_survey","synthetic":true,"types":[]},{"text":"impl Freeze for nautical_mile","synthetic":true,"types":[]},{"text":"impl Freeze for parsec","synthetic":true,"types":[]},{"text":"impl Freeze for pica_computer","synthetic":true,"types":[]},{"text":"impl Freeze for pica_printers","synthetic":true,"types":[]},{"text":"impl Freeze for point_computer","synthetic":true,"types":[]},{"text":"impl Freeze for point_printers","synthetic":true,"types":[]},{"text":"impl Freeze for rod","synthetic":true,"types":[]},{"text":"impl Freeze for yard","synthetic":true,"types":[]},{"text":"impl Freeze for yottacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zettacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for exacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for petacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for teracandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for gigacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for megacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for kilocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for hectocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for decacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for candela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for decicandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for centicandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for millicandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for microcandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for nanocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for picocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for femtocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for attocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zeptocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for yoctocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for candela_per_square_picometer","synthetic":true,"types":[]},{"text":"impl Freeze for candela_per_square_nanometer","synthetic":true,"types":[]},{"text":"impl Freeze for candela_per_square_micrometer","synthetic":true,"types":[]},{"text":"impl Freeze for candela_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for candela_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for candela_per_square_kilometer","synthetic":true,"types":[]},{"text":"impl Freeze for candela_per_square_megameter","synthetic":true,"types":[]},{"text":"impl Freeze for candela_per_square_gigameter","synthetic":true,"types":[]},{"text":"impl Freeze for candela_per_square_terameter","synthetic":true,"types":[]},{"text":"impl Freeze for candela_per_square_inch","synthetic":true,"types":[]},{"text":"impl Freeze for candela_per_square_foot","synthetic":true,"types":[]},{"text":"impl Freeze for footlambert","synthetic":true,"types":[]},{"text":"impl Freeze for lambert","synthetic":true,"types":[]},{"text":"impl Freeze for stilb","synthetic":true,"types":[]},{"text":"impl Freeze for yottacandela","synthetic":true,"types":[]},{"text":"impl Freeze for zettacandela","synthetic":true,"types":[]},{"text":"impl Freeze for exacandela","synthetic":true,"types":[]},{"text":"impl Freeze for petacandela","synthetic":true,"types":[]},{"text":"impl Freeze for teracandela","synthetic":true,"types":[]},{"text":"impl Freeze for gigacandela","synthetic":true,"types":[]},{"text":"impl Freeze for megacandela","synthetic":true,"types":[]},{"text":"impl Freeze for kilocandela","synthetic":true,"types":[]},{"text":"impl Freeze for hectocandela","synthetic":true,"types":[]},{"text":"impl Freeze for decacandela","synthetic":true,"types":[]},{"text":"impl Freeze for candela","synthetic":true,"types":[]},{"text":"impl Freeze for decicandela","synthetic":true,"types":[]},{"text":"impl Freeze for centicandela","synthetic":true,"types":[]},{"text":"impl Freeze for millicandela","synthetic":true,"types":[]},{"text":"impl Freeze for microcandela","synthetic":true,"types":[]},{"text":"impl Freeze for nanocandela","synthetic":true,"types":[]},{"text":"impl Freeze for picocandela","synthetic":true,"types":[]},{"text":"impl Freeze for femtocandela","synthetic":true,"types":[]},{"text":"impl Freeze for attocandela","synthetic":true,"types":[]},{"text":"impl Freeze for zeptocandela","synthetic":true,"types":[]},{"text":"impl Freeze for yoctocandela","synthetic":true,"types":[]},{"text":"impl Freeze for yottaweber","synthetic":true,"types":[]},{"text":"impl Freeze for zettaweber","synthetic":true,"types":[]},{"text":"impl Freeze for exaweber","synthetic":true,"types":[]},{"text":"impl Freeze for petaweber","synthetic":true,"types":[]},{"text":"impl Freeze for teraweber","synthetic":true,"types":[]},{"text":"impl Freeze for gigaweber","synthetic":true,"types":[]},{"text":"impl Freeze for megaweber","synthetic":true,"types":[]},{"text":"impl Freeze for kiloweber","synthetic":true,"types":[]},{"text":"impl Freeze for hectoweber","synthetic":true,"types":[]},{"text":"impl Freeze for decaweber","synthetic":true,"types":[]},{"text":"impl Freeze for weber","synthetic":true,"types":[]},{"text":"impl Freeze for deciweber","synthetic":true,"types":[]},{"text":"impl Freeze for centiweber","synthetic":true,"types":[]},{"text":"impl Freeze for milliweber","synthetic":true,"types":[]},{"text":"impl Freeze for microweber","synthetic":true,"types":[]},{"text":"impl Freeze for nanoweber","synthetic":true,"types":[]},{"text":"impl Freeze for picoweber","synthetic":true,"types":[]},{"text":"impl Freeze for femtoweber","synthetic":true,"types":[]},{"text":"impl Freeze for attoweber","synthetic":true,"types":[]},{"text":"impl Freeze for zeptoweber","synthetic":true,"types":[]},{"text":"impl Freeze for yoctoweber","synthetic":true,"types":[]},{"text":"impl Freeze for maxwell","synthetic":true,"types":[]},{"text":"impl Freeze for yottatesla","synthetic":true,"types":[]},{"text":"impl Freeze for zettatesla","synthetic":true,"types":[]},{"text":"impl Freeze for exatesla","synthetic":true,"types":[]},{"text":"impl Freeze for petatesla","synthetic":true,"types":[]},{"text":"impl Freeze for teratesla","synthetic":true,"types":[]},{"text":"impl Freeze for gigatesla","synthetic":true,"types":[]},{"text":"impl Freeze for megatesla","synthetic":true,"types":[]},{"text":"impl Freeze for kilotesla","synthetic":true,"types":[]},{"text":"impl Freeze for hectotesla","synthetic":true,"types":[]},{"text":"impl Freeze for decatesla","synthetic":true,"types":[]},{"text":"impl Freeze for tesla","synthetic":true,"types":[]},{"text":"impl Freeze for decitesla","synthetic":true,"types":[]},{"text":"impl Freeze for centitesla","synthetic":true,"types":[]},{"text":"impl Freeze for millitesla","synthetic":true,"types":[]},{"text":"impl Freeze for microtesla","synthetic":true,"types":[]},{"text":"impl Freeze for nanotesla","synthetic":true,"types":[]},{"text":"impl Freeze for picotesla","synthetic":true,"types":[]},{"text":"impl Freeze for femtotesla","synthetic":true,"types":[]},{"text":"impl Freeze for attotesla","synthetic":true,"types":[]},{"text":"impl Freeze for zeptotesla","synthetic":true,"types":[]},{"text":"impl Freeze for yoctotesla","synthetic":true,"types":[]},{"text":"impl Freeze for gamma","synthetic":true,"types":[]},{"text":"impl Freeze for gauss","synthetic":true,"types":[]},{"text":"impl Freeze for yottagram","synthetic":true,"types":[]},{"text":"impl Freeze for zettagram","synthetic":true,"types":[]},{"text":"impl Freeze for exagram","synthetic":true,"types":[]},{"text":"impl Freeze for petagram","synthetic":true,"types":[]},{"text":"impl Freeze for teragram","synthetic":true,"types":[]},{"text":"impl Freeze for gigagram","synthetic":true,"types":[]},{"text":"impl Freeze for megagram","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram","synthetic":true,"types":[]},{"text":"impl Freeze for hectogram","synthetic":true,"types":[]},{"text":"impl Freeze for decagram","synthetic":true,"types":[]},{"text":"impl Freeze for gram","synthetic":true,"types":[]},{"text":"impl Freeze for decigram","synthetic":true,"types":[]},{"text":"impl Freeze for centigram","synthetic":true,"types":[]},{"text":"impl Freeze for milligram","synthetic":true,"types":[]},{"text":"impl Freeze for microgram","synthetic":true,"types":[]},{"text":"impl Freeze for nanogram","synthetic":true,"types":[]},{"text":"impl Freeze for picogram","synthetic":true,"types":[]},{"text":"impl Freeze for femtogram","synthetic":true,"types":[]},{"text":"impl Freeze for attogram","synthetic":true,"types":[]},{"text":"impl Freeze for zeptogram","synthetic":true,"types":[]},{"text":"impl Freeze for yoctogram","synthetic":true,"types":[]},{"text":"impl Freeze for carat","synthetic":true,"types":[]},{"text":"impl Freeze for grain","synthetic":true,"types":[]},{"text":"impl Freeze for hundredweight_long","synthetic":true,"types":[]},{"text":"impl Freeze for hundredweight_short","synthetic":true,"types":[]},{"text":"impl Freeze for ounce","synthetic":true,"types":[]},{"text":"impl Freeze for ounce_troy","synthetic":true,"types":[]},{"text":"impl Freeze for pennyweight","synthetic":true,"types":[]},{"text":"impl Freeze for pound","synthetic":true,"types":[]},{"text":"impl Freeze for pound_troy","synthetic":true,"types":[]},{"text":"impl Freeze for slug","synthetic":true,"types":[]},{"text":"impl Freeze for ton_assay","synthetic":true,"types":[]},{"text":"impl Freeze for ton_long","synthetic":true,"types":[]},{"text":"impl Freeze for ton_short","synthetic":true,"types":[]},{"text":"impl Freeze for ton","synthetic":true,"types":[]},{"text":"impl Freeze for yottagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zettagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for exagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for petagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for teragram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for gigagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for megagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for hectogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for decagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for gram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for decigram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for centigram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for milligram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for microgram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for nanogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for picogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for femtogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for attogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zeptogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for yoctogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for gram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for gram_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for milligram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for milligram_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for microgram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for microgram_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for nanogram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for nanogram_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for picogram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for picogram_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for femtogram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for femtogram_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for gram_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for milligram_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for microgram_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for nanogram_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for picogram_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for femtogram_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for gram_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for milligram_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for microgram_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for nanogram_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for picogram_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for femtogram_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for yottagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zettagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for exagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for petagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for teragram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for gigagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for megagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for hectogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for decagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for gram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for decigram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for centigram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for milligram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for microgram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for nanogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for picogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for femtogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for attogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zeptogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for yoctogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for carat_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for grain_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for hundredweight_long_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for hundredweight_short_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for ounce_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for ounce_troy_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for pennyweight_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for pound_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for pound_troy_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for slug_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for ton_assay_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for ton_long_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for ton_short_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for ton_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for grain_per_gallon","synthetic":true,"types":[]},{"text":"impl Freeze for gram_per_cubic_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for ounce_per_cubic_inch","synthetic":true,"types":[]},{"text":"impl Freeze for ounce_per_gallon_imperial","synthetic":true,"types":[]},{"text":"impl Freeze for ounce_per_gallon","synthetic":true,"types":[]},{"text":"impl Freeze for pound_per_cubic_foot","synthetic":true,"types":[]},{"text":"impl Freeze for pound_per_cubic_inch","synthetic":true,"types":[]},{"text":"impl Freeze for pound_per_cubic_yard","synthetic":true,"types":[]},{"text":"impl Freeze for pound_per_gallon_imperial","synthetic":true,"types":[]},{"text":"impl Freeze for pound_per_gallon","synthetic":true,"types":[]},{"text":"impl Freeze for slug_per_cubic_foot","synthetic":true,"types":[]},{"text":"impl Freeze for ton_long_per_cubic_yard","synthetic":true,"types":[]},{"text":"impl Freeze for ton_short_per_cubic_yard","synthetic":true,"types":[]},{"text":"impl Freeze for yottagram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for zettagram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for exagram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for petagram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for teragram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for gigagram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for megagram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for hectogram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for decagram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for gram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for decigram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for centigram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for milligram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for microgram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for nanogram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for picogram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for femtogram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for attogram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for zeptogram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for yoctogram_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_per_minute","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_per_hour","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_per_day","synthetic":true,"types":[]},{"text":"impl Freeze for gram_per_minute","synthetic":true,"types":[]},{"text":"impl Freeze for gram_per_hour","synthetic":true,"types":[]},{"text":"impl Freeze for gram_per_day","synthetic":true,"types":[]},{"text":"impl Freeze for carat_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for grain_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for hundredweight_long_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for hundredweight_short_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for ounce_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for ounce_troy_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for pennyweight_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for pound_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for pound_per_minute","synthetic":true,"types":[]},{"text":"impl Freeze for pound_per_hour","synthetic":true,"types":[]},{"text":"impl Freeze for pound_per_day","synthetic":true,"types":[]},{"text":"impl Freeze for pound_troy_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for slug_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for ton_assay_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for ton_long_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for ton_short_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for ton_short_per_hour","synthetic":true,"types":[]},{"text":"impl Freeze for ton_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for yottamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zettamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for examole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for petamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for teramole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for gigamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for megamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for kilomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for hectomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for decamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for mole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for decimole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for centimole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for millimole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for micromole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for nanomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for picomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for femtomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for attomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zeptomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for yoctomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for kilomole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for kilomole_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for mole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for mole_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for millimole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for millimole_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for micromole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for micromole_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for nanomole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for nanomole_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for picomole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for picomole_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for femtomole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for femtomole_per_liter","synthetic":true,"types":[]},{"text":"impl Freeze for kilomole_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for mole_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for millimole_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for micromole_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for nanomole_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for picomole_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for femtomole_per_deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for kilomole_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for mole_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for millimole_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for micromole_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for nanomole_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for picomole_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for femtomole_per_milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_square_meter_per_second_squared_mole","synthetic":true,"types":[]},{"text":"impl Freeze for yottajoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for zettajoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for exajoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for petajoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for terajoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for gigajoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for megajoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for kilojoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for hectojoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for decajoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for decijoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for centijoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for millijoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for microjoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for nanojoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for picojoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for femtojoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for attojoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for zeptojoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for yoctojoule_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for petawatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for terawatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for gigawatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for megawatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for kilowatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for hectowatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for decawatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for watt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for milliwatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for microwatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for btu_it_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for btu_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for btu_39_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for btu_59_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for btu_60_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for calorie_it_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for calorie_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for calorie_15_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for calorie_20_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for calorie_it_nutrition_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for calorie_nutrition_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for electronvolt_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for erg_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for foot_poundal_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for foot_pound_force_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for kilocalorie_it_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for kilocalorie_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for quad_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for therm_ec_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for therm_us_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for ton_tnt_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for watt_second_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for yottagram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for zettagram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for exagram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for petagram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for teragram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for gigagram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for megagram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for hectogram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for decagram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for gram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for decigram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for centigram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for milligram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for microgram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for nanogram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for picogram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for femtogram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for attogram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for zeptogram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for yoctogram_per_mole","synthetic":true,"types":[]},{"text":"impl Freeze for yottagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for zettagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for exagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for petagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for teragram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for gigagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for megagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for hectogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for decagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for gram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for decigram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for centigram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for milligram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for microgram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for nanogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for picogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for femtogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for attogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for zeptogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for yoctogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_yottameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_zettameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_exameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_petameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_terameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_gigameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_megameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_kilometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_hectometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_decameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_decimeter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_centimeter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_millimeter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_micrometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_nanometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_picometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_femtometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_attometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_zeptometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_yoctometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for ton_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_meter_per_minute","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_meter_per_hour","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_meter_per_day","synthetic":true,"types":[]},{"text":"impl Freeze for slug_foot_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for slug_inch_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for pound_foot_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for pound_inch_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for yottawatt","synthetic":true,"types":[]},{"text":"impl Freeze for zettawatt","synthetic":true,"types":[]},{"text":"impl Freeze for exawatt","synthetic":true,"types":[]},{"text":"impl Freeze for petawatt","synthetic":true,"types":[]},{"text":"impl Freeze for terawatt","synthetic":true,"types":[]},{"text":"impl Freeze for gigawatt","synthetic":true,"types":[]},{"text":"impl Freeze for megawatt","synthetic":true,"types":[]},{"text":"impl Freeze for kilowatt","synthetic":true,"types":[]},{"text":"impl Freeze for hectowatt","synthetic":true,"types":[]},{"text":"impl Freeze for decawatt","synthetic":true,"types":[]},{"text":"impl Freeze for watt","synthetic":true,"types":[]},{"text":"impl Freeze for deciwatt","synthetic":true,"types":[]},{"text":"impl Freeze for centiwatt","synthetic":true,"types":[]},{"text":"impl Freeze for milliwatt","synthetic":true,"types":[]},{"text":"impl Freeze for microwatt","synthetic":true,"types":[]},{"text":"impl Freeze for nanowatt","synthetic":true,"types":[]},{"text":"impl Freeze for picowatt","synthetic":true,"types":[]},{"text":"impl Freeze for femtowatt","synthetic":true,"types":[]},{"text":"impl Freeze for attowatt","synthetic":true,"types":[]},{"text":"impl Freeze for zeptowatt","synthetic":true,"types":[]},{"text":"impl Freeze for yoctowatt","synthetic":true,"types":[]},{"text":"impl Freeze for erg_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for foot_pound_per_hour","synthetic":true,"types":[]},{"text":"impl Freeze for foot_pound_per_minute","synthetic":true,"types":[]},{"text":"impl Freeze for foot_pound_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for horsepower","synthetic":true,"types":[]},{"text":"impl Freeze for horsepower_boiler","synthetic":true,"types":[]},{"text":"impl Freeze for horsepower_electric","synthetic":true,"types":[]},{"text":"impl Freeze for horsepower_metric","synthetic":true,"types":[]},{"text":"impl Freeze for horsepower_imperial","synthetic":true,"types":[]},{"text":"impl Freeze for hydraulic_horsepower","synthetic":true,"types":[]},{"text":"impl Freeze for yottapascal","synthetic":true,"types":[]},{"text":"impl Freeze for zettapascal","synthetic":true,"types":[]},{"text":"impl Freeze for exapascal","synthetic":true,"types":[]},{"text":"impl Freeze for petapascal","synthetic":true,"types":[]},{"text":"impl Freeze for terapascal","synthetic":true,"types":[]},{"text":"impl Freeze for gigapascal","synthetic":true,"types":[]},{"text":"impl Freeze for megapascal","synthetic":true,"types":[]},{"text":"impl Freeze for kilopascal","synthetic":true,"types":[]},{"text":"impl Freeze for hectopascal","synthetic":true,"types":[]},{"text":"impl Freeze for decapascal","synthetic":true,"types":[]},{"text":"impl Freeze for pascal","synthetic":true,"types":[]},{"text":"impl Freeze for decipascal","synthetic":true,"types":[]},{"text":"impl Freeze for centipascal","synthetic":true,"types":[]},{"text":"impl Freeze for millipascal","synthetic":true,"types":[]},{"text":"impl Freeze for micropascal","synthetic":true,"types":[]},{"text":"impl Freeze for nanopascal","synthetic":true,"types":[]},{"text":"impl Freeze for picopascal","synthetic":true,"types":[]},{"text":"impl Freeze for femtopascal","synthetic":true,"types":[]},{"text":"impl Freeze for attopascal","synthetic":true,"types":[]},{"text":"impl Freeze for zeptopascal","synthetic":true,"types":[]},{"text":"impl Freeze for yoctopascal","synthetic":true,"types":[]},{"text":"impl Freeze for atmosphere","synthetic":true,"types":[]},{"text":"impl Freeze for atmosphere_technical","synthetic":true,"types":[]},{"text":"impl Freeze for bar","synthetic":true,"types":[]},{"text":"impl Freeze for centimeter_of_mercury_0","synthetic":true,"types":[]},{"text":"impl Freeze for centimeter_of_mercury","synthetic":true,"types":[]},{"text":"impl Freeze for centimeter_of_water_4","synthetic":true,"types":[]},{"text":"impl Freeze for centimeter_of_water","synthetic":true,"types":[]},{"text":"impl Freeze for dyne_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for foot_of_mercury","synthetic":true,"types":[]},{"text":"impl Freeze for foot_of_water_39_2","synthetic":true,"types":[]},{"text":"impl Freeze for foot_of_water","synthetic":true,"types":[]},{"text":"impl Freeze for gram_force_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for inch_of_mercury_32","synthetic":true,"types":[]},{"text":"impl Freeze for inch_of_mercury_60","synthetic":true,"types":[]},{"text":"impl Freeze for inch_of_mercury","synthetic":true,"types":[]},{"text":"impl Freeze for inch_of_water_39_2","synthetic":true,"types":[]},{"text":"impl Freeze for inch_of_water_60","synthetic":true,"types":[]},{"text":"impl Freeze for inch_of_water","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_force_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_force_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_force_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for kip_per_square_inch","synthetic":true,"types":[]},{"text":"impl Freeze for millibar","synthetic":true,"types":[]},{"text":"impl Freeze for millimeter_of_mercury","synthetic":true,"types":[]},{"text":"impl Freeze for millimeter_of_water","synthetic":true,"types":[]},{"text":"impl Freeze for millitorr","synthetic":true,"types":[]},{"text":"impl Freeze for poundal_per_square_foot","synthetic":true,"types":[]},{"text":"impl Freeze for pound_force_per_square_foot","synthetic":true,"types":[]},{"text":"impl Freeze for pound_force_per_square_inch","synthetic":true,"types":[]},{"text":"impl Freeze for psi","synthetic":true,"types":[]},{"text":"impl Freeze for torr","synthetic":true,"types":[]},{"text":"impl Freeze for ratio","synthetic":true,"types":[]},{"text":"impl Freeze for part_per_hundred","synthetic":true,"types":[]},{"text":"impl Freeze for percent","synthetic":true,"types":[]},{"text":"impl Freeze for part_per_thousand","synthetic":true,"types":[]},{"text":"impl Freeze for per_mille","synthetic":true,"types":[]},{"text":"impl Freeze for part_per_ten_thousand","synthetic":true,"types":[]},{"text":"impl Freeze for basis_point","synthetic":true,"types":[]},{"text":"impl Freeze for part_per_million","synthetic":true,"types":[]},{"text":"impl Freeze for part_per_billion","synthetic":true,"types":[]},{"text":"impl Freeze for part_per_trillion","synthetic":true,"types":[]},{"text":"impl Freeze for part_per_quadrillion","synthetic":true,"types":[]},{"text":"impl Freeze for square_kilometer_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for square_centimeter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for square_millimeter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for square_micrometer_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for yottajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zettajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for exajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for petajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for terajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for gigajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for megajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for kilojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for hectojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for decajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for decijoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for centijoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for millijoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for microjoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for nanojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for picojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for femtojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for attojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zeptojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for yoctojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for kilojoule_per_kilogram_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for kilojoule_per_gram_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_kilogram_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_gram_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for millijoule_per_kilogram_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for millijoule_per_gram_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for btu_per_ounce_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for btu_it_per_ounce_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for btu_per_pound_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for btu_it_per_pound_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for btu_per_ton_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for btu_it_per_ton_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for steradian","synthetic":true,"types":[]},{"text":"impl Freeze for spat","synthetic":true,"types":[]},{"text":"impl Freeze for square_degree","synthetic":true,"types":[]},{"text":"impl Freeze for square_minute","synthetic":true,"types":[]},{"text":"impl Freeze for square_second","synthetic":true,"types":[]},{"text":"impl Freeze for yottajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zettajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for exajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for petajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for terajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for gigajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for megajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for kilojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for hectojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for decajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for decijoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for centijoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for millijoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for microjoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for nanojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for picojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for femtojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for attojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zeptojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for yoctojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl Freeze for gigajoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for megajoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for kilojoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for hectojoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for decajoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for decijoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for centijoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for millijoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for microjoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for nanojoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for gigajoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for megajoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for kilojoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for hectojoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for decajoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for joule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for decijoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for centijoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for millijoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for microjoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for nanojoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for yottakelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zettakelvin","synthetic":true,"types":[]},{"text":"impl Freeze for exakelvin","synthetic":true,"types":[]},{"text":"impl Freeze for petakelvin","synthetic":true,"types":[]},{"text":"impl Freeze for terakelvin","synthetic":true,"types":[]},{"text":"impl Freeze for gigakelvin","synthetic":true,"types":[]},{"text":"impl Freeze for megakelvin","synthetic":true,"types":[]},{"text":"impl Freeze for kilokelvin","synthetic":true,"types":[]},{"text":"impl Freeze for hectokelvin","synthetic":true,"types":[]},{"text":"impl Freeze for decakelvin","synthetic":true,"types":[]},{"text":"impl Freeze for kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for decikelvin","synthetic":true,"types":[]},{"text":"impl Freeze for centikelvin","synthetic":true,"types":[]},{"text":"impl Freeze for millikelvin","synthetic":true,"types":[]},{"text":"impl Freeze for microkelvin","synthetic":true,"types":[]},{"text":"impl Freeze for nanokelvin","synthetic":true,"types":[]},{"text":"impl Freeze for picokelvin","synthetic":true,"types":[]},{"text":"impl Freeze for femtokelvin","synthetic":true,"types":[]},{"text":"impl Freeze for attokelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zeptokelvin","synthetic":true,"types":[]},{"text":"impl Freeze for yoctokelvin","synthetic":true,"types":[]},{"text":"impl Freeze for degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for degree_rankine","synthetic":true,"types":[]},{"text":"impl Freeze for yottagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zettagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for exagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for petagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for teragram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for gigagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for megagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for hectogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for decagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for gram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for decigram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for centigram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for milligram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for microgram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for nanogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for picogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for femtogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for attogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zeptogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for yoctogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for yottawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zettawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for exawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for petawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for terawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for gigawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for megawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for kilowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for hectowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for decawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for watt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for deciwatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for centiwatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for milliwatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for microwatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for nanowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for picowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for femtowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for attowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zeptowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for yoctowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_meter_per_second_cubed_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for kilowatt_per_meter_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for watt_per_meter_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for milliwatt_per_meter_degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for yottakelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zettakelvin","synthetic":true,"types":[]},{"text":"impl Freeze for exakelvin","synthetic":true,"types":[]},{"text":"impl Freeze for petakelvin","synthetic":true,"types":[]},{"text":"impl Freeze for terakelvin","synthetic":true,"types":[]},{"text":"impl Freeze for gigakelvin","synthetic":true,"types":[]},{"text":"impl Freeze for megakelvin","synthetic":true,"types":[]},{"text":"impl Freeze for kilokelvin","synthetic":true,"types":[]},{"text":"impl Freeze for hectokelvin","synthetic":true,"types":[]},{"text":"impl Freeze for decakelvin","synthetic":true,"types":[]},{"text":"impl Freeze for kelvin","synthetic":true,"types":[]},{"text":"impl Freeze for decikelvin","synthetic":true,"types":[]},{"text":"impl Freeze for centikelvin","synthetic":true,"types":[]},{"text":"impl Freeze for millikelvin","synthetic":true,"types":[]},{"text":"impl Freeze for microkelvin","synthetic":true,"types":[]},{"text":"impl Freeze for nanokelvin","synthetic":true,"types":[]},{"text":"impl Freeze for picokelvin","synthetic":true,"types":[]},{"text":"impl Freeze for femtokelvin","synthetic":true,"types":[]},{"text":"impl Freeze for attokelvin","synthetic":true,"types":[]},{"text":"impl Freeze for zeptokelvin","synthetic":true,"types":[]},{"text":"impl Freeze for yoctokelvin","synthetic":true,"types":[]},{"text":"impl Freeze for degree_celsius","synthetic":true,"types":[]},{"text":"impl Freeze for degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl Freeze for degree_rankine","synthetic":true,"types":[]},{"text":"impl Freeze for yottasecond","synthetic":true,"types":[]},{"text":"impl Freeze for zettasecond","synthetic":true,"types":[]},{"text":"impl Freeze for exasecond","synthetic":true,"types":[]},{"text":"impl Freeze for petasecond","synthetic":true,"types":[]},{"text":"impl Freeze for terasecond","synthetic":true,"types":[]},{"text":"impl Freeze for gigasecond","synthetic":true,"types":[]},{"text":"impl Freeze for megasecond","synthetic":true,"types":[]},{"text":"impl Freeze for kilosecond","synthetic":true,"types":[]},{"text":"impl Freeze for hectosecond","synthetic":true,"types":[]},{"text":"impl Freeze for decasecond","synthetic":true,"types":[]},{"text":"impl Freeze for second","synthetic":true,"types":[]},{"text":"impl Freeze for decisecond","synthetic":true,"types":[]},{"text":"impl Freeze for centisecond","synthetic":true,"types":[]},{"text":"impl Freeze for millisecond","synthetic":true,"types":[]},{"text":"impl Freeze for microsecond","synthetic":true,"types":[]},{"text":"impl Freeze for nanosecond","synthetic":true,"types":[]},{"text":"impl Freeze for picosecond","synthetic":true,"types":[]},{"text":"impl Freeze for femtosecond","synthetic":true,"types":[]},{"text":"impl Freeze for attosecond","synthetic":true,"types":[]},{"text":"impl Freeze for zeptosecond","synthetic":true,"types":[]},{"text":"impl Freeze for yoctosecond","synthetic":true,"types":[]},{"text":"impl Freeze for second_sidereal","synthetic":true,"types":[]},{"text":"impl Freeze for day","synthetic":true,"types":[]},{"text":"impl Freeze for day_sidereal","synthetic":true,"types":[]},{"text":"impl Freeze for hour","synthetic":true,"types":[]},{"text":"impl Freeze for hour_sidereal","synthetic":true,"types":[]},{"text":"impl Freeze for minute","synthetic":true,"types":[]},{"text":"impl Freeze for shake","synthetic":true,"types":[]},{"text":"impl Freeze for year","synthetic":true,"types":[]},{"text":"impl Freeze for year_sidereal","synthetic":true,"types":[]},{"text":"impl Freeze for year_tropical","synthetic":true,"types":[]},{"text":"impl Freeze for yottanewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zettanewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for exanewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for petanewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for teranewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for giganewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for meganewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for kilonewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for hectonewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for decanewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for newton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for decinewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for centinewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for millinewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for micronewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for nanonewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for piconewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for femtonewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for attonewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for zeptonewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for yoctonewton_meter","synthetic":true,"types":[]},{"text":"impl Freeze for newton_yottameter","synthetic":true,"types":[]},{"text":"impl Freeze for newton_zettameter","synthetic":true,"types":[]},{"text":"impl Freeze for newton_exameter","synthetic":true,"types":[]},{"text":"impl Freeze for newton_petameter","synthetic":true,"types":[]},{"text":"impl Freeze for newton_terameter","synthetic":true,"types":[]},{"text":"impl Freeze for newton_gigameter","synthetic":true,"types":[]},{"text":"impl Freeze for newton_megameter","synthetic":true,"types":[]},{"text":"impl Freeze for newton_kilometer","synthetic":true,"types":[]},{"text":"impl Freeze for newton_hectometer","synthetic":true,"types":[]},{"text":"impl Freeze for newton_decameter","synthetic":true,"types":[]},{"text":"impl Freeze for newton_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for newton_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for newton_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for newton_micrometer","synthetic":true,"types":[]},{"text":"impl Freeze for newton_nanometer","synthetic":true,"types":[]},{"text":"impl Freeze for newton_picometer","synthetic":true,"types":[]},{"text":"impl Freeze for newton_femtometer","synthetic":true,"types":[]},{"text":"impl Freeze for newton_attometer","synthetic":true,"types":[]},{"text":"impl Freeze for newton_zeptometer","synthetic":true,"types":[]},{"text":"impl Freeze for newton_yoctometer","synthetic":true,"types":[]},{"text":"impl Freeze for dyne_meter","synthetic":true,"types":[]},{"text":"impl Freeze for dyne_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for kilogram_force_meter","synthetic":true,"types":[]},{"text":"impl Freeze for ounce_force_inch","synthetic":true,"types":[]},{"text":"impl Freeze for pound_force_foot","synthetic":true,"types":[]},{"text":"impl Freeze for pound_force_inch","synthetic":true,"types":[]},{"text":"impl Freeze for yottameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for zettameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for exameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for petameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for terameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for gigameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for megameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for hectometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for decameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for decimeter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for centimeter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for millimeter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for micrometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for nanometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for picometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for femtometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for attometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for zeptometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for yoctometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for foot_per_hour","synthetic":true,"types":[]},{"text":"impl Freeze for foot_per_minute","synthetic":true,"types":[]},{"text":"impl Freeze for foot_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for inch_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kilometer_per_hour","synthetic":true,"types":[]},{"text":"impl Freeze for knot","synthetic":true,"types":[]},{"text":"impl Freeze for mile_per_hour","synthetic":true,"types":[]},{"text":"impl Freeze for mile_per_minute","synthetic":true,"types":[]},{"text":"impl Freeze for mile_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for millimeter_per_minute","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_yottameter","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_zettameter","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_exameter","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_petameter","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_terameter","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_gigameter","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_megameter","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_kilometer","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_hectometer","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_decameter","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_meter","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_decimeter","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_centimeter","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_millimeter","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_micrometer","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_nanometer","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_picometer","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_femtometer","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_attometer","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_zeptometer","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_yoctometer","synthetic":true,"types":[]},{"text":"impl Freeze for acre_foot","synthetic":true,"types":[]},{"text":"impl Freeze for barrel","synthetic":true,"types":[]},{"text":"impl Freeze for bushel","synthetic":true,"types":[]},{"text":"impl Freeze for cord","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_foot","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_inch","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_mile","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_yard","synthetic":true,"types":[]},{"text":"impl Freeze for cup","synthetic":true,"types":[]},{"text":"impl Freeze for fluid_ounce","synthetic":true,"types":[]},{"text":"impl Freeze for fluid_ounce_imperial","synthetic":true,"types":[]},{"text":"impl Freeze for gallon_imperial","synthetic":true,"types":[]},{"text":"impl Freeze for gallon","synthetic":true,"types":[]},{"text":"impl Freeze for gill_imperial","synthetic":true,"types":[]},{"text":"impl Freeze for gill","synthetic":true,"types":[]},{"text":"impl Freeze for yottaliter","synthetic":true,"types":[]},{"text":"impl Freeze for zettaliter","synthetic":true,"types":[]},{"text":"impl Freeze for exaliter","synthetic":true,"types":[]},{"text":"impl Freeze for petaliter","synthetic":true,"types":[]},{"text":"impl Freeze for teraliter","synthetic":true,"types":[]},{"text":"impl Freeze for gigaliter","synthetic":true,"types":[]},{"text":"impl Freeze for megaliter","synthetic":true,"types":[]},{"text":"impl Freeze for kiloliter","synthetic":true,"types":[]},{"text":"impl Freeze for hectoliter","synthetic":true,"types":[]},{"text":"impl Freeze for decaliter","synthetic":true,"types":[]},{"text":"impl Freeze for liter","synthetic":true,"types":[]},{"text":"impl Freeze for deciliter","synthetic":true,"types":[]},{"text":"impl Freeze for centiliter","synthetic":true,"types":[]},{"text":"impl Freeze for milliliter","synthetic":true,"types":[]},{"text":"impl Freeze for microliter","synthetic":true,"types":[]},{"text":"impl Freeze for nanoliter","synthetic":true,"types":[]},{"text":"impl Freeze for picoliter","synthetic":true,"types":[]},{"text":"impl Freeze for femtoliter","synthetic":true,"types":[]},{"text":"impl Freeze for attoliter","synthetic":true,"types":[]},{"text":"impl Freeze for zeptoliter","synthetic":true,"types":[]},{"text":"impl Freeze for yoctoliter","synthetic":true,"types":[]},{"text":"impl Freeze for peck","synthetic":true,"types":[]},{"text":"impl Freeze for pint_dry","synthetic":true,"types":[]},{"text":"impl Freeze for pint_liquid","synthetic":true,"types":[]},{"text":"impl Freeze for quart_dry","synthetic":true,"types":[]},{"text":"impl Freeze for quart_liquid","synthetic":true,"types":[]},{"text":"impl Freeze for stere","synthetic":true,"types":[]},{"text":"impl Freeze for tablespoon","synthetic":true,"types":[]},{"text":"impl Freeze for teaspoon","synthetic":true,"types":[]},{"text":"impl Freeze for register_ton","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_yottameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_zettameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_exameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_petameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_terameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_gigameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_megameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_kilometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_hectometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_decameter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_meter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_decimeter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_centimeter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_millimeter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_micrometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_nanometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_picometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_femtometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_attometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_zeptometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_yoctometer_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for yottaliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for zettaliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for exaliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for petaliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for teraliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for gigaliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for megaliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for kiloliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for hectoliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for decaliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for liter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for deciliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for centiliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for milliliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for microliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for nanoliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for picoliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for femtoliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for attoliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for zeptoliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for yoctoliter_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for acre_foot_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for barrel_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for bushel_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cord_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_foot_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_foot_per_minute","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_inch_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_inch_per_minute","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_mile_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_yard_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for cubic_yard_per_minute","synthetic":true,"types":[]},{"text":"impl Freeze for cup_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for fluid_ounce_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for fluid_ounce_imperial_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for gallon_imperial_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for gallon_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for gallon_per_minute","synthetic":true,"types":[]},{"text":"impl Freeze for gallon_per_day","synthetic":true,"types":[]},{"text":"impl Freeze for gill_imperial_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for gill_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for peck_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for pint_dry_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for pint_liquid_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for quart_dry_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for quart_liquid_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for stere_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for tablespoon_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for teaspoon_per_second","synthetic":true,"types":[]},{"text":"impl Freeze for register_ton_per_second","synthetic":true,"types":[]},{"text":"impl&lt;D:&nbsp;?Sized, N&gt; Freeze for Arguments&lt;D, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D:&nbsp;?Sized, U:&nbsp;?Sized, V, N&gt; Freeze for QuantityArguments&lt;D, U, V, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D:&nbsp;?Sized, U:&nbsp;?Sized, V&gt; Freeze for Quantity&lt;D, U, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for DisplayStyle","synthetic":true,"types":[]},{"text":"impl Freeze for ParseQuantityError","synthetic":true,"types":[]},{"text":"impl Freeze for ConstantOp","synthetic":true,"types":[]}];
implementors["url"] = [{"text":"impl&lt;S&gt; Freeze for Host&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Origin","synthetic":true,"types":[]},{"text":"impl Freeze for OpaqueOrigin","synthetic":true,"types":[]},{"text":"impl Freeze for ParseError","synthetic":true,"types":[]},{"text":"impl Freeze for SyntaxViolation","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PathSegmentsMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Position","synthetic":true,"types":[]},{"text":"impl Freeze for Url","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ParseOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for UrlQuery&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["vec_arena"] = [{"text":"impl&lt;T&gt; Freeze for Arena&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V&gt; Freeze for VecMap&lt;V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for Entry&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for VacantEntry&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for OccupiedEntry&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for Iter&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for IterMut&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for Keys&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for Values&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for ValuesMut&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Freeze for IntoIter&lt;V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for Drain&lt;'a, V&gt;","synthetic":true,"types":[]}];
implementors["walkdir"] = [{"text":"impl Freeze for DirEntry","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for WalkDir","synthetic":true,"types":[]},{"text":"impl Freeze for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Freeze for FilterEntry&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["want"] = [{"text":"impl Freeze for Giver","synthetic":true,"types":[]},{"text":"impl Freeze for Taker","synthetic":true,"types":[]},{"text":"impl Freeze for SharedGiver","synthetic":true,"types":[]},{"text":"impl Freeze for Closed","synthetic":true,"types":[]}];
implementors["webpki"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for DNSName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DNSNameRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidDNSNameError","synthetic":true,"types":[]},{"text":"impl Freeze for SignatureAlgorithm","synthetic":true,"types":[]},{"text":"impl Freeze for Time","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for EndEntityCert&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TrustAnchor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TLSServerTrustAnchors&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TLSClientTrustAnchors&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["wyz"] = [{"text":"impl&lt;T&gt; Freeze for FmtBinary&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for FmtDisplay&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for FmtLowerExp&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for FmtLowerHex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for FmtOctal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for FmtPointer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for FmtUpperExp&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for FmtUpperHex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["xattr"] = [{"text":"impl Freeze for UnsupportedPlatformError","synthetic":true,"types":[]},{"text":"impl Freeze for XAttrs","synthetic":true,"types":[]}];
implementors["xml"] = [{"text":"impl&lt;'a&gt; Freeze for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Freeze for ReprDisplay&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedAttribute","synthetic":true,"types":[]},{"text":"impl Freeze for TextPosition","synthetic":true,"types":[]},{"text":"impl Freeze for XmlVersion","synthetic":true,"types":[]},{"text":"impl Freeze for Namespace","synthetic":true,"types":[]},{"text":"impl Freeze for NamespaceStack","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for NamespaceStackMappings&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CheckedTarget&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ParserConfig","synthetic":true,"types":[]},{"text":"impl Freeze for XmlEvent","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for EventReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Events&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for EmitterError","synthetic":true,"types":[]},{"text":"impl Freeze for EmitterConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for XmlEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for EndElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StartElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for EventWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["yaml_rust"] = [{"text":"impl Freeze for EmitError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for YamlEmitter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Parser&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for TEncoding","synthetic":true,"types":[]},{"text":"impl Freeze for TScalarStyle","synthetic":true,"types":[]},{"text":"impl Freeze for Marker","synthetic":true,"types":[]},{"text":"impl Freeze for ScanError","synthetic":true,"types":[]},{"text":"impl Freeze for TokenType","synthetic":true,"types":[]},{"text":"impl Freeze for Token","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Scanner&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Yaml","synthetic":true,"types":[]},{"text":"impl Freeze for YamlLoader","synthetic":true,"types":[]},{"text":"impl Freeze for YamlIter","synthetic":true,"types":[]}];
implementors["zip"] = [{"text":"impl Freeze for CompressionMethod","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for ZipArchive&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ZipFile&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidPassword","synthetic":true,"types":[]},{"text":"impl Freeze for ZipError","synthetic":true,"types":[]},{"text":"impl Freeze for DateTime","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for ZipWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for FileOptions","synthetic":true,"types":[]}];
implementors["zstd"] = [{"text":"impl Freeze for Compressor","synthetic":true,"types":[]},{"text":"impl Freeze for Decompressor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for EncoderDictionary&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DecoderDictionary&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Freeze for Decoder&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Freeze for Encoder&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Freeze for Encoder&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Freeze for Decoder&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Freeze for AutoFinishEncoder&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, D&gt; Freeze for Reader&lt;R, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, D&gt; Freeze for Writer&lt;W, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for NoOp","synthetic":true,"types":[]},{"text":"impl Freeze for Status","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Decoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Encoder&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["zstd_safe"] = [{"text":"impl&lt;'a&gt; Freeze for CCtx&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DCtx&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CDict&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DDict&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for InBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for OutBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for FrameFormat","synthetic":true,"types":[]},{"text":"impl Freeze for CParameter","synthetic":true,"types":[]},{"text":"impl Freeze for DParameter","synthetic":true,"types":[]}];
implementors["zstd_sys"] = [{"text":"impl Freeze for ZSTD_CCtx_s","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_DCtx_s","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_strategy","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_cParameter","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_bounds","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_ResetDirective","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_dParameter","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_inBuffer_s","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_outBuffer_s","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_EndDirective","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_CDict_s","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_DDict_s","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_CCtx_params_s","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_Sequence","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_compressionParameters","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_frameParameters","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_parameters","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_dictContentType_e","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_dictLoadMethod_e","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_format_e","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_forceIgnoreChecksum_e","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_refMultipleDDicts_e","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_dictAttachPref_e","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_literalCompressionMode_e","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_sequenceFormat_e","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_customMem","synthetic":true,"types":[]},{"text":"impl Freeze for POOL_ctx_s","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_frameProgression","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_frameType_e","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_frameHeader","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTD_nextInputType_e","synthetic":true,"types":[]},{"text":"impl Freeze for ZDICT_params_t","synthetic":true,"types":[]},{"text":"impl Freeze for ZDICT_cover_params_t","synthetic":true,"types":[]},{"text":"impl Freeze for ZDICT_fastCover_params_t","synthetic":true,"types":[]},{"text":"impl Freeze for ZDICT_legacy_params_t","synthetic":true,"types":[]},{"text":"impl Freeze for __locale_struct","synthetic":true,"types":[]},{"text":"impl Freeze for ZSTDMT_CCtx_s","synthetic":true,"types":[]},{"text":"impl Freeze for __locale_data","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()