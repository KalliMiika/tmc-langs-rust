initSidebarItems({"enum":[["AuthType","Indicates whether requests to the authorization server should use basic authentication or include the parameters in the request body for requests in which either is valid."],["RequestTokenError","Error encountered while requesting access token."]],"mod":[["basic","Basic OAuth2 implementation with no extensions (RFC 6749)."],["helpers","Helper methods used by OAuth2 implementations/extensions."],["insecure","Insecure methods -- not recommended for most applications."],["prelude","Crate prelude that should be wildcard-imported by crate users."]],"struct":[["AccessToken","Access token returned by the token endpoint and used to access protected resources."],["AuthUrl","URL of the authorization server's authorization endpoint."],["AuthorizationCode","Authorization code returned from the authorization endpoint."],["Client","Stores the configuration for an OAuth2 client."],["ClientId","Client identifier issued to the client during the registration process described by Section 2.2."],["ClientSecret","Client password issued to the client during the registration process described by Section 2.2."],["CsrfToken","Value used for CSRF protection via the `state` parameter."],["EmptyExtraTokenFields","Empty (default) extra token fields."],["ErrorResponse","Error response returned by server after requesting an access token."],["PkceCodeChallengeMethod","Code Challenge Method used for PKCE protection via the `code_challenge_method` parameter."],["PkceCodeChallengeS256","Code Challenge used for PKCE protection via the `code_challenge` parameter."],["PkceCodeVerifierS256","Code Verifier used for PKCE protection via the `code_verifier` parameter. The value must have a minimum length of 43 characters and a maximum length of 128 characters.  Each character must be ASCII alphanumeric or one of the characters \"-\" / \".\" / \"_\" / \"~\"."],["RedirectUrl","URL of the client's redirection endpoint."],["RefreshToken","Refresh token used to obtain a new access token (if supported by the authorization server)."],["ResourceOwnerPassword","Resource owner's password used directly as an authorization grant to obtain an access token."],["ResourceOwnerUsername","Resource owner's username used directly as an authorization grant to obtain an access token."],["ResponseType","Authorization endpoint response (grant) type defined in Section 3.1.1."],["Scope","Access token scope, as defined by the authorization server."],["StandardTokenResponse","Standard OAuth2 token response."],["TokenUrl","URL of the authorization server's token endpoint."]],"trait":[["ErrorResponseType","Error types enum."],["ExtraTokenFields","Trait for adding extra fields to the `TokenResponse`."],["TokenResponse","Common methods shared by all OAuth2 token implementations."],["TokenType","Trait for OAuth2 access tokens."]]});